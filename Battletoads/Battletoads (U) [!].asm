
; ---------------------------------------------------------------------------

; enum level_names
intro:		 = 0
ragnarok_canyon: = 1
wookie_hole:	 = 2
TurboTunnel:	 = 3
arctic_caverns:	 = 4
revolution:	 = 5
volkmire_inferno: = 6
intruder_excluder: = 7
karnath_lair:	 = 8
rat_race:	 = 9
clinger_winger:	 = $A
terra_tubes:	 = $B
SurfCity:	 = $C
armageddon:	 = $D

; ---------------------------------------------------------------------------

; enum obj_state (bitfield)
state_1:	 = 1
state_2:	 = 2
state_4:	 = 4
state_8:	 = 8
state_10:	 = $10
have_stick:	 = $20
damaged_heavy:	 = $40
making_damage:	 = $80

; ---------------------------------------------------------------------------

; enum buttons (bitfield)
button_right:	 = 1
button_left:	 = 2
button_down:	 = 4
button_up:	 = 8
button_start:	 = $10
button_select:	 = $20
button_B:	 = $40
button_A:	 = $80

; ---------------------------------------------------------------------------

; enum obj_flags (bitfield)
obj_flags_1:	 = 1
obj_flags_2:	 = 2
obj_flags_4:	 = 4
obj_flags_8:	 = 8
is_running:	 = $10
obj_flags_20:	 = $20
turned_left:	 = $40
obj_flags_80:	 = $80

; ---------------------------------------------------------------------------

; enum sound_ch
snd_channel1:	 = $C
snd_channel2:	 = $F
snd_channel3:	 = $12
snd_channel4:	 = $15

;
; +-------------------------------------------------------------------------+
; |	This file is generated by The Interactive Disassembler (IDA)	    |
; |	Copyright (c) 2007 by DataRescue sa/nv,	<ida@datarescue.com>	    |
; | Licensed to: Mach EDV Dienstleistungen, Jan	Mach, 1	user, adv, 11/2007  |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	BBAFEAD19C25B38A5A129BB8C51AAF8D

; Format      :	Famicom/NES emulator iNES ROM file
; Mapper      :	7
; 16k Banks   :	16
; NMI vector  :	$FF98
; RESET	vector:	$FFF2
; IRQ vector  :	$FF3F

 .db "NES", $1a	;identification	of the iNES header
 .db $10 ;number of 16KB PRG-ROM pages
 .db $00 ;number of 8KB	CHR-ROM	pages
 .db $70 ;mapper 7
 .dsb 9, $00 ;clear the	remaining bytes

enum 0

; ; Processor:	      M6502
; ; Target assembler: SVENSON ELECTRONICS 6502/65C02 ASSEMBLER - V.1.0 - MAY, 1988

; ===========================================================================

; Segment type:	Regular
		;.segment RAM
tmp_var_00:	.BYTE 0	; (uninited)	; ...
tmp_var_01:	.BYTE 0	; (uninited)	; ...
tmp_var_02:	.BYTE 0	; (uninited)	; ...
tmp_var_03:	.BYTE 0	; (uninited)	; ...
tmp_var_04:	.BYTE 0	; (uninited)	; ...
tmp_var_05:	.BYTE 0	; (uninited)	; ...
tmp_var_06:	.BYTE 0	; (uninited)	; ...
					; music	ptr
tmp_var_07:	.BYTE 0	; (uninited)	; ...
tmp_var_08:	.BYTE 0	; (uninited)	; ...
ppu_ctrl1_val:	.BYTE 0	; (uninited)	; ...
					;  > $80  кадр завершен
ppu_ctrl2_val:	.BYTE 0	; (uninited)	; ...
FrameCounter:	.BYTE 0	; (uninited)	; ...
FrameCounter_Even:.BYTE	0 ; (uninited)	; ...
					; счетчик каждого второго кадра
Levels_passed_cnt:.BYTE	0 ; (uninited)	; ...
Continues_Player1:.BYTE	0 ; (uninited)	; ...
Continues_Player2:.BYTE	0 ; (uninited)	; ...
Level_ID:	.BYTE 0	; (uninited)	; ...
Lives_Player1:	.BYTE 0	; (uninited)	; ...
					; кол-во жизней	(сердечек)
Lives_Player2:	.BYTE 0	; (uninited)	; ...
					; кол-во жизней	(сердечек)
JumpTable_ptr_main:.BYTE 0,0 ; (uninited) ; ...
					; указатель на функцию при переходе в другой банк
tmp_var_15:	.BYTE 0	; (uninited)	; ...
					;  / Object Counter / various tmp
tmp_var_16:	.BYTE 0	; (uninited)	; ...
tmp_var_17:	.BYTE 0	; (uninited)	; ...
tmp_var_18:	.BYTE 0	; (uninited)	; ...
tmp_var_19:	.BYTE 0	; (uninited)	; ...
tmp_var_1A:	.BYTE 0	; (uninited)	; ...
tmp_var_1B:	.BYTE 0	; (uninited)	; ...
tmp_var_1C:	.BYTE 0	; (uninited)	; ...
tmp_var_1D:	.BYTE 0	; (uninited)	; ...
tmp_var_1E:	.BYTE 0	; (uninited)	; ...
tmp_var_1F:	.BYTE 0	; (uninited)	; ...
tmp_var_20:	.BYTE 0	; (uninited)	; ...
tmp_var_21:	.BYTE 0	; (uninited)	; ...
tmp_var_22:	.BYTE 0	; (uninited)	; ...
jump_ptr_nmi:	.BYTE 0,0 ; (uninited)	; ...
					; поинтер на функцию во	время nmi
RandomValue_1:	.BYTE 0	; (uninited)	; ...
RandomValue_2:	.BYTE 0	; (uninited)	; ...
RandomValue_3:	.BYTE 0	; (uninited)	; ...
RandomValue_4:	.BYTE 0	; (uninited)	; ...
InputHold_P1:	.BYTE 0	; (uninited)	; ...
					; данные первого джойстика на зажатие
InputHold_P2:	.BYTE 0	; (uninited)	; ...
					; данные второго джойстика на зажатие
InputTap_P1:	.BYTE 0	; (uninited)	; ...
					; данные первого джойстика на нажатие
InputTap_P2:	.BYTE 0	; (uninited)	; ...
					; данные второго джойстика на нажатие
previous_bankID:.BYTE 0	; (uninited)	; ...
previous_bankID_NMI:.BYTE 0 ; (uninited) ; ...
stackp_save:	.BYTE 0	; (uninited)	; ...
vram_inc_for_maps:.BYTE	0 ; (uninited)	; ...
		.BYTE 0	; (uninited)
music_id_and_play_cnt:.BYTE 0 ;	(uninited) ; ...
music_speed:	.BYTE 0	; (uninited)	; ...
music_play_upd_flag:.BYTE 0 ; (uninited) ; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
snd_data_ptr_tmp:.BYTE 0,0 ; (uninited)	; ...
					; ptr to rom track data
snd_tmp_var_39:	.BYTE 0	; (uninited)	; ...
snd_tmp_var_3A:	.BYTE 0	; (uninited)	; ...
snd_tmp_var_3B:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
prev_bank_id_m:	.BYTE 0	; (uninited)	; ...
					; saves	mirror,	when jump from bank 0 to bank3 to music	f
wait_after_pcm_cnt:.BYTE 0 ; (uninited)	; ...
nmi_pcm_flags:	.BYTE 0	; (uninited)	; ...
pcm_dat_off:	.BYTE 0	; (uninited)	; ...
pcm_info1:	.BYTE 0	; (uninited)	; ...
					; some add value
pcm_play_var_43:.BYTE 0	; (uninited)	; ...
pcm_play_var_44:.BYTE 0	; (uninited)	; ...
jump_ptr_pcm:	.BYTE 0,0 ; (uninited)	; ...
pcm_play_var_47:.BYTE 0	; (uninited)	; ...
pcm_play_var_48:.BYTE 0	; (uninited)	; ...
pcm_play_var_49:.BYTE 0	; (uninited)	; ...
pcm_play_var_4A:.BYTE 0	; (uninited)	; ...
pcm_play_var_4B:.BYTE 0	; (uninited)	; ...
pcm_play_var_4C:.BYTE 0	; (uninited)	; ...
pcm_play_var_4D:.BYTE 0	; (uninited)	; ...
pcm_play_var_4E:.BYTE 0	; (uninited)	; ...
pcm_info2:	.BYTE 0	; (uninited)	; ...
					; time?
pcm_info2_cnt:	.BYTE 0	; (uninited)	; ...
					; length timer?
pcm_unknown:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
palette_ram:	.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited) ; ...
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
NMI_Areg_saver:	.BYTE 0	; (uninited)	; ...
NMI_Xreg_saver:	.BYTE 0	; (uninited)	; ...
NMI_Yreg_saver:	.BYTE 0	; (uninited)	; ...
Obj_Amindata1_tmp:.BYTE	0 ; (uninited)	; ...
Obj_Amindata2_tmp:.BYTE	0 ; (uninited)	; ...
Obj_Amindata3_tmp:.BYTE	0 ; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
bank5_yreg_saver:.BYTE 0 ; (uninited)	; ...
global_var_cnt?:.BYTE 0	; (uninited)	; ...
Object_RamSlotID_tmp:.BYTE 0 ; (uninited) ; ...
					; id saved for objects functions
Vscroll_value:	.BYTE 0	; (uninited)	; ...
					; $00-$EF
Vscroll_plus_BG_Y:.BYTE	0 ; (uninited)	; ...
new_scroll_vram_H:.BYTE	0 ; (uninited)	; ...
new_scroll_vram_L:.BYTE	0 ; (uninited)	; ...
Camera_X_pos_l:	.BYTE 0	; (uninited)	; ...
					;  / level_position - on h levels
Camera_X_pos_H:	.BYTE 0	; (uninited)	; ...
Camera_Y_pos_l:	.BYTE 0	; (uninited)	; ...
					;  / level_position - on v levels
Camera_Y_pos_H:	.BYTE 0	; (uninited)	; ...
tmp_var_8b:	.BYTE 0	; (uninited)	; ...
tmp_var_8c:	.BYTE 0	; (uninited)	; ...
tmp_var_8d:	.BYTE 0	; (uninited)	; ...
tmp_var_8e:	.BYTE 0	; (uninited)	; ...
					; count	of spr to change pal
tmp_var_8F:	.BYTE 0	; (uninited)	; ...
tmp_var_90:	.BYTE 0	; (uninited)	; ...
					; obj_dir_tmp (для спрайтов - направление объекта)
tmp_var_91:	.BYTE 0	; (uninited)	; ...
tmp_var_92:	.BYTE 0	; (uninited)	; ...
Camera_X_old:	.BYTE 0	; (uninited)	; ...
Camera_Y_old:	.BYTE 0	; (uninited)	; ...
upd_gfx_flag2:	.BYTE 0	; (uninited)	; ...
					; what to update - attrib,pal or someelse
ppu_adr_sbar_H:	.BYTE 0	; (uninited)	; ...
ppu_adr_map_h:	.BYTE 0	; (uninited)	; ...
ppu_adr_map_l:	.BYTE 0	; (uninited)	; ...
tmp_var_99:	.BYTE 0	; (uninited)	; ...
tmp_var_9A:	.BYTE 0	; (uninited)	; ...
tmp_var_9B:	.BYTE 0	; (uninited)	; ...
gfxcopy_vram_ptrh:.BYTE	0 ; (uninited)	; ...
					; $00 or $01 for pl; $16 - anims
gfxcopy_vram_ptrl:.BYTE	0 ; (uninited)	; ...
					; $10 for pl; $C0/$80 anims
obj_slotIDs_for_spr:.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	; (uninited) ; ...
					; not really used/removed in BTDD
obj_ZposL_tmp:	.BYTE 0	; (uninited)	; ...
obj_ZposH_tmp:	.BYTE 0	; (uninited)	; ...
Obj_Z_floor_tmp:.BYTE 0	; (uninited)	; ...
camera_pos_inf?:.BYTE 0	; (uninited)	; ...
Camera_Y_pos_l_2:.BYTE 0 ; (uninited)	; ...
camera_lock_cnt:.BYTE 0	; (uninited)	; ...
bkg_upd_buff_cnt:.BYTE 0 ; (uninited)	; ...
					; X * 4	times
wait_after_bkg_upd_cnt:.BYTE 0 ; (uninited) ; ...
level1_some_cnt:.BYTE 0	; (uninited)	; ...
upd_tilemaps_flags:.BYTE 0 ; (uninited)	; ...
					; 1=update tiles flag, 81 - update atrib flag
LevelCfgAdr_L:	.BYTE 0	; (uninited)	; ...
					; текущий адрес	рома для чтения	объектов уровня
LevelCfgAdr_H:	.BYTE 0	; (uninited)	; ...
global_counter:	.BYTE 0	; (uninited)	; ...
global_flags:	.BYTE 0	; (uninited)	; ...
global_var1:	.BYTE 0	; (uninited)	; ...
global_var2:	.BYTE 0	; (uninited)	; ...
global_var3:	.BYTE 0	; (uninited)	; ...
global_var4:	.BYTE 0	; (uninited)	; ...
global_var5:	.BYTE 0	; (uninited)	; ...
global_var6:	.BYTE 0	; (uninited)	; ...
global_var7:	.BYTE 0	; (uninited)	; ...
check_xz0:	.BYTE 0	; (uninited)	; ...
lvl_blk_attrib_ptr_l:.BYTE 0 ; (uninited) ; ...
					; attributes of	32x32 block
lvl_blk_attrib_ptr_h:.BYTE 0 ; (uninited) ; ...
lvl_blk_tiles_ptr_l:.BYTE 0 ; (uninited) ; ...
					; tiles	of 32x32 block
lvl_blk_tiles_ptr_h:.BYTE 0 ; (uninited) ; ...
X_block_lenght:	.BYTE 0	; (uninited)	; ...
					; level	horiz. lenght (count 32x32 blocks by X)
tmp_var_c8:	.BYTE 0	; (uninited)	; ...
pal_reduce_value:.BYTE 0 ; (uninited)	; ...
					; dec to color value
		.BYTE 0	; (uninited)
pal_vram_upd_off:.BYTE 0 ; (uninited)	; ...
					; BKG=$00, SPR=$10
extra_vblank_flags:.BYTE 0 ; (uninited)	; ...
					; $80-extra vblank; 1-parallax animations
update_p1_p2_gfx:.BYTE 0 ; (uninited)	; ...
timer_cont_scrn_sec:.BYTE 0 ; (uninited) ; ...
					; seconds
timer_cont_scrn_60:.BYTE 0 ; (uninited)	; ...
					; frames
update_ui_flag:	.BYTE 0	; (uninited)	; ...
flag_boss_1:	.BYTE 0	; (uninited)	; ...
lvl_moving?:	.BYTE 0	; (uninited)	; ...
camera_speed?:	.BYTE 0	; (uninited)	; ...
bikes_speed_sub:.BYTE 0	; (uninited)	; ...
bikes_speed:	.BYTE 0	; (uninited)	; ...
bikes_acc_cnt:	.BYTE 0	; (uninited)	; ...
gfx_buff_off:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
some_lvl_flag_cnt:.BYTE	0 ; (uninited)	; ...
					; 0-air,1-h_surf,2-right,3-left	naklon
some_for_Z?:	.BYTE 0	; (uninited)	; ...
some_counter:	.BYTE 0	; (uninited)	; ...
some_sound_flag:.BYTE 0	; (uninited)	; ...
					; by tables
some_anim_tmp?:	.BYTE 0	; (uninited)	; ...
hit_Z_table_index:.BYTE	0 ; (uninited)	; ...
					; index	for Z collision	tbl
tmp_var_DF:	.BYTE 0	; (uninited)	; ...
tmp_var_E0:	.BYTE 0	; (uninited)	; ...
tmp_var_E1:	.BYTE 0	; (uninited)	; ...
tmp_var_E2:	.BYTE 0	; (uninited)	; ...
turbotunnel_X_flag:.BYTE 0 ; (uninited)	; ...
					; =1, if camH=$DD
stop_scroll_flag:.BYTE 0 ; (uninited)	; ...
Level_CfgAdr_new:.BYTE 0 ; (uninited)	; ...
					; адрес	конфига	уровня от чекпоинта
Level_CfgAdr_newH:.BYTE	0 ; (uninited)	; ...
tunnel_unk_p1:	.BYTE 0	; (uninited)	; ...
tunnel_unk_p2:	.BYTE 0	; (uninited)	; ...
players_cnt_unk:.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
timer_end_music:.BYTE 0	; (uninited)	; ...
cnt_unk_pl1:	.BYTE 0	; (uninited)	; ...
cnt_unk_pl2:	.BYTE 0	; (uninited)	; ...
inferno_race_create_flg:.BYTE 0	; (uninited) ; ...
					; 2=created
obj_slotID_for_scroll:.BYTE 0 ;	(uninited) ; ...
restart_point_id:.BYTE 0 ; (uninited)	; ...
karnath_gfx_base:.BYTE 0 ; (uninited)	; ...
karnath_gfx_base_add:.BYTE 0 ; (uninited) ; ...
rat_slot_id:	.BYTE 0	; (uninited)	; ...
game_end_caller_var:.BYTE 0 ; (uninited) ; ...
bkg_vs_spr_pos_neg:.BYTE 0 ; (uninited)	; ...
pause_flag:	.BYTE 0	; (uninited)	; ...
pause_snd_cnt1:	.BYTE 0	; (uninited)	; ...
pause_snd_cnt2:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
scroll_info_unused:.BYTE 0 ; (uninited)	; ...
load_flag2:	.BYTE 0	; (uninited)	; ...
cont_screen_cnt:.BYTE 0	; (uninited)	; ...
second_load:	.BYTE 0	; (uninited)	; ...
					; 0 after reset, 1 if restart
scroll_tilemap_buff:.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ; (uninited) ; ...
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
attributes_buff:.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited) ; ...
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
bkg_update_buff:.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited) ; ...
bkg_update_buff2:.BYTE 0,0,0,0,0,0,0,0 ; (uninited) ; ...
bkg_upd_buff2a_adr_h:.BYTE 0,0,0,0 ; (uninited)	; ...
bkg_upd_buff2a_adr_l:.BYTE 0 ; (uninited) ; ...
		.BYTE 0	; (uninited)
bkg_upd_buff2a_adr_l3:.BYTE 0 ;	(uninited) ; ...
bkg_upd_buff2a_adr_l4:.BYTE 0 ;	(uninited) ; ...
bkg_update_buff3:.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ; (uninited) ; ...
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
attribs_tmp:	.BYTE 0,0,0,0,0,0,0,0,0	; (uninited) ; ...
status_bar_buff:.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited) ; ...
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
stack:		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0 ; (uninited)
Sprites_Ypos:	.BYTE 0	; (uninited)	; ...
Sprites_Adress:	.BYTE 0	; (uninited)	; ...
Sprites_Attrib:	.BYTE 0	; (uninited)	; ...
Sprites_Xpos:	.BYTE 0	; (uninited)	; ...
sprite2_Ypos:	.BYTE 0	; (uninited)	; ...
sprite2_adress:	.BYTE 0	; (uninited)	; ...
sprite2_attrib:	.BYTE 0	; (uninited)	; ...
sprite2_Xpos:	.BYTE 0	; (uninited)	; ...
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0	; (uninited)
sprite6_adress:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
sprite7_adress:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0	; (uninited)
sprite14_adress:.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
sprite15_Ypos:	.BYTE 0	; (uninited)	; ...
sprite15_adress:.BYTE 0	; (uninited)	; ...
sprite15_attrib:.BYTE 0	; (uninited)	; ...
sprite15_Xpos:	.BYTE 0	; (uninited)	; ...
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0 ;	(uninited)
		.BYTE 0	; (uninited)
music_active_flag:.BYTE	0 ; (uninited)	; ...
					; channel is used
music_ch_wait_cnt?:.BYTE 0 ; (uninited)	; ...
music_track_ptr_l:.BYTE	0 ; (uninited)	; ...
music_track_ptr_h:.BYTE	0 ; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
sounds_ids:	.BYTE 0	; (uninited)	; ...
sounds_ids_2:	.BYTE 0	; (uninited)	; ...
sounds_ids_3:	.BYTE 0	; (uninited)	; ...
sounds_ids_4:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
sound_id_D:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
sounds_r_4000:	.BYTE 0	; (uninited)	; ...
sounds_r_4001_:	.BYTE 0	; (uninited)	; ...
sounds_r_4002:	.BYTE 0	; (uninited)	; ...
sounds_r_4003:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
sound_reg_4000:	.BYTE 0	; (uninited)	; ...
sound_reg_4001:	.BYTE 0	; (uninited)	; ...
					; #$55 = flag play sound?
sound_reg_4002:	.BYTE 0	; (uninited)	; ...
sound_reg_4003:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
byte_0_341:	.BYTE 0	; (uninited)	; ...
byte_0_342:	.BYTE 0	; (uninited)	; ...
byte_0_343:	.BYTE 0	; (uninited)	; ...
byte_0_344:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
byte_0_351:	.BYTE 0	; (uninited)	; ...
byte_0_352:	.BYTE 0	; (uninited)	; ...
byte_0_353:	.BYTE 0	; (uninited)	; ...
byte_0_354:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
byte_0_358:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
byte_0_35C:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
byte_0_360:	.BYTE 0	; (uninited)	; ...
byte_0_361:	.BYTE 0	; (uninited)	; ...
byte_0_362:	.BYTE 0	; (uninited)	; ...
byte_0_363:	.BYTE 0	; (uninited)	; ...
byte_0_364:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
byte_0_371:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
byte_0_373:	.BYTE 0	; (uninited)	; ...
byte_0_374:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
byte_0_381:	.BYTE 0	; (uninited)	; ...
byte_0_382:	.BYTE 0	; (uninited)	; ...
byte_0_383:	.BYTE 0	; (uninited)	; ...
byte_0_384:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
byte_0_391:	.BYTE 0	; (uninited)	; ...
byte_0_392:	.BYTE 0	; (uninited)	; ...
byte_0_393:	.BYTE 0	; (uninited)	; ...
byte_0_394:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
byte_0_3A1:	.BYTE 0	; (uninited)	; ...
byte_0_3A2:	.BYTE 0	; (uninited)	; ...
byte_0_3A3:	.BYTE 0	; (uninited)	; ...
byte_0_3A4:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
byte_0_3A8:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
byte_0_3AC:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
snd_some_lastvar:.BYTE 0 ; (uninited)	; ...
players_obj_unk1:.BYTE 0 ; (uninited)	; ...
		.BYTE 0	; (uninited)
player1_eye_clos:.BYTE 0 ; (uninited)	; ...
		.BYTE 0	; (uninited)
player1_obj_wanted_frame:.BYTE 0 ; (uninited) ;	...
player2_obj_wanted_frame:.BYTE 0 ; (uninited) ;	...
players_obj_un5:.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
players_tongue_dir:.BYTE 0 ; (uninited)	; ...
		.BYTE 0	; (uninited)
players_obj_un3:.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
players_obj_un2:.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
players_obj_unk:.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
Objects_TypeID:	.BYTE 0	; (uninited)	; ...
player2_TypeID:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_gfx_frame:.BYTE	0 ; (uninited)	; ...
player2_gfx_frame:.BYTE	0 ; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Obj_various_cnt:.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Object15_unk_cnt:.BYTE 0 ; (uninited)	; ...
Objects_Xpos_H:	.BYTE 0	; (uninited)	; ...
player2_Xpos_H:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Object14_Xpos_H:.BYTE 0	; (uninited)	; ...
Objects_Xpos_L:	.BYTE 0	; (uninited)	; ...
player2_Xpos_L:	.BYTE 0	; (uninited)	; ...
object_3_Xpos_L:.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_Ypos_H:	.BYTE 0	; (uninited)	; ...
player2_Ypos_H:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
byte_0_413:	.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_Ypos_L:	.BYTE 0	; (uninited)	; ...
player2_Ypos_L:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_Zpos_H:	.BYTE 0	; (uninited)	; ...
player2_Zpos_H:	.BYTE 0	; (uninited)	; ...
object_3_Zpos_H:.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_Zpos_L:	.BYTE 0	; (uninited)	; ...
player2_Zpos_L:	.BYTE 0	; (uninited)	; ...
object_3_Zpos_L:.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_X_sub:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_Y_sub:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_Z_sub:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
object3_Z_sub:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_Z_floor:.BYTE 0	; (uninited)	; ...
player2_Z_floor:.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_X_shadow:.BYTE 0 ; (uninited)	; ...
player2_X_shadow:.BYTE 0 ; (uninited)	; ...
object3_X_shadow:.BYTE 0 ; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_Y_shad:	.BYTE 0	; (uninited)	; ...
player2_Y_shadow:.BYTE 0 ; (uninited)	; ...
object3_Y_shadow:.BYTE 0 ; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_Flags:	.BYTE 0	; (uninited)	; ...
					; $40 -	turned left; $10 - running; $80	- delete?
player2_flags:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_state:	.BYTE 0	; (uninited)	; ...
					; $20 -have stick,$40-damaged heavy,$80-making damage
player2_state:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_Z_speed:.BYTE 0	; (uninited)	; ...
player2_Z_speed:.BYTE 0	; (uninited)	; ...
object3_Z_speed:.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_Z_spd_sub:.BYTE	0 ; (uninited)	; ...
		.BYTE 0	; (uninited)
player2_Z_spd_sub:.BYTE	0 ; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_cnt2:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_cnt3:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_AnimID:	.BYTE 0	; (uninited)	; ...
					; номер	движения для запуска
player2_AnimID:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_Anim_Ptr:.BYTE 0 ; (uninited)	; ...
					; оффсет чтения	анимации
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_Life:	.BYTE 0	; (uninited)	; ...
player2_Life:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_Linker_ID:.BYTE	0 ; (uninited)	; ...
					; флаг/id какой	объект меня прицепил
player2_Linker2_ID:.BYTE 0 ; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_LinkedObj_ID:.BYTE 0 ; (uninited) ; ...
					; флаг/id присоединённого объекта
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Obj_anims_timer:.BYTE 0	; (uninited)	; ...
					; timer	used for gfx frames
pl2_anims_timer:.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_dir:	.BYTE 0	; (uninited)	; ...
					; / angle
player2_dir:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_X_speed:.BYTE 0	; (uninited)	; ...
player2_X_speed:.BYTE 0	; (uninited)	; ...
object_2_X_speed:.BYTE 0 ; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_death_timer:.BYTE 0 ; (uninited) ; ...
					; undamage time
pl2_death_timer:.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
objects_some_anim:.BYTE	0 ; (uninited)	; ...
					; some obj X speed
		.BYTE 0	; (uninited)
object2_some_anim:.BYTE	0 ; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_TargetID:.BYTE 0 ; (uninited)	; ...
player2_TargetID:.BYTE 0 ; (uninited)	; ...
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
Objects_various_flags:.BYTE 0 ;	(uninited) ; ...
					; для пушек ID прицепленного объекта
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
		.BYTE 0	; (uninited)
players_obj_unk3:.BYTE 0 ; (uninited)	; ...
		.BYTE 0	; (uninited)
player1_endLvL_timer:.BYTE 0 ; (uninited) ; ...
player2_endLvL_timer:.BYTE 0 ; (uninited) ; ...
players_obj_unk5:.BYTE 0 ; (uninited)	; ...
		.BYTE 0	; (uninited)
players_obj_unk6:.BYTE 0 ; (uninited)	; ...
		.BYTE 0	; (uninited)
players_obj_unk7:.BYTE 0 ; (uninited)	; ...
player2_unk_7:	.BYTE 0	; (uninited)	; ...
players_obj_unk8:.BYTE 0 ; (uninited)	; ...
player2_unk_var:.BYTE 0	; (uninited)	; ...
pl1_or_pl2_xz:	.BYTE 0	; (uninited)	; ...
					; clinger winger
player1_updown_slide_cnt:.BYTE 0 ; (uninited) ;	...
		.BYTE 0	; (uninited)
player1_unused?:.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
player1_razdvalen_flag?:.BYTE 0	; (uninited) ; ...
					; frame	56
		.BYTE 0	; (uninited)
players_shock_timer:.BYTE 0 ; (uninited) ; ...
		.BYTE 0	; (uninited)
players_gas_slot?:.BYTE	0 ; (uninited)	; ...
		.BYTE 0	; (uninited)
players_obj_unk14:.BYTE	0 ; (uninited)	; ...
player2_obj_unk14:.BYTE	0 ; (uninited)	; ...
players_slizen_id:.BYTE	0 ; (uninited)	; ...
		.BYTE 0	; (uninited)
some_ptr_saver_h:.BYTE 0 ; (uninited)	; ...
some_ptr_saver_l:.BYTE 0 ; (uninited)	; ...
some_dat_saver:	.BYTE 0	; (uninited)	; ...
players_obj_unk16:.BYTE	0 ; (uninited)	; ...
player2_obj_unk16:.BYTE	0 ; (uninited)	; ...
player1_water_flag:.BYTE 0 ; (uninited)	; ...
					; $80 -	in water (terra	tubes)
		.BYTE 0	; (uninited)
lvl_cam_base_X_l:.BYTE 0 ; (uninited)	; ...
					; 7
lvl_cam_base_Y_l:.BYTE 0 ; (uninited)	; ...
					; $F0
lvl_vram_inc_by_scrl:.BYTE 0 ; (uninited) ; ...
					; 01
lvl_cam_base_X_h:.BYTE 0 ; (uninited)	; ...
					; 00
		.BYTE 0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0 ;	(uninited)
obj_scrl_cam_X_l:.BYTE 0 ; (uninited)	; ...
obj_scrl_cam_Y_l:.BYTE 0 ; (uninited)	; ...
obj_scrl_vram_inc:.BYTE	0 ; (uninited)	; ...
obj_scrl_cam_X_h:.BYTE 0 ; (uninited)	; ...
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0 ; (uninited) ; unused?
Score_Player1_100k:.BYTE 0 ; (uninited)	; ...
Score_Player1_10k:.BYTE	0 ; (uninited)	; ...
Score_Player1_1k:.BYTE 0 ; (uninited)	; ...
Score_Player1_100:.BYTE	0 ; (uninited)	; ...
Score_Player1_10:.BYTE 0 ; (uninited)	; ...
Score_Player1_1:.BYTE 0	; (uninited)	; ...
Score_Player2:	.BYTE 0,0,0,0,0,0 ; (uninited) ; ...
level_ram1:	.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited) ; ...
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
level_ram2:	.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited) ; ...
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
tmp_buffer:	.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited) ; ...
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
tmp_buffer2:	.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited) ; ...
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
gfx_buff_adr_h:	.BYTE 0	; (uninited)	; ...
gfx_buff_adr_l:	.BYTE 0	; (uninited)	; ...
gfx_buff_dat1:	.BYTE 0	; (uninited)	; ...
gfx_buff_dat2:	.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0	; (uninited) ; ...
byte_0_710:	.BYTE 0	; (uninited)	; ...
		.BYTE 0	; (uninited)
byte_0_712:	.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0 ; (uninited) ; ...
byte_0_720:	.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited) ; ...
byte_0_730:	.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited) ; ...
byte_0_740:	.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited) ; ...
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0 ; (uninited)
ram_gfx_copy_code:.BYTE	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	; (uninited) ; ...
		.BYTE 0,0,0,0 ;	(uninited)
gfx_copy_adrL:	.BYTE 0	; (uninited)	; ...
					; Суда пишутся оффсеты рома, которые используются в RAM	коде для записи	графики	в ppu,
					; 1 раз	записывается оффсет, и далее через 6 байт тоже но уже +1,и так 16 раз.
					; В команду LDY	$8030,X	 записываются 8030.
gfx_copy_adrH:	.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited) ; ...
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;	(uninited)
		.BYTE 0,0,0,0,0,0,0,0,0	; (uninited)
; end of 'RAM'

enum $2000
; ===========================================================================

; Segment type:	Regular
		;.segment PPU_Registers
PPU_CTRL_REG1:	.BYTE 0	; (uninited)	; ...
					; PPU Control Register #1 (W)
PPU_CTRL_REG2:	.BYTE 0	; (uninited)	; ...
					; PPU Control Register #2 (W)
PPU_STATUS:	.BYTE 0	; (uninited)	; ...
					; PPU Status Register (R)
PPU_SPR_ADDR:	.BYTE 0	; (uninited)	; ...
					; SPR-RAM Address Register (W)
PPU_SPR_DATA:	.BYTE 0	; (uninited)	; SPR-RAM I/O Register (W)
PPU_SCROLL_REG:	.BYTE 0	; (uninited)	; ...
					; VRAM Address Register	#1 (W2)
PPU_ADDRESS:	.BYTE 0	; (uninited)	; ...
					; VRAM Address Register	#2 (W2)
PPU_DATA:	.BYTE 0	; (uninited)	; ...
; end of 'PPU_Registers'                ; VRAM I/O Register (RW)

ende
enum $4000
; ===========================================================================

; Segment type:	Regular
		;.segment Misc_Registers
SND_SQUARE1_REG:.BYTE 0	; (uninited)	; ...
					; pAPU Pulse #1	Control	Register (W)
pAPU_Pulse1_Ramp_Control_Reg:.BYTE 0 ; (uninited) ; ...
					; pAPU Pulse #1	Ramp Control Register (W)
pAPU_Pulse1__FT__Reg:.BYTE 0 ; (uninited) ; ...
					; pAPU Pulse #1	Fine Tune (FT) Register	(W)
pAPU_Pulse1__CT__Reg:.BYTE 0 ; (uninited) ; ...
					; pAPU Pulse #1	Coarse Tune (CT) Register (W)
SND_SQUARE2_REG:.BYTE 0	; (uninited)	; pAPU Pulse #2	Control	Register (W)
pAPU_Pulse2_Ramp_Control_Reg:.BYTE 0 ; (uninited) ; pAPU Pulse #2 Ramp Control Register	(W)
pAPU_Pulse2__FT__Reg:.BYTE 0 ; (uninited) ; pAPU Pulse #2 Fine Tune Register (W)
pAPU_Pulse2__CT__Reg:.BYTE 0 ; (uninited) ; pAPU Pulse #2 Coarse Tune Register (W)
SND_TRIANGLE_REG:.BYTE 0 ; (uninited)	; pAPU Triangle	Control	Register #1 (W)
pAPU_Triangle_Control_Reg2:.BYTE 0 ; (uninited)	; pAPU Triangle	Control	Register #2 (?)
pAPU_Triangle_Frequency_Reg1:.BYTE 0 ; (uninited) ; pAPU Triangle Frequency Register #1	(W)
pAPU_Triangle_Frequency_Reg2:.BYTE 0 ; (uninited) ; pAPU Triangle Frequency Register #2	(W)
SND_NOISE_REG:	.BYTE 0	; (uninited)	; pAPU Noise Control Register #1 (W)
Unused:		.BYTE 0	; (uninited)	; Unused (???)
pAPU_Noise_Frequency_Reg1:.BYTE	0 ; (uninited) ; pAPU Noise Frequency Register #1 (W)
pAPU_Noise_Frequency_Reg2:.BYTE	0 ; (uninited) ; pAPU Noise Frequency Register #2 (W)
SND_DELTA_REG:	.BYTE 0	; (uninited)	; ...
					; pAPU Delta Modulation	Control	Register (W)
pAPU_Delta_Modulation_DA_Reg:.BYTE 0 ; (uninited) ; ...
					; pAPU Delta Modulation	D/A Register (W)
pAPU_Delta_Modulation_Address_Reg:.BYTE	0 ; (uninited) ; pAPU Delta Modulation Address Register	(W)
pAPU_Delta_Modulation_Data_Length_Reg:.BYTE 0 ;	(uninited) ; pAPU Delta	Modulation Data	Length Register	(W)
SPR_DMA:	.BYTE 0	; (uninited)	; ...
					; Sprite DMA Register (W)
SND_MASTERCTRL_REG:.BYTE 0 ; (uninited)	; ...
					; pAPU Sound/Vertical Clock Signal Register (R)
JOYPAD_PORT1:	.BYTE 0	; (uninited)	; ...
					; Joypad #1 (RW)
JOYPAD_PORT2:	.BYTE 0	; (uninited)	; ...
; end of 'Misc_Registers'               ; Joypad #2/SOFTCLK (RW)

ende

.base $8000
; ===========================================================================

; Segment type:	Pure code
		;.segment BANK0

; =============== S U B	R O U T	I N E =======================================


sub_0_8000:				; ...
		JMP	(JumpTable_ptr_main) ; указатель на функцию при	переходе в другой банк
; End of function sub_0_8000

; ---------------------------------------------------------------------------
		JMP	update_pal_to_vram
; ---------------------------------------------------------------------------
		JMP	set_game_end
; ---------------------------------------------------------------------------
		JMP	loc_0_8313
; ---------------------------------------------------------------------------
		JMP	sub_0_8DBA
; ---------------------------------------------------------------------------
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------
		JMP	sub_0_8033
; ---------------------------------------------------------------------------
		JMP	loc_0_8316
; ---------------------------------------------------------------------------
		JMP	loc_0_8319
; ---------------------------------------------------------------------------
		JMP	sub_0_E6BC
; ---------------------------------------------------------------------------
		JMP	loc_0_E6D8
; ---------------------------------------------------------------------------
		JMP	obj_moving_by_speed_
; ---------------------------------------------------------------------------
		JMP	sub_0_EEB7
; ---------------------------------------------------------------------------
		JMP	music_for_bank2
; ---------------------------------------------------------------------------
		JMP	level_completed
; ---------------------------------------------------------------------------
		JMP	restart_on_bike_chk ; surf city/volkmire/turbo tunnel
; ---------------------------------------------------------------------------
		JMP	some_for_bank3

; =============== S U B	R O U T	I N E =======================================


sub_0_8033:				; ...
		LDA	previous_bankID
		PHA
		LDA	Camera_Y_pos_l	;  / level_position - on v levels
		STA	Camera_Y_pos_l_2
		AND	#$F
		ORA	#$40
		STA	Vscroll_value	; $00-$EF
		LDA	#$80
		STA	upd_gfx_flag2	; what to update - attrib,pal or someelse
		JSR	level_backg_scroll
		DEC	Camera_X_pos_H
		LDA	#$20
		STA	tmp_var_8b

loc_0_804D:				; ...
		LDA	Camera_X_pos_l	;  / level_position - on h levels
		CLC
		ADC	#8
		STA	Camera_X_pos_l	;  / level_position - on h levels
		BCC	loc_0_8058
		INC	Camera_X_pos_H

loc_0_8058:				; ...
		JSR	level_backg_scroll
		LDX	Level_ID
		CPX	#ragnarok_canyon
		BNE	loc_0_807A
		LDA	flag_boss_1
		BNE	loc_0_807A
		DEX
		LDA	#$61

loc_0_8068:				; ...
		STA	scroll_tilemap_buff,X
		INX
		CPX	#$20
		BNE	loc_0_8068
		LDA	#$FF
		LDX	#$3F

loc_0_8074:				; ...
		STA	attributes_buff,X
		DEX
		BPL	loc_0_8074

loc_0_807A:				; ...
		JSR	tilemaps_write
		DEC	tmp_var_8b
		BNE	loc_0_804D
		PLA
		STA	previous_bankID
		RTS
; End of function sub_0_8033

; ---------------------------------------------------------------------------
		LDA	#$3F		; unused (clear	bkg pal	vram)
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDX	#0
		STX	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$F

loc_0_8091:				; ...
		STA	PPU_DATA	; VRAM I/O Register (RW)
		INX
		CPX	#$10
		BNE	loc_0_8091
		RTS

; =============== S U B	R O U T	I N E =======================================


inferno_race_effect:			; ...
		LDY	#0

loc_0_809C:				; ...
		LDA	gfx_buff_adr_h,Y
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	gfx_buff_adr_l,Y
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	gfx_buff_dat1,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	gfx_buff_adr_h,Y
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	gfx_buff_adr_l,Y
		ORA	#8
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	gfx_buff_dat2,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		INY
		INY
		INY
		INY
		CPY	#$28
		BNE	loc_0_809C
		LDX	#0
		JSR	set_second_nametable
		LDX	#$61
		JMP	wait_by_X
; End of function inferno_race_effect


; =============== S U B	R O U T	I N E =======================================


not_h_scrl_upd:				; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDX	#$FF
		TXS
		LDY	#2
		LDA	ppu_adr_map_h
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	ppu_adr_map_l
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		AND	#$1F
		ASL	A
		ASL	A
		STA	tmp_var_16

loc_0_80EE:				; ...
		ADC	#<vram_write_32_bytes ;	scroll h line /	attributes
		STA	tmp_var_1F
		LDA	#>vram_write_32_bytes ;	#$8226
		JMP	loc_0_8141
; End of function not_h_scrl_upd

; ---------------------------------------------------------------------------
		LDX	#$48		; unused?
		LDY	#1
		JSR	wait0		; wait by X,Y
		RTS
; ---------------------------------------------------------------------------
byte_0_80FF:	.BYTE $22, $22,	$20	; ...
byte_0_8102:	.BYTE $80, $88,	$80	; ...
byte_0_8105:	.BYTE $5F, $A8,	$A8	; ...

; =============== S U B	R O U T	I N E =======================================


tilemaps_write:				; ...
		TSX
		STX	stackp_save
		LDA	vram_inc_for_maps
		BEQ	not_h_scrl_upd
		LDA	#4		; vram increment - 32
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDX	#3

loc_0_8118:				; ...
		DEX
		BNE	loc_0_8118
		LDA	#$20
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	ppu_adr_map_l
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDY	#2
		LDA	Vscroll_value	; $00-$EF
		EOR	#$FF
		SEC
		SBC	#$10
		AND	#$F8
		LSR	A
		STA	tmp_var_17
		LSR	A
		LSR	A
		TAX
		DEX
		TXS
		LDA	tmp_var_17

loc_0_813A:				; ...
		CLC
		ADC	#<vram_write_30_bytes
		STA	tmp_var_1F
		LDA	#>vram_write_30_bytes ;	#$822E

loc_0_8141:				; ...
		ADC	#0
		STA	tmp_var_20
		JMP	(tmp_var_1F)
; End of function tilemaps_write


; =============== S U B	R O U T	I N E =======================================


update_continue_chk:			; ...
		DEY
		BEQ	loc_0_8195
		LDA	tmp_var_15	;  / Object Counter / various tmp
		BPL	loc_0_8152
		JMP	vram_write_32_bytes ; scroll h line / attributes
; ---------------------------------------------------------------------------

loc_0_8152:				; ...
		BNE	loc_0_818B
		LDA	ppu_adr_map_h	; reset	adress
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	ppu_adr_map_l
		AND	#$E0
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$80
		SEC
		SBC	tmp_var_16
		CLC
		JMP	loc_0_80EE
; ---------------------------------------------------------------------------

write_from_bkg_upd_buff:		; ...
		LDX	#$5F
		TXS			; RAM:0160, bkg_update_buff
		LDY	#3

loc_0_816E:				; ...
		LDA	bkg_upd_buff2a_adr_h,Y
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	bkg_upd_buff2a_adr_l,Y
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDX	bkg_upd_buff_cnt ; X * 4 times

loc_0_817C:				; ...
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		DEX
		BNE	loc_0_817C
		DEY
		BPL	loc_0_816E
		LDX	wait_after_bkg_upd_cnt
		JMP	wait_and_end
; ---------------------------------------------------------------------------

loc_0_818B:				; ...
		LDX	#$FF
		TXS			; RAM:0100 scroll_tilemap_buff
		LDA	#$78
		SEC
		SBC	tmp_var_17
		BCS	loc_0_813A

loc_0_8195:				; ...
		LDA	#$10		; VRAM increment - 1
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDA	tmp_var_15	;  / Object Counter / various tmp
		BMI	restore_sp_and_end
		LDY	#2
		LDA	upd_gfx_flag2	; what to update - attrib,pal or someelse
		STA	tmp_var_15	;  / Object Counter / various tmp
		CMP	#$84
		BCS	update_some_gfx
		CMP	#$81
		BCS	update_map_28?
		LDA	#$23		; attributes_vram: $23C0
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$C0
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDX	#$1F		; RAM:0120 attributes_buff
		TXS
		JMP	vram_write_32_bytes ; scroll h line / attributes
; ---------------------------------------------------------------------------

restore_sp_and_end:			; ...
		LDX	stackp_save
		TXS
		RTS
; ---------------------------------------------------------------------------

update_map_28?:				; ...
		TAY
		LDA	byte_0_80FF - $81,Y
		EOR	ppu_adr_sbar_H
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	byte_0_8102 - $81,Y
		STA	upd_gfx_flag2	; what to update - attrib,pal or someelse
		LDX	byte_0_8105 - $81,Y
		LDA	#$62
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$10
		STA	banks_ids0+$10	; prevent 'bus conflict'
		TXS
		LDY	#2
		BNE	vram_write_28_bytes ; jump

check_upd_pal_or_map:			; ...
		CMP	#$84
		BNE	write_from_bkg_upd_buff

vram_update_palette:			; ...
		LDA	#$3F
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDX	pal_vram_upd_off ; BKG=$00, SPR=$10
		STX	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDY	#$10

loc_0_81F0:				; ...
		LDA	palette_ram,X
		SEC
		SBC	pal_reduce_value ; dec to color	value
		BCS	loc_0_81FB
		LDA	#$F
		BNE	loc_0_81FD	; jump

loc_0_81FB:				; ...
		NOP
		NOP

loc_0_81FD:				; ...
		STA	PPU_DATA	; VRAM I/O Register (RW)
		INX
		DEY
		BNE	loc_0_81F0
		STY	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		STY	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDX	#$10

wait_and_end:				; ...
		DEX
		BNE	wait_and_end
		BEQ	restore_sp_and_end ; jump
; End of function update_continue_chk


; =============== S U B	R O U T	I N E =======================================


update_some_gfx:			; ...
		LDX	#$80
		STX	upd_gfx_flag2	; what to update - attrib,pal or someelse
		CMP	#$86
		BCC	check_upd_pal_or_map
		LDA	#$17
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$D0
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDX	#$5F
		TXS

vram_write_32_bytes:			; ...
		PLA			; scroll h line	/ attributes
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)

vram_write_30_bytes:			; ...
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)

vram_write_28_bytes:			; ...
		PLA			; scroll v line
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		JMP	update_continue_chk
; End of function update_some_gfx


; =============== S U B	R O U T	I N E =======================================


RESET_0:				; ...
		LDA	#0

reset_restart_game:			; ...
		STA	second_load	; 0 after reset, 1 if restart
		SEI
		CLD
		LDX	#$FF
		TXS
		LDA	#0
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)

loc_0_82BA:				; ...
		LDA	PPU_STATUS	; PPU Status Register (R)
		BPL	loc_0_82BA

loc_0_82BF:				; ...
		LDA	PPU_STATUS	; PPU Status Register (R)
		BPL	loc_0_82BF
		LDA	#0
		LDX	#$17

loc_0_82C8:				; ...
		STA	SND_SQUARE1_REG,X ; pAPU Pulse #1 Control Register (W)
		DEX
		BPL	loc_0_82C8
		LDX	#$C0
		STX	SND_DELTA_REG	; pAPU Delta Modulation	Control	Register (W)
		LDX	#$80
		STX	JOYPAD_PORT2	; Joypad #2/SOFTCLK (RW)
		LDX	#$F
		STX	SND_MASTERCTRL_REG ; pAPU Sound/Vertical Clock Signal Register (R)
		LDA	#0
		TAX

clear_memory:				; ...
		CPX	#$FD
		BCS	loc_0_82E6
		STA	0,X

loc_0_82E6:				; ...
		STA	$100,X
		STA	$200,X
		STA	$300,X
		STA	$400,X
		STA	$500,X
		STA	$600,X
		STA	$700,X
		INX
		BNE	clear_memory
		LDA	#$80		; $8000
		STA	JumpTable_ptr_main+1 ; указатель на функцию при	переходе в другой банк
		LDA	#$28
		CMP	load_flag2
		BNE	loc_0_830A
		STA	second_load	; 0 after reset, 1 if restart

loc_0_830A:				; ...
		LDA	#3
		STA	Continues_Player1
		STA	Continues_Player2
		JMP	game_start_entry
; End of function RESET_0

; ---------------------------------------------------------------------------

loc_0_8313:				; ...
		JMP	sub_0_E4FB
; ---------------------------------------------------------------------------

loc_0_8316:				; ...
		JMP	sub_0_E646
; ---------------------------------------------------------------------------

loc_0_8319:				; ...
		JMP	sub_0_D7E7
; ---------------------------------------------------------------------------

call_game_end:				; ...
		JMP	call_game_end_2
; ---------------------------------------------------------------------------

set_lvl_tmp_0:				; ...
		LDA	#0
		STA	Levels_passed_cnt
		JMP	clears_between_levels?

; =============== S U B	R O U T	I N E =======================================


set_game_end:				; ...
		LDA	game_end_caller_var
		BNE	call_game_end
		LDA	Lives_Player1	; кол-во жизней	(сердечек)
		BPL	loc_0_8330
		STA	Continues_Player1

loc_0_8330:				; ...
		LDA	Lives_Player2	; кол-во жизней	(сердечек)
		BPL	loc_0_8336
		STA	Continues_Player2

loc_0_8336:				; ...
		JSR	clear_ram

loc_0_8339:				; ...
		LDX	#0
		TXA

loc_0_833C:				; ...
		STA	scroll_tilemap_buff,X
		INX
		BNE	loc_0_833C
		LDX	#6
		LDY	#$16
		JSR	jump_from_bank0
		LDX	#6
		LDY	#5
		JSR	jump_from_bank0
		LDA	game_end_caller_var
		BNE	loc_0_835B
		LDX	#$2A		; load_lvl_obj_config
		LDY	#3
		JSR	jump_from_bank0

loc_0_835B:				; ...
		JSR	sub_0_8033
		LDX	#$30
		LDY	#3
		JSR	jump_from_bank0
		JSR	set_level_music

loc_0_8368:				; ...
		LDX	#$15
		LDY	#7
		JSR	jump_from_bank0
		LDX	#<level_nextframe
		LDY	#>level_nextframe ; #$83A4
		JMP	set_nmi_func_ptr ; input X,Y
; End of function set_game_end


; =============== S U B	R O U T	I N E =======================================


music_for_bank2:			; ...
		JSR	loc_0_8385
		LDA	#2
		STA	previous_bankID
		RTS
; End of function music_for_bank2


; =============== S U B	R O U T	I N E =======================================


set_level_music:			; ...
		LDY	Level_ID

set_music_by_level_id:			; ...
		LDA	Level_MusicID,Y

set_music_track:			; ...
		STA	music_id_and_play_cnt

loc_0_8385:				; ...
		LDY	#3
		LDX	#3		; start_play_music
		JSR	jump_from_bank0

playing_music_upd:			; ...
		JSR	loc_0_838F

loc_0_838F:
		LDA	#0
		JMP	music_play_bank3 ; playing_music
; End of function set_level_music

; ---------------------------------------------------------------------------
Level_MusicID:	.BYTE 3, 3, 4, 1, $E, $C, $F, 8, 9, $11, $13, $D, $D, $B, $B, $14 ; ...

; =============== S U B	R O U T	I N E =======================================


level_nextframe:			; ...
		JSR	tilemaps_write
		JSR	vram_update_functions
		LDA	#$10		; nmi disabled
		STA	ppu_ctrl1_val	;  > $80  кадр завершен
		ORA	#$80
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDX	#$4B
		LDY	#3		; BANK3:804B
		JSR	jump_from_bank0	; update_info_scores_lifes_check
		LDA	InputTap_P1	; данные первого джойстика на нажатие
		ORA	InputTap_P2	; данные второго джойстика на нажатие
		AND	#button_start
		BEQ	loc_0_83D6
		LDY	#$F
		EOR	pause_flag
		STA	pause_flag
		BEQ	loc_0_83D3
		LDY	#0
		STY	pause_snd_cnt1
		STY	SND_MASTERCTRL_REG ; pAPU Sound/Vertical Clock Signal Register (R)
		BEQ	loc_0_842B	; jump

loc_0_83D3:				; ...
		STY	SND_MASTERCTRL_REG ; pAPU Sound/Vertical Clock Signal Register (R)

loc_0_83D6:				; ...
		LDA	pause_flag
		BEQ	game_level_cycle
		INC	pause_snd_cnt2
		LDA	pause_snd_cnt2
		AND	#7
		BNE	loc_0_83F0
		LDA	pause_snd_cnt1
		INC	pause_snd_cnt1
		AND	#$F
		TAY
		LDA	pause_snd_dat,Y
		TAY
		JMP	loc_0_84B6
; ---------------------------------------------------------------------------

loc_0_83F0:				; ...
		JMP	wait_for_nmi__
; ---------------------------------------------------------------------------
pause_snd_dat:	.BYTE $C, $20, $C, $20,	$C, $20, $20, $20, $30,	$20, $30, $20, $30, $20, $20, $20 ; ...
; ---------------------------------------------------------------------------

game_level_cycle:			; ...
		LDA	timer_end_music
		CMP	#$7E
		BCC	loc_0_842B
		CMP	#$82		; level	end music flag
		BCS	loc_0_8429
		JSR	levels_3_and_6_set_X_scroll
		LDY	#$F		; level	end music
		JSR	set_music_by_level_id

loc_0_8415:				; ...
		LDA	nmi_pcm_flags
		BPL	loc_0_8420
		LDX	#$1B
		LDY	#3
		JSR	jump_from_bank0

loc_0_8420:				; ...
		LDA	music_active_flag ; channel is used
		BNE	loc_0_8415
		LDA	#$7E
		STA	timer_end_music

loc_0_8429:				; ...
		DEC	timer_end_music

loc_0_842B:				; ...
		JSR	level_camera_moving
		JSR	level_cfg_read
		LDA	#0
		STA	upd_tilemaps_flags ; 1=update tiles flag, 81 - update atrib flag
		LDA	Level_ID
		CMP	#karnath_lair
		BEQ	skip_bkg_scrolling
		LDA	turbotunnel_X_flag ; =1, if camH=$DD
		BNE	skip_bkg_scrolling
		LDA	Level_ID
		CMP	#volkmire_inferno
		BNE	loc_0_8451
		LDA	Camera_X_pos_H
		CMP	#$E
		BCS	skip_bkg_scrolling
		LDA	bikes_speed
		CMP	#5
		BCS	skip_bkg_scrolling

loc_0_8451:				; ...
		JSR	level_backg_scroll ; level_backgnd_scroll

skip_bkg_scrolling:			; ...
		LDX	#$45
		LDY	#3
		JSR	jump_from_bank0	; background_vs_sprites_pos
		JSR	objects_functions
		LDA	Level_ID
		CMP	#karnath_lair
		BNE	loc_0_8467
		JSR	level_backg_scroll ; karnath lair scroll code after obj. funcs

loc_0_8467:				; ...
		JSR	levels_3_and_6_set_X_scroll
		LDY	#2
		LDX	#3		; players_gfx
		JSR	jump_from_bank0
		LDX	#3
		LDY	#6		; obj_sprites_
		JSR	jump_from_bank0
		LDA	upd_gfx_flag2	; what to update - attrib,pal or someelse
		CMP	#$80
		BNE	loc_0_84A5
		EOR	upd_tilemaps_flags ; 1=update tiles flag, 81 - update atrib flag
		BPL	loc_0_84A5
		LDA	update_ui_flag
		BEQ	loc_0_8490
		LDX	#$48		; update_info_scores_lifes
		LDY	#3
		JSR	jump_from_bank0
		JMP	loc_0_84A5
; ---------------------------------------------------------------------------

loc_0_8490:				; ...
		LDA	Level_ID
		CMP	#ragnarok_canyon
		BNE	loc_0_84A5
		AND	FrameCounter
		ORA	tmp_var_c8
		BNE	loc_0_84A5
		LDY	#1
		LDX	#6
		JSR	jump_from_bank0
		INC	level1_some_cnt

loc_0_84A5:				; ...
		LDA	upd_gfx_flag2	; what to update - attrib,pal or someelse
		CMP	#$80
		BNE	loc_0_84AE
		JSR	update_pal_reduce_val

loc_0_84AE:				; ...
		LDY	some_sound_flag	; by tables
		BEQ	frame_end_wait_nmi_
		LDA	#0
		STA	some_sound_flag	; by tables

loc_0_84B6:				; ...
		LDA	snd_type_flg - 4,Y ; if	not 0 -	pcm flags
		BNE	pcm_snd_params
		LDX	snd_param2 - 4,Y ; $15(func ID for non-pcm)  or	 1(wait	for pcm)
		LDA	snd_param3 - 4,Y ; sound id(snd) or add	value(pcm)
		JSR	jump_to_play_sound ; A is sound	id, X -	JmpOff (channel	id)
		JMP	frame_end_wait_nmi_
; End of function level_nextframe


; =============== S U B	R O U T	I N E =======================================


update_pal_reduce_val:			; ...
		LDA	#3
		AND	FrameCounter
		BNE	locret_0_84E0
		LDA	pal_reduce_value ; dec to color	value
		CMP	#0
		BEQ	locret_0_84E0
		SEC
		SBC	#$10
		STA	pal_reduce_value ; dec to color	value
		LDA	#0
		STA	pal_vram_upd_off ; BKG=$00, SPR=$10
		LDA	#$84
		STA	upd_gfx_flag2	; what to update - attrib,pal or someelse

locret_0_84E0:				; ...
		RTS
; End of function update_pal_reduce_val


; =============== S U B	R O U T	I N E =======================================

; A is sound id, X - JmpOff (channel id)

jump_to_play_sound:			; ...
		STA	snd_tmp_var_39
		LDY	#3
		JMP	jump_from_bank0	; BANK3:8015
; End of function jump_to_play_sound


; =============== S U B	R O U T	I N E =======================================


pcm_snd_params:				; ...
		STA	nmi_pcm_flags
		LDA	snd_param2 - 4,Y ; $15(func ID for non-pcm)  or	 1(wait	for pcm)
		STA	wait_after_pcm_cnt
		LDA	snd_param3 - 4,Y ; sound id(snd) or add	value(pcm)
		STA	pcm_info1	; some add value
		LDA	pcm_info2_tbl -	4,Y ; time?
		STA	pcm_info2	; time?
		LDY	#3
		LDX	#9
		JSR	jump_from_bank0	; BANK3:8009 start_play_pcm

frame_end_wait_nmi_:			; ...
		JSR	update_frame_counters
		JMP	wait_for_nmi_
; End of function pcm_snd_params

; ---------------------------------------------------------------------------
snd_type_flg:	.BYTE 0			; ...
					; if not 0 - pcm flags
snd_param2:	.BYTE $15		; ...
					; $15(func ID for non-pcm)  or	1(wait for pcm)
snd_param3:	.BYTE 4			; ...
					; sound	id(snd)	or add value(pcm)
pcm_info2_tbl:	.BYTE 0			; ...
					; time?
		.BYTE  $81,   1, $60, $1C
		.BYTE  $81,   1, $70, $28
		.BYTE  $84,   1,   0, $1C
		.BYTE  $81,   1, $C0, $15
		.BYTE  $82,   1,   0,	8
		.BYTE  $81,   1, $30, $20
		.BYTE  $82,   1,   0, $10
		.BYTE	 0, $15, $60,	0
		.BYTE	 0, $15, $64,	0
		.BYTE  $83,   1,   0, $4C
		.BYTE  $81,   1,   0, $38
		.BYTE  $81,   1,   0, $20

; =============== S U B	R O U T	I N E =======================================


levels_3_and_6_set_X_scroll:		; ...
		LDY	Level_ID
		CPY	#volkmire_inferno
		BEQ	loc_0_8544
		CPY	#TurboTunnel	; turbo-tunnel
		BNE	locret_0_8565

loc_0_8544:				; ...
		LDA	#$40		; srpite hit?
		BIT	PPU_STATUS	; PPU Status Register (R)
		BNE	spr_0_shown

wait_spr0_hit:				; ...
		BIT	PPU_STATUS	; PPU Status Register (R)
		BEQ	wait_spr0_hit
		LDA	Level_ID
		CPY	#volkmire_inferno
		BEQ	spr_0_shown
		LDY	#1
		LDX	#$22
		JSR	wait0		; wait by X,Y

spr_0_shown:				; ...
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDA	Camera_X_pos_l	;  / level_position - on h levels
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)

locret_0_8565:				; ...
		RTS
; End of function levels_3_and_6_set_X_scroll


; =============== S U B	R O U T	I N E =======================================

; surf city/volkmire/turbo tunnel

restart_on_bike_chk:			; ...
		LDX	#$39		; func id / 3
		BNE	restart_sub_lvl?

std_level_restart:			; ...
		JSR	set_level_music
		LDX	#$3C

restart_sub_lvl?:			; ...
		LDY	#3		; restart_on_bikes
		JSR	jump_from_bank0
		JSR	sub_0_8033
		JMP	loc_0_8368
; End of function restart_on_bike_chk


; =============== S U B	R O U T	I N E =======================================


restart_for_karnath:			; ...
		LDX	#9
		LDY	#7
		JSR	jump_from_bank0
		JSR	set_level_music
		LDX	#$3F
		BNE	restart_sub_lvl? ; jump
; End of function restart_for_karnath


; =============== S U B	R O U T	I N E =======================================


inferno_race_effect_:			; ...
		JSR	inferno_race_effect
		BEQ	set_statusbar_scrolls ;	jump

extra_vblank_or_animations:		; ...
		CMP	#$80
		BNE	extra_animations
		LDA	Level_ID
		CMP	#volkmire_inferno
		BEQ	inferno_race_effect_
		CMP	#karnath_lair
		BNE	write_revolution_anims
		LDA	#3
		JSR	karnath_lair_bank3_f
		NOP
		NOP
		NOP
		JMP	copy_chars_gfx_to_vram
; ---------------------------------------------------------------------------

write_revolution_anims:			; ...
		JSR	revolution_anim_write_to_vram
		BEQ	copy_chars_gfx_to_vram ; jump

extra_animations:			; ...
		LDA	Camera_Y_pos_l	;  / level_position - on v levels
		JSR	tmp_buffer2+$30
		JSR	set_second_nametable
		BEQ	set_statusbar_scrolls ;	jump  (skip update chars gfx)
; End of function inferno_race_effect_


; =============== S U B	R O U T	I N E =======================================


vram_update_functions:			; ...
		LDA	extra_vblank_flags ; $80-extra vblank; 1-parallax animations
		BNE	extra_vblank_or_animations

copy_chars_gfx_to_vram:			; ...
		LDA	gfx_copy_adrL	; Суда пишутся оффсеты рома, которые используются в RAM	коде для записи	графики	в ppu,
					; 1 раз	записывается оффсет, и далее через 6 байт тоже но уже +1,и так 16 раз.
					; В команду LDY	$8030,X	 записываются 8030.
		CLC

wait_crosspage_penalty:			; ...
		ADC	#$10
		BCS	start_copy_chars_gfx
		NOP			; 2
		JMP	loc_0_85C5	; 3

loc_0_85C5:				; 2
		NOP
		NOP			; 2
		JMP	wait_crosspage_penalty
; ---------------------------------------------------------------------------

start_copy_chars_gfx:			; ...
		JSR	ram_gfx_copy_code ; write chars	gfx; gfx_copy_code

set_statusbar_scrolls:			; ...
		LDA	ppu_adr_sbar_H
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$60
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		STX	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		STX	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		LDA	#8		; display BKG only
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		LDX	#$F

loc_0_85E4:				; ...
		DEX
		BNE	loc_0_85E4
		LDA	Vscroll_plus_BG_Y
		ROL	A
		ROL	A
		TAY
		ROL	A
		TAX
		ROL	A
		AND	#$30
		STA	tmp_var_15	; obj counter may be corrupted
		TXA			; ;
		AND	#3		; ;
		ORA	tmp_var_15	; this is fixed	in EU and JPN roms, $15->$85
		STA	new_scroll_vram_H
		TYA
		AND	#$E0
		STA	new_scroll_vram_L
		LDA	#$18		; display BKG+SPR
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		LDX	#$4E		; wait time volkmire
		LDA	Level_ID
		CMP	#volkmire_inferno
		BEQ	wait_for_for_volkmire_and_tunnel
		CMP	#TurboTunnel
		BNE	levels_std_music_and_scrolls_upd
		LDX	#$A6		; wait time volkmire

wait_for_for_volkmire_and_tunnel:	; ...
		LDY	#2
		JSR	wait0		; wait by X,Y
		BEQ	set_new_scrolls	; jump
; End of function vram_update_functions


; =============== S U B	R O U T	I N E =======================================


levels_std_music_and_scrolls_upd:	; ...
		LDA	pause_flag
		BNE	not_pause
		LDA	#$10		; BANK0+nametable2 (statusbar)
		JSR	music_play_bank3 ; playing_music

not_pause:				; ...
		LDA	Vscroll_plus_BG_Y
		AND	#4
		BEQ	loc_0_863C
		LDX	new_scroll_vram_H
		LDY	new_scroll_vram_L
		LDA	#$40

wait_spr_hit:				; ...
		BIT	PPU_STATUS	; PPU Status Register (R)
		BEQ	wait_spr_hit
		STX	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		STY	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		JMP	wait_after_spr_hit
; ---------------------------------------------------------------------------

loc_0_863C:				; ...
		LDA	#$40

wait_spr_hit_:				; ...
		BIT	PPU_STATUS	; PPU Status Register (R)
		BEQ	wait_spr_hit_

wait_after_spr_hit:			; ...
		LDY	#1		; scanline 30
		LDX	#$54
		JSR	wait0		; wait by X,Y
		LDA	Vscroll_plus_BG_Y ; scanline 34
		AND	#4
		BNE	loc_0_865A

set_new_scrolls:			; ...
		LDA	new_scroll_vram_H
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	new_scroll_vram_L
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)

loc_0_865A:				; ...
		LDX	#$C
		LDA	Camera_X_pos_l	;  / level_position - on h levels
		CLC
		ADC	camera_speed?
		LDY	Level_ID
		CPY	#volkmire_inferno
		BEQ	x_scroll_for_tunnel_and_volkmire
		CPY	#TurboTunnel
		BNE	set_x_scroll_by_camera

x_scroll_for_tunnel_and_volkmire:	; ...
		LSR	A
		STA	extra_vblank_flags ; $80-extra vblank; 1-parallax animations
		LSR	A
		CLC
		ADC	extra_vblank_flags ; $80-extra vblank; 1-parallax animations
		LDX	#7

set_x_scroll_by_camera:			; ...
		STA	PPU_SCROLL_REG	; set X	scroll by camera
		LDY	#1
		JSR	wait0		; wait by X,Y
		STX	banks_ids0	; scanline 35 bank0+nametable0
		LDA	ppu_ctrl1_val	;  > $80  кадр завершен
		BPL	skip_joys_reading
		JSR	joypads_reading	; skip joys read if game lag

skipped_joys_reading:			; ...
		LDY	Level_ID
		LDA	levels_ex_blank_flag - 1,Y
		STA	extra_vblank_flags ; $80-extra vblank; 1-parallax animations
		TYA
		CMP	#TurboTunnel
		BNE	not_turbotunnel_2nd_scroll
		LDX	#$28

wait_for_tunnel_and_volkmire:		; ...
		LDY	#3
		JSR	wait0		; wait by X,Y

set_x_scroll_by_camera_for_tunnel_and_volkmire:	; ...
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDA	Camera_X_pos_l	;  / level_position - on h levels
		LDY	ppu_ctrl1_val	;  > $80  кадр завершен
		BPL	lagged_or_pause_tunnel_and_volkmire_Xscroll
		LDY	pause_flag
		BNE	lagged_or_pause_tunnel_and_volkmire_Xscroll
		LSR	A

lagged_or_pause_tunnel_and_volkmire_Xscroll: ; ...
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)

music_play_bank3_:			; ...
		LDA	#0		; bank0, nametable0
		JMP	music_play_bank3 ; playing_music
; ---------------------------------------------------------------------------

skip_joys_reading:			; ...
		LDY	#1
		LDX	#$30
		JSR	wait0		; wait by X,Y
		JMP	skipped_joys_reading
; ---------------------------------------------------------------------------
levels_ex_blank_flag:.BYTE 0, 0, 0, 0, $80, 0, 0, $80, 0, 0, 0,	0, 0, 0	; ...
; ---------------------------------------------------------------------------

not_turbotunnel_2nd_scroll:		; ...
		CMP	#volkmire_inferno
		BNE	not_volkmire_2nd_scroll
		LDX	#$DC
		LDA	inferno_race_create_flg	; 2=created
		CMP	#2
		BCC	wait_for_tunnel_and_volkmire
		LDA	Camera_X_pos_l	;  / level_position - on h levels
		LSR	A
		STA	tmp_var_17	; may corrupt var?
		JSR	volkmire_inferno_scrolls ; in nmi, uses	15,16,17,18
		JMP	set_x_scroll_by_camera_for_tunnel_and_volkmire
; ---------------------------------------------------------------------------
		LDX	#$28		; unused - see BANK0:8692
		LDY	#3
		JSR	wait0		; wait by X,Y
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDA	Camera_X_pos_l	;  / level_position - on h levels
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)

not_volkmire_2nd_scroll:		; ...
		RTS
; End of function levels_std_music_and_scrolls_upd


; =============== S U B	R O U T	I N E =======================================

; input	X,Y

set_nmi_func_ptr:			; ...
		STX	jump_ptr_nmi	; поинтер на функцию во	время nmi
		STY	jump_ptr_nmi+1	; поинтер на функцию во	время nmi
		LDA	ppu_ctrl2_val
		ORA	#$18		; show bg+spr
		STA	ppu_ctrl2_val
		LDA	#0
		STA	FrameCounter
		STA	FrameCounter_Even ; счетчик каждого второго кадра
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDA	#$90		; NMI_enabled, BG at $1000
		BNE	wait_for_nmi	; jump
; End of function set_nmi_func_ptr


; =============== S U B	R O U T	I N E =======================================


update_frame_counters:			; ...
		INC	FrameCounter
		LDA	FrameCounter
		AND	#1
		BNE	locret_0_870F
		INC	FrameCounter_Even ; счетчик каждого второго кадра

locret_0_870F:				; ...
		RTS
; End of function update_frame_counters


; =============== S U B	R O U T	I N E =======================================


frame_end_wait_nmi:			; ...
		JSR	update_frame_counters

wait_for_nmi__:				; ...
		LDA	PPU_STATUS	; PPU Status Register (R)

wait_for_nmi_:				; ...
		LDA	ppu_ctrl1_val	;  > $80  кадр завершен
		ORA	#$80		; NMI enabled

wait_for_nmi:				; ...
		STA	ppu_ctrl1_val	;  > $80  кадр завершен
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)

random_cycle:				; ...
		JSR	change_random_values
		JSR	random
		JMP	random_cycle
; End of function frame_end_wait_nmi


; =============== S U B	R O U T	I N E =======================================


change_random_values:			; ...
		LDX	#3

loc_0_872A:				; ...
		LDA	RandomValue_1,X
		ADC	FrameCounter
		SBC	Objects_Xpos_L
		EOR	Objects_Y_sub
		EOR	RandomValue_2,X
		SBC	jump_ptr_nmi+1,X ; поинтер на функцию во время nmi
		ADC	Objects_Ypos_L,X
		ADC	FrameCounter
		STA	RandomValue_1,X
		DEX
		BPL	loc_0_872A
		RTS
; End of function change_random_values


; =============== S U B	R O U T	I N E =======================================


random:					; ...
		LDA	RandomValue_1
		EOR	RandomValue_4
		ADC	RandomValue_3
		STA	RandomValue_2
		LDA	RandomValue_3
		ROL	A
		SBC	RandomValue_4
		STA	RandomValue_3
		EOR	RandomValue_2
		STA	RandomValue_1
		RTS
; End of function random


; =============== S U B	R O U T	I N E =======================================


level_backg_scroll:			; ...
		LDX	#3		; level_backgnd_scroll
		LDY	#5
		JMP	jump_from_bank0
; End of function level_backg_scroll


; =============== S U B	R O U T	I N E =======================================


sub_0_875E:				; ...
		STX	tmp_var_15	;  / Object Counter / various tmp
		STA	tmp_var_16
		LDX	#9
		LDY	#5
		JMP	jump_from_bank0
; End of function sub_0_875E

; ---------------------------------------------------------------------------
		INC	Level_ID	; unused?

; =============== S U B	R O U T	I N E =======================================


clear_ram:				; ...
		SEI
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDA	#0
		STA	SND_MASTERCTRL_REG ; pAPU Sound/Vertical Clock Signal Register (R)
		STA	ppu_ctrl1_val	;  > $80  кадр завершен
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		LDX	#$15

clear_zero_page:			; ...
		STA	0,X
		INX
		CPX	#$FC
		BNE	clear_zero_page
		LDX	#0

clear_mem:				; ...
		STA	$100,X
		STA	$200,X
		STA	$300,X
		STA	$400,X
		CPX	#$F4
		BCS	loc_0_879A
		STA	$500,X

loc_0_879A:				; ...
		STA	$600,X
		INX
		BNE	clear_mem
		JMP	loc_0_8339
; End of function clear_ram


; =============== S U B	R O U T	I N E =======================================


level_camera_moving:			; ...
		LDX	#$12		; level_moving
		LDY	#2
		JMP	jump_from_bank0
; End of function level_camera_moving


; =============== S U B	R O U T	I N E =======================================


level_completed:			; ...
		LDA	#0
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		JSR	screen_off
		INC	Levels_passed_cnt
		JSR	sounds_stop
		LDA	#$12
		JSR	set_music_track
		JSR	playing_music_upd
		JMP	loc_0_DA24
; End of function level_completed


; =============== S U B	R O U T	I N E =======================================


objects_functions:			; ...
		LDX	#0

object_func_cycle:			; ...
		STX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	Objects_TypeID,X
		BNE	loc_0_87D3

deleted_object:				; ...
		LDA	#$80		; flag 80 if no	obj
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		JMP	next_object
; ---------------------------------------------------------------------------

loc_0_87D3:				; ...
		ASL	A
		TAY
		LDA	obj_code_ptrs,Y
		STA	tmp_var_19
		LDA	obj_code_ptrs+1,Y
		STA	tmp_var_1A
		LDA	Objects_Zpos_L,X
		STA	obj_ZposL_tmp
		LDA	Objects_Zpos_H,X
		STA	obj_ZposH_tmp
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		STA	global_var_cnt?
		AND	#$F7
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		JSR	launch_obj_code
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	Objects_TypeID,X
		BEQ	deleted_object
		ASL	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	Level_ID
		CMP	#revolution
		BEQ	loc_0_8809
		JMP	loc_0_884E
; ---------------------------------------------------------------------------

loc_0_8809:				; ...
		LDA	Objects_TypeID,X ; objects - level 5 spec func.
		CMP	#$60
		BEQ	loc_0_884E
		CMP	#$61
		BEQ	loc_0_884E
		LDX	#$18
		LDY	#2		; revolution_unkf
		JSR	jump_from_bank0
		LDY	tmp_var_15	;  / Object Counter / various tmp
		CPY	#$38
		BCS	loc_0_888D
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ORA	#$40
		CPX	#2
		BCC	loc_0_8839
		LDY	Objects_TypeID,X
		CPY	#$62
		BEQ	loc_0_8839
		CPY	#$5C
		BCC	loc_0_8845
		CPY	#$5F
		BCS	loc_0_8845

loc_0_8839:				; ...
		LDY	Obj_anims_timer,X ; timer used for gfx frames
		BNE	loc_0_8845
		LDY	Objects_death_timer,X ;	undamage time
		BNE	loc_0_8845
		EOR	#$80

loc_0_8845:				; ...
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		JMP	loc_0_888D
; ---------------------------------------------------------------------------
		JMP	loc_0_88E0	; unused?
; ---------------------------------------------------------------------------

loc_0_884E:				; ...
		CMP	#karnath_lair
		BNE	loc_0_887D
		LDA	Objects_TypeID,X ; objects - level 8 spec func
		AND	#$FE
		CMP	#$4C
		BNE	loc_0_887D
		LDA	Objects_dir,X	; / angle
		CMP	#$80
		BNE	loc_0_887D
		LDA	Objects_Xpos_L,X
		SBC	#6
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_Xpos_H,X
		SBC	#0
		STA	tmp_var_16
		LDA	tmp_var_15	;  / Object Counter / various tmp
		SEC
		SBC	Camera_X_pos_l	;  / level_position - on h levels
		STA	Objects_X_shadow,X
		LDA	tmp_var_16
		JMP	loc_0_8889
; ---------------------------------------------------------------------------

loc_0_887D:				; ...
		LDA	Objects_Xpos_L,X
		SEC
		SBC	Camera_X_pos_l	;  / level_position - on h levels
		STA	Objects_X_shadow,X
		LDA	Objects_Xpos_H,X

loc_0_8889:				; ...
		SBC	Camera_X_pos_H
		BNE	loc_0_88DF

loc_0_888D:				; ...
		LDA	Objects_Ypos_L,X
		SEC
		SBC	Objects_Zpos_L,X
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_Ypos_H,X
		SBC	Objects_Zpos_H,X
		STA	tmp_var_16
		LDA	bkg_vs_spr_pos_neg
		BEQ	loc_0_88AD
		EOR	#$FF
		SEC
		ADC	tmp_var_15	;  / Object Counter / various tmp
		STA	tmp_var_15	;  / Object Counter / various tmp
		BCC	loc_0_88AD
		INC	tmp_var_16

loc_0_88AD:				; ...
		LDA	tmp_var_15	;  / Object Counter / various tmp
		CLC
		ADC	Objects_Z_floor,X
		BCC	loc_0_88B7
		INC	tmp_var_16

loc_0_88B7:				; ...
		SEC
		SBC	Camera_Y_pos_l	;  / level_position - on v levels
		STA	Objects_Y_shad,X
		LDA	tmp_var_16
		SBC	Camera_Y_pos_H
		BNE	loc_0_88C6
		CLC
		BCC	loc_0_88E0

loc_0_88C6:				; ...
		CMP	#1
		BNE	loc_0_88DF
		LDA	Objects_Y_shad,X
		SBC	Objects_Z_floor,X
		BCS	loc_0_88E0
		EOR	#$FF
		STA	Objects_Z_floor,X
		LDA	#$FF
		STA	Objects_Y_shad,X
		CLC
		BCC	loc_0_88E0

loc_0_88DF:				; ...
		SEC

loc_0_88E0:				; ...
		ROR	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?

next_object:				; ...
		INX
		CPX	#$F
		BEQ	no_obj_code
		JMP	object_func_cycle
; ---------------------------------------------------------------------------

no_obj_code:				; ...
		RTS
; End of function objects_functions


; =============== S U B	R O U T	I N E =======================================


launch_obj_code:			; ...
		JMP	(tmp_var_19)
; End of function launch_obj_code


; =============== S U B	R O U T	I N E =======================================


sub_0_88EF:				; ...
		AND	#$1F
		TAY
		DEY

loc_0_88F3:				; ...
		STY	tmp_var_15	;  / Object Counter / various tmp
		LDA	Obj_anims_timer,Y ; timer used for gfx frames
		BEQ	loc_0_893D
		CPY	#2		; players object?
		BCS	loc_0_892D
		LDA	Level_ID
		EOR	#terra_tubes
		BNE	loc_0_890C
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	#$D4
		JSR	objects_add_Z?	; A is Z_speed

loc_0_890C:				; ...
		LDA	flag_boss_1
		BNE	loc_0_892D
		LDA	players_obj_unk,Y
		BEQ	loc_0_892D
		CMP	#$C0
		BNE	loc_0_8920
		JSR	objects_Z?
		LDA	#$4F
		BNE	loc_0_895D	; jump

loc_0_8920:				; ...
		CMP	#$D0
		BNE	loc_0_893D
		LDA	#8
		JSR	obj_increment_to_X ; A is X_low
		LDA	#$2A
		BNE	loc_0_895D	; jump

loc_0_892D:				; ...
		LDA	#$80
		STA	Objects_X_speed,X
		LDA	#0
		STA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		STA	Objects_LinkedObj_ID,Y ; флаг/id присоединённого объекта
		JMP	loc_0_8A0E
; ---------------------------------------------------------------------------

loc_0_893D:				; ...
		JSR	copy_objects_XYZ
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#3
		ORA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		ORA	#8
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	player1_obj_wanted_frame,Y
		TAY
		LDA	Level_ID
		CMP	#arctic_caverns
		LDA	bike_frames_ids	- $38,Y
		BCC	loc_0_895D	;  38 =	base frame with	bike
		LDA	samolet_frames - $38,Y

loc_0_895D:				; ...
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------
bike_frames_ids:.BYTE 9, $A, $2B, $2C, $2D, $B,	$3E, 9,	$A, $4F	; ...
samolet_frames:	.BYTE 9, $A, $8C, $8C, $8C, $B,	$8C, 9,	$A, $4F	; ...
; ---------------------------------------------------------------------------

loc_0_8975:				; ...
		JMP	sub_0_88EF
; ---------------------------------------------------------------------------

loc_0_8978:				; ...
		LDA	#$80
		STA	Objects_dir,X	; / angle
		JSR	obj_set_flags_by_dir
		JSR	levels_physics_bank5
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		AND	#3
		TAY
		JMP	loc_0_8A4C
; ---------------------------------------------------------------------------

object_dragon:				; ...
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		CMP	#$40
		BCS	loc_0_8975
		LDA	camera_lock_cnt
		ORA	Obj_anims_timer,X ; timer used for gfx frames
		ORA	Objects_death_timer,X ;	undamage time
		BNE	loc_0_89A6
		LDA	Objects_Xpos_L,X
		SEC
		SBC	Camera_X_pos_l	;  / level_position - on h levels
		CMP	#$C0
		BCS	loc_0_8978

loc_0_89A6:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	loc_0_8A1D
		LDA	Objects_death_timer,X ;	undamage time
		BNE	loc_0_89CA
		LDA	#$1E
		STA	camera_lock_cnt
		LDA	Objects_Zpos_L,X
		CMP	#$60
		BCS	loc_0_89CA
		LDA	Objects_Zpos_H,X
		BNE	loc_0_89CA
		LDA	#$D0
		STA	Objects_death_timer,X ;	undamage time
		LDA	#$70
		STA	Obj_anims_timer,X ; timer used for gfx frames

loc_0_89CA:				; ...
		LDA	#0
		STA	objects_some_anim,X ; some obj X speed
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$40
		BNE	loc_0_8A08
		LDA	#$FC
		JSR	object_inc_to_Xspeed ; A is speed
		JSR	obj_moving_by_speed
		LDA	Objects_Z_floor,X
		CMP	#$24
		LDA	#0
		BCC	loc_0_89E9
		LDA	#2

loc_0_89E9:				; ...
		STA	Objects_Z_speed,X
		LDA	#$40
		JSR	obj_add_Z_by_Zspd?_
		JSR	levels_physics_bank5
		JSR	sub_0_9E59
		LDY	Obj_anims_timer,X ; timer used for gfx frames
		LDA	#$C
		CPY	#$26
		BCS	loc_0_8A4F
		LDA	#$FF
		JSR	obj_unjk_cnt_add_
		JMP	loc_0_8A4C
; ---------------------------------------------------------------------------

loc_0_8A08:				; ...
		JSR	sub_0_E226
		JSR	set_on_transport

loc_0_8A0E:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BNE	loc_0_8A19
		STA	objects_some_anim,X ; some obj X speed
		STA	Objects_Z_speed,X

loc_0_8A19:				; ...
		LDA	#$A
		BNE	loc_0_8A4F

loc_0_8A1D:				; ...
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_8A28
		JSR	sub_0_E18C
		JMP	loc_0_8A19
; ---------------------------------------------------------------------------

loc_0_8A28:				; ...
		JSR	loc_0_96F7
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		BEQ	loc_0_8A33
		JSR	object_vs_camera_check ; lock obj to camera

loc_0_8A33:				; ...
		LDA	Objects_AnimID,X ; номер движения для запуска
		BNE	locret_0_8A52
		LDA	Objects_Z_speed,X
		BEQ	loc_0_8A46
		LDA	objects_some_anim,X ; some obj X speed
		BEQ	loc_0_8A46
		LDA	#9
		BNE	loc_0_8A4F

loc_0_8A46:				; ...
		LDA	Obj_various_cnt,X
		JSR	loc_0_E2E2	; rol,rol,rol,and#3,tay

loc_0_8A4C:				; ...
		LDA	byte_0_8A53,Y

loc_0_8A4F:				; ...
		STA	Objects_gfx_frame,X

locret_0_8A52:				; ...
		RTS
; End of function sub_0_88EF

; ---------------------------------------------------------------------------
byte_0_8A53:	.BYTE	 9,   9,  $A,  $A ; ...

; =============== S U B	R O U T	I N E =======================================


set_on_transport:			; ...
		LDA	#2

set_on_transport_:			; ...
		STA	hit_Z_table_index ; index for Z	collision tbl
		LDY	#1
		CLC
		LDA	#3
		JSR	check_hitting_
		BMI	locret_0_8A52
		LDA	Level_ID
		EOR	#terra_tubes
		BNE	loc_0_8A70
		STA	Objects_AnimID,Y ; номер движения для запуска
		BEQ	loc_0_8A73

loc_0_8A70:				; ...
		LDA	Objects_AnimID,Y ; номер движения для запуска

loc_0_8A73:				; ...
		ORA	Obj_anims_timer,Y ; timer used for gfx frames
		ORA	Objects_LinkedObj_ID,Y ; флаг/id присоединённого объекта
		ORA	Objects_Linker_ID,Y ; флаг/id какой объект меня	прицепил
		ORA	Objects_Z_floor,X
		ORA	Objects_death_timer,X ;	undamage time
		BNE	locret_0_8A52
		TXA
		CLC
		ADC	#$41		; 41+2 =43
		STA	Objects_LinkedObj_ID,Y ; флаг/id присоединённого объекта
		TYA
		ADC	#$41
		STA	Objects_Linker_ID,X ; 42
		JMP	some_state_upd
; End of function set_on_transport


; =============== S U B	R O U T	I N E =======================================


compare_for_hit_Z?:			; ...
		LDY	hit_Z_table_index ; index for Z	collision tbl
		LDA	hit_Z_table,Y

loc_0_8A99:				; ...
		ADC	Objects_Zpos_L,X
		STA	tmp_var_DF
		LDA	Objects_Zpos_H,X
		ADC	#0
		STA	tmp_var_E0
		LDA	hit_Z_table2,Y
		STA	tmp_var_E1
		LDY	tmp_var_21
		LDA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#damaged_heavy
		CMP	#damaged_heavy
		LDA	#$1C
		BCC	loc_0_8AB9
		LDA	#$E

loc_0_8AB9:				; ...
		STA	tmp_var_E2
		LDA	tmp_var_DF
		SEC
		SBC	Objects_Zpos_L,Y
		STA	tmp_var_DF
		LDA	tmp_var_E0
		SBC	Objects_Zpos_H,Y
		BNE	loc_0_8ACF
		LDA	tmp_var_E2
		CMP	tmp_var_DF
		RTS
; ---------------------------------------------------------------------------

loc_0_8ACF:				; ...
		CMP	#$FF
		BNE	locret_0_8AD8
		LDA	tmp_var_DF
		CLC
		ADC	tmp_var_E1

locret_0_8AD8:				; ...
		RTS
; End of function compare_for_hit_Z?

; ---------------------------------------------------------------------------
hit_Z_table:	.BYTE  $10,   0,   0, $14,   0,	  0,   0,   0, $10,   7,   0,	0,   0,	  0,   0 ; ...
hit_Z_table2:	.BYTE  $14, $10, $20, $18,   4,	  0,   0,   0, $10,  $C,  $C, $24, $1A,	$18, $30 ; ...

; =============== S U B	R O U T	I N E =======================================

; A - hit flags

check_hitting:				; ...
		LDY	#$E
		CPX	#2
; End of function check_hitting


; =============== S U B	R O U T	I N E =======================================


check_hitting_:				; ...
		STA	tmp_var_1F
		LDA	#$FF		; flag
		BCC	loc_0_8B05
		LDY	#0		; first	obj
		LDA	#1		; inc to obj

loc_0_8B05:				; ...
		STA	tmp_var_8e	; count	of spr to change pal

loc_0_8B07:				; ...
		STY	tmp_var_21	; obj slot target cnt
		LDA	Objects_TypeID,Y
		BEQ	check_netx_obj_hitting
		LDA	Objects_Linker_ID,Y ; флаг/id какой объект меня	прицепил
		AND	#$40
		ORA	Objects_death_timer,Y ;	undamage time
		BNE	check_netx_obj_hitting
		CPY	Object_RamSlotID_tmp ; id saved	for objects functions
		BEQ	check_netx_obj_hitting
		LDA	Objects_TypeID,Y
		TAY
		LDA	obj_hit_flags_cfg,Y
		AND	tmp_var_1F
		BEQ	check_netx_obj_hitting
		LDY	tmp_var_21	; obj slot target cnt
		JMP	loc_0_8B4B
; ---------------------------------------------------------------------------

check_netx_obj_hitting:			; ...
		LDA	tmp_var_21	; obj slot target cnt
		CLC
		ADC	tmp_var_8e	; count	of spr to change pal
		TAY
		CPY	#$F
		BCC	loc_0_8B07
		LDA	#$80		; return no hit
		RTS
; ---------------------------------------------------------------------------

sound_85:				; ...
		TYA
		PHA
		LDX	#snd_channel2
		LDA	#$85
		JSR	play_sound	; A is sound id, X - jmp_off (ch ID)
		PLA
		TAY
		RTS
; ---------------------------------------------------------------------------

loc_0_8B45:				; ...
		JMP	muhi
; ---------------------------------------------------------------------------

loc_0_8B48:				; ...
		JMP	picking_obj_or?
; ---------------------------------------------------------------------------

loc_0_8B4B:				; ...
		STA	tmp_var_20	; obj unk 3 dat
		AND	#8
		BNE	loc_0_8B45
		LDA	tmp_var_20	; obj unk 3 dat
		AND	#4
		BNE	loc_0_8B48
		LDA	tmp_var_20	; obj unk 3 dat
		AND	#$40
		BEQ	loc_0_8BDC
		LDA	Objects_AnimID,X ; номер движения для запуска
		CMP	#$24
		BEQ	loc_0_8BDC
		LDA	hit_Z_table_index ; index for Z	collision tbl
		CMP	#8
		BCC	loc_0_8B82
		LDA	#$A
		STA	hit_Z_table_index ; index for Z	collision tbl
		LDA	Objects_TypeID,Y
		CMP	#$3F
		BEQ	loc_0_8B79
		CMP	#$3C
		BNE	loc_0_8B7B

loc_0_8B79:				; ...
		INC	hit_Z_table_index ; index for Z	collision tbl

loc_0_8B7B:				; ...
		LDA	#3
		STA	tmp_var_20
		JMP	loc_0_8C1D
; ---------------------------------------------------------------------------

loc_0_8B82:				; ...
		LDA	#$10
		JSR	obj_compare_Y?
		BNE	check_netx_obj_hitting
		JSR	compare_for_hit_Z?
		BCC	check_netx_obj_hitting
		LDA	#$3A
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	check_netx_obj_hitting
		LDA	tmp_var_1B
		EOR	Objects_dir,X	; / angle
		BPL	check_netx_obj_hitting
		LDA	tmp_var_20
		AND	#3
		BNE	loc_0_8BB8

create_obj_4_:				; ...
		LDA	#4
		STA	Objects_TypeID,Y
		STA	Objects_cnt3,Y
		LDA	#0
		STA	Objects_cnt2,Y
		STA	Objects_Z_floor,Y
		STA	Objects_Anim_Ptr,Y ; оффсет чтения анимации
		JMP	sound_85
; ---------------------------------------------------------------------------

loc_0_8BB8:				; ...
		LDA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		ORA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		AND	#$40
		BNE	return_0_
		LDA	Level_ID
		CMP	#wookie_hole
		BEQ	return_0_
		LDA	Objects_AnimID,X ; номер движения для запуска
		CMP	#$1A
		BNE	loc_0_8BDC
		LDA	tmp_var_22
		CLC
		ADC	#$10
		STA	tmp_var_22

return_0_:				; ...
		LDA	#0
		RTS
; ---------------------------------------------------------------------------

loc_0_8BD9:				; ...
		JMP	loc_0_8C22
; ---------------------------------------------------------------------------

loc_0_8BDC:				; ...
		LDA	Objects_TypeID,Y
		CMP	#$15
		BEQ	loc_0_8BD9
		LDA	Objects_TypeID,X
		CMP	#$15
		BEQ	loc_0_8BEE
		CMP	#$10
		BNE	loc_0_8C16

loc_0_8BEE:				; ...
		LDA	Objects_X_shadow,X
		SBC	Objects_X_shadow,Y
		ADC	#$18
		CMP	#$30
		BCS	cont_check_hitting

loc_0_8BFA:				; ...
		LDA	Objects_Y_shad,Y
		SBC	Objects_Z_floor,Y
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_Y_shad,X
		SBC	Objects_Z_floor,X
		SBC	tmp_var_15	;  / Object Counter / various tmp
		ADC	#$20
		CMP	#$40
		BCS	cont_check_hitting
		LDA	#0
		RTS
; ---------------------------------------------------------------------------

cont_check_hitting:			; ...
		JMP	check_netx_obj_hitting
; ---------------------------------------------------------------------------

loc_0_8C16:				; ...
		LDA	#8
		JSR	obj_compare_Y?
		BNE	cont_check_hitting

loc_0_8C1D:				; ...
		JSR	compare_for_hit_Z?
		BCC	cont_check_hitting

loc_0_8C22:				; ...
		LDA	Objects_X_speed,X
		CMP	#$FF
		LDA	#$18
		BCS	loc_0_8C57
		STY	tmp_var_1C
		LDY	Objects_TypeID,X
		LDA	objects_unk_dat1,Y
		STA	tmp_var_1B
		LDY	tmp_var_1C
		LDA	Objects_TypeID,Y
		CPY	#2
		BCS	loc_0_8C4E
		CPX	#2
		BCC	loc_0_8C4E
		LDA	Objects_AnimID,Y ; номер движения для запуска
		CMP	#1
		LDA	#$C
		BCC	loc_0_8C52
		LDA	Objects_TypeID,Y

loc_0_8C4E:				; ...
		TAY
		LDA	objects_unk_dat1,Y

loc_0_8C52:				; ...
		CLC
		ADC	tmp_var_1B
		LDY	tmp_var_1C

loc_0_8C57:				; ...
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	loc_0_8CCA
		LDA	Objects_AnimID,X ; номер движения для запуска
		CMP	#$5E
		BEQ	return_0
		LDA	tmp_var_1B
		ADC	#8
		CMP	#$10
		BCC	loc_0_8C72
		LDA	tmp_var_1B
		EOR	Objects_dir,X	; / angle
		BPL	loc_0_8CCA

loc_0_8C72:				; ...
		LDA	tmp_var_1B
		ADC	#$12
		CMP	#$24
		BCS	loc_0_8C94
		LDA	tmp_var_20
		AND	#2
		BEQ	loc_0_8C94
		CPX	#2
		BCS	anim_picking_enemy
		LDA	Objects_LinkedObj_ID,Y ; флаг/id присоединённого объекта
		AND	#$40
		ORA	Objects_Linker_ID,Y ; флаг/id какой объект меня	прицепил
		ORA	Objects_Z_floor,X
		BNE	loc_0_8C94

anim_picking_enemy:			; ...
		LDA	#$A
		RTS
; ---------------------------------------------------------------------------

loc_0_8C94:				; ...
		LDA	tmp_var_20
		ROR	A
		BCC	loc_0_8CCA
		LDA	Objects_TypeID,Y
		CMP	#$15
		BNE	return_0
		JMP	loc_0_8BFA	; vs object 15
; ---------------------------------------------------------------------------

return_0:				; ...
		LDA	#0
		RTS
; ---------------------------------------------------------------------------

muhi:					; ...
		LDA	#$20
		JSR	obj_compare_Y?
		BNE	loc_0_8CCA
		LDA	#$40
		JSR	object_compare_Z
		BNE	loc_0_8CCA
		LDA	#$70
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	loc_0_8CCA
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ASL	A
		EOR	tmp_var_1B
		BPL	loc_0_8CCA
		TYA
		STA	players_tongue_dir,X

animID_poedanie_muh:			; level	1
		LDA	#$18
		RTS
; ---------------------------------------------------------------------------

loc_0_8CCA:				; ...
		JMP	check_netx_obj_hitting
; ---------------------------------------------------------------------------

picking_obj_or?:			; ...
		LDA	#$C
		JSR	obj_compare_Y?
		ORA	Objects_Z_floor,X
		ORA	Objects_Linker_ID,Y ; флаг/id какой объект меня	прицепил
		BNE	loc_0_8CCA
		LDA	#$18
		JSR	object_compare_Z
		BNE	loc_0_8CCA
		LDA	#$18
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	loc_0_8CCA
		STA	Objects_X_speed,X
		LDA	Objects_TypeID,Y
		CMP	#$3B		; picking snow
		BNE	anim_picking_obj
		LDA	#$5A		; throw	snow
		RTS
; ---------------------------------------------------------------------------

anim_picking_obj:			; ...
		LDA	tmp_var_1B
		AND	#$80
		EOR	#$80
		STA	Objects_dir,X	; / angle
		LDA	#8		; hit id
		RTS
; End of function check_hitting_


; =============== S U B	R O U T	I N E =======================================

; returns BEQ/BNE / $8F

obj_cmp_and_get_X_dist:			; ...
		STA	tmp_var_1C
		LDA	Objects_Xpos_L,X
		SEC
		SBC	Objects_Xpos_L,Y
		STA	tmp_var_1B
		LDA	Objects_Xpos_H,X
		SBC	Objects_Xpos_H,Y

loc_0_8D12:				; ...
		STA	tmp_var_8F
		BNE	loc_0_8D1D
		LDA	tmp_var_1C
		CMP	tmp_var_1B
		JMP	loc_0_8D25
; ---------------------------------------------------------------------------

loc_0_8D1D:				; ...
		CMP	#$FF
		BNE	loc_0_8D2A

loc_0_8D21:				; ...
		LDA	tmp_var_1B
		ADC	tmp_var_1C

loc_0_8D25:				; ...
		BCC	locret_0_8D29
		LDA	#0

locret_0_8D29:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_8D2A:				; ...
		LDA	Level_ID
		CMP	#revolution
		BNE	locret_0_8D29
		LDA	tmp_var_8F
		AND	#1
		BEQ	loc_0_8D12
		BNE	loc_0_8D21
		RTS
; End of function obj_cmp_and_get_X_dist


; =============== S U B	R O U T	I N E =======================================


obj_compare_Y?:				; ...
		STA	tmp_var_1C
		LDA	Objects_Ypos_L,X
		SEC
		SBC	Objects_Ypos_L,Y
		STA	tmp_var_1B
		LDA	Objects_Ypos_H,X
		SBC	Objects_Ypos_H,Y
		JMP	loc_0_8D12
; End of function obj_compare_Y?


; =============== S U B	R O U T	I N E =======================================


object_compare_Z:			; ...
		STA	tmp_var_1C
		LDA	Objects_Zpos_L,X
		SEC
		SBC	Objects_Zpos_L,Y
		STA	tmp_var_1B
		LDA	Objects_Zpos_H,X
		SBC	Objects_Zpos_H,Y
		STA	tmp_var_8d
		STA	tmp_var_8F
		BNE	loc_0_8D6B
		LDA	tmp_var_1C
		CMP	tmp_var_1B
		JMP	loc_0_8D73
; ---------------------------------------------------------------------------

loc_0_8D6B:				; ...
		CMP	#$FF
		BNE	locret_0_8D77
		LDA	tmp_var_1B
		ADC	tmp_var_1C

loc_0_8D73:				; ...
		BCC	locret_0_8D77
		LDA	#0

locret_0_8D77:				; ...
		RTS
; End of function object_compare_Z


; =============== S U B	R O U T	I N E =======================================


joypads_reading:			; ...
		LDX	#1
		STX	JOYPAD_PORT1	; Joypad #1 (RW)
		DEX
		STX	JOYPAD_PORT1	; Joypad #1 (RW)
		LDX	#8

loc_0_8D83:				; ...
		LDA	JOYPAD_PORT1	; Joypad #1 (RW)
		ROR	A
		ROL	tmp_var_15	;  / Object Counter / various tmp
		LDA	JOYPAD_PORT2	; Joypad #2/SOFTCLK (RW)
		ROR	A
		ROL	tmp_var_16
		DEX
		BNE	loc_0_8D83
		LDA	tmp_var_15	;  / Object Counter / various tmp
		TAX
		EOR	InputHold_P1	; данные первого джойстика на зажатие
		STX	InputHold_P1	; данные первого джойстика на зажатие
		AND	tmp_var_15	;  / Object Counter / various tmp
		STA	InputTap_P1	; данные первого джойстика на нажатие
		LDA	tmp_var_16
		TAX
		EOR	InputHold_P2	; данные второго джойстика на зажатие
		STX	InputHold_P2	; данные второго джойстика на зажатие
		AND	tmp_var_16
		STA	InputTap_P2	; данные второго джойстика на нажатие
		RTS
; End of function joypads_reading

; ---------------------------------------------------------------------------
byte_0_8DA9:	.BYTE $FF		; ...
byte_0_8DAA:	.BYTE 0			; ...
byte_0_8DAB:	.BYTE $10		; ...
byte_0_8DAC:	.BYTE $20		; ...
		.BYTE  $FD,   0,  $C,	0
		.BYTE	 0, $80, $20, $40
; ---------------------------------------------------------------------------

loc_0_8DB5:				; ...
		LDA	#1
		STA	timer_end_music
		RTS

; =============== S U B	R O U T	I N E =======================================


sub_0_8DBA:				; ...
		LDA	snd_tmp_var_39
		LDX	#2
		JMP	objects_Z_phys?
; End of function sub_0_8DBA


; =============== S U B	R O U T	I N E =======================================


players_Z?:				; ...
		LDY	Level_ID
		CPY	#wookie_hole
		BNE	loc_0_8E42
		LDY	objects_some_anim,X ; some obj X speed
		BEQ	loc_0_8DCF
		JMP	objects_Z?
; ---------------------------------------------------------------------------

loc_0_8DCF:				; ...
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		AND	#button_down|button_up
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_Ypos_L,X
		SEC
		SBC	Objects_Zpos_L,X
		SEC
		SBC	Camera_Y_pos_l	;  / level_position - on v levels
		CLC
		ADC	players_obj_un5,X
		TAY
		LDA	timer_end_music
		BEQ	loc_0_8DF6
		CPY	#$FD
		LDY	#0
		BCC	loc_0_8E19
		INC	Objects_Zpos_L,X
		LDA	timer_end_music
		BPL	loc_0_8DB5
		RTS
; ---------------------------------------------------------------------------

loc_0_8DF6:				; ...
		LDA	tmp_var_15	;  / Object Counter / various tmp
		CPY	#$E0
		BCC	loc_0_8E08
		LDA	#0
		STA	Objects_Z_spd_sub,X
		LDA	#1
		STA	Objects_Z_speed,X
		BNE	objects_Z?

loc_0_8E08:				; ...
		CPY	#$44
		BCC	objects_Z?
		TAY
		CMP	#8
		BEQ	loc_0_8E19
		CMP	#4
		BEQ	objects_Z?
		CMP	#0
		BNE	loc_0_8E23

loc_0_8E19:				; ...
		LDA	Objects_Z_speed,X
		BPL	loc_0_8E23
		LDA	byte_0_8DAC,Y
		BNE	objects_Z_phys?

loc_0_8E23:				; ...
		LDA	byte_0_8DAB,Y
		CLC
		ADC	Obj_various_cnt,X
		STA	Obj_various_cnt,X
		LDA	byte_0_8DA9,Y
		STA	Objects_Z_speed,X
		LDA	byte_0_8DAA,Y
		STA	Objects_Z_spd_sub,X
		LDA	#0
		JSR	objects_Z_phys?
		INC	Objects_Z_speed,X
		RTS
; ---------------------------------------------------------------------------

loc_0_8E42:				; ...
		LDY	Objects_AnimID,X ; номер движения для запуска
		BNE	loc_0_8E4A
		ROL	A
		BCS	objects_Z?

loc_0_8E4A:				; ...
		LDA	#$B0
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	#$D8
		BNE	loc_0_8E5A	; jump
; End of function players_Z?


; =============== S U B	R O U T	I N E =======================================


objects_Z?:				; ...
		LDA	#$D8
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDY	Level_ID
		LDA	#$F9

loc_0_8E5A:				; ...
		LDY	Level_ID
		CPY	#volkmire_inferno
		BEQ	loc_0_8E68
		CPY	#SurfCity
		BEQ	loc_0_8E68
		CPY	#TurboTunnel
		BNE	loc_0_8E7C

loc_0_8E68:				; ...
		LDY	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		BMI	loc_0_8E7C
		CPY	#$40
		BCC	loc_0_8E7C
		LDA	#$E8
		LDY	players_obj_un3,X
		BPL	objects_Z_phys?
		LDA	#$F9
; End of function objects_Z?


; =============== S U B	R O U T	I N E =======================================


objects_Z_phys?:			; ...
		STA	tmp_var_15	;  / Object Counter / various tmp

loc_0_8E7C:				; ...
		LDY	Objects_TypeID,X
		LDA	objects_unk_dat2,Y ; Z?
		AND	#$F
		CPX	#2
		BCS	loc_0_8EA8
		LDY	Objects_death_timer,X ;	undamage time
		BMI	loc_0_8EA8
		LDY	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		BMI	loc_0_8EA8
		LDY	player1_water_flag,X ; $80 - in	water (terra tubes)
		BEQ	loc_0_8EA8
		BMI	loc_0_8E9E
		LDY	Objects_Z_speed,X
		BPL	loc_0_8EA8

loc_0_8E9E:				; ...
		LDA	tmp_var_15	;  / Object Counter / various tmp
		LSR	A
		LSR	A
		ORA	#$C0
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	#2

loc_0_8EA8:				; ...
		STA	tmp_var_1F
		LDA	Objects_Z_floor,X
		STA	Obj_Z_floor_tmp
		LDA	tmp_var_15	;  / Object Counter / various tmp
		CMP	#$80
		BCS	loc_0_8ECA
		ADC	Objects_Z_spd_sub,X
		STA	Objects_Z_spd_sub,X
		BCC	obj_add_Z_by_Zspd?_
		LDA	Objects_Z_speed,X
		EOR	tmp_var_1F
		BEQ	loc_0_8ED9
		INC	Objects_Z_speed,X
		JMP	obj_add_Z_by_Zspd?
; ---------------------------------------------------------------------------

loc_0_8ECA:				; ...
		ADC	Objects_Z_spd_sub,X
		STA	Objects_Z_spd_sub,X
		BCS	obj_add_Z_by_Zspd?_
		LDA	tmp_var_1F
		ADC	Objects_Z_speed,X
		BNE	loc_0_8EDE

loc_0_8ED9:				; ...
		STA	Objects_Z_spd_sub,X
		BEQ	obj_add_Z_by_Zspd?_

loc_0_8EDE:				; ...
		DEC	Objects_Z_speed,X

obj_add_Z_by_Zspd?:			; ...
		LDA	Objects_Z_spd_sub,X

obj_add_Z_by_Zspd?_:			; ...
		CLC
		ADC	Objects_Z_sub,X
		STA	Objects_Z_sub,X
		LDA	Objects_Z_speed,X
; End of function objects_Z_phys?


; =============== S U B	R O U T	I N E =======================================

; A is Z_speed

objects_add_Z?:				; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		ADC	Objects_Zpos_L,X
		STA	Objects_Zpos_L,X
		PHP
		LDA	#$80
		CMP	tmp_var_15	;  / Object Counter / various tmp
		LDA	#0
		SBC	#0
		PLP
		ADC	Objects_Zpos_H,X
		STA	Objects_Zpos_H,X
		BPL	locret_0_8F49
		CMP	#$FF		; near screen border
		BNE	loc_0_8F1B
		LDA	players_obj_unk,X
		ROL	A
		LDA	#$D0
		BCC	loc_0_8F16
		LDA	#$A0

loc_0_8F16:				; ...
		CMP	Objects_Zpos_L,X ; out of screen?
		BCC	locret_0_8F49

loc_0_8F1B:				; ...
		LDA	Objects_death_timer,X ;	undamage time
		AND	#$80
		CPX	#2
		BCS	loc_0_8F29
		ORA	player1_endLvL_timer,X
		ORA	stop_scroll_flag

loc_0_8F29:				; ...
		ORA	timer_end_music
		BNE	clear_obj_anims_timer
		LDA	#$D0		; write	death timer
		STA	Objects_death_timer,X ;	undamage time
		LDA	#0
		STA	Objects_Life,X
		CPX	#2
		BCS	clear_obj_anims_timer
		INC	update_ui_flag
		STX	tmp_var_92
		JSR	play_sound_89
		LDX	tmp_var_92

clear_obj_anims_timer:			; ...
		LDA	#0
		STA	Obj_anims_timer,X ; timer used for gfx frames

locret_0_8F49:				; ...
		RTS
; End of function objects_add_Z?

; ---------------------------------------------------------------------------

obj_moving_by_speed_:			; ...
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

; =============== S U B	R O U T	I N E =======================================


obj_moving_by_speed:			; ...
		LDA	Objects_X_speed,X

change_obj_coord?_:			; ...
		AND	#$F0		; A is speed
		BEQ	locret_0_8F96
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_dir,X	; / angle
		LSR	A
		LSR	A
		AND	#$F
		STA	tmp_var_17
		BEQ	loc_0_8F66
		ORA	tmp_var_15	;  / Object Counter / various tmp
		TAY
		LDA	spd_table - $11,Y

loc_0_8F66:				; ...
		TAY
		AND	#7
		STA	tmp_var_21
		TYA
		AND	#$F8
		STA	tmp_var_22
		LDA	tmp_var_17
		EOR	#$F
		ORA	tmp_var_15	;  / Object Counter / various tmp
		TAY
		LDA	spd_table - $10,Y
		TAY
		AND	#7
		STA	tmp_var_1B
		TYA
		AND	#$F8
		STA	tmp_var_1C
		LDA	Objects_dir,X	; / angle
		AND	#$C0
		BEQ	Add_XY_2	; 1B-1C	is X, 21-22 is Y
		CMP	#$C0
		BEQ	add_XY_1	; 21-22	is X, 1B-1C is Y
		CMP	#$80
		BEQ	SBC_XY_1	; 1B-1C	is X, 21-22 is Y
		JMP	SBC_XY_2	; 21-22	is X, 1B-1C is Y
; ---------------------------------------------------------------------------

locret_0_8F96:				; ...
		RTS
; ---------------------------------------------------------------------------

add_XY_1:				; ...
		LDA	Objects_X_sub,X	; 21-22	is X, 1B-1C is Y
		CLC
		ADC	tmp_var_22
		STA	Objects_X_sub,X
		LDA	Objects_Xpos_L,X
		ADC	tmp_var_21
		STA	Objects_Xpos_L,X
		BCC	loc_0_8FAD
		INC	Objects_Xpos_H,X

loc_0_8FAD:				; ...
		LDA	Objects_Y_sub,X
		CLC
		ADC	tmp_var_1C
		STA	Objects_Y_sub,X
		LDA	Objects_Ypos_L,X
		ADC	tmp_var_1B
		STA	Objects_Ypos_L,X
		BCC	locret_0_8FC3
		INC	Objects_Ypos_H,X

locret_0_8FC3:				; ...
		RTS
; ---------------------------------------------------------------------------

SBC_XY_1:				; ...
		LDA	Objects_X_sub,X	; 1B-1C	is X, 21-22 is Y
		SBC	tmp_var_1C
		STA	Objects_X_sub,X
		LDA	Objects_Xpos_L,X
		SBC	tmp_var_1B
		STA	Objects_Xpos_L,X
		BCS	loc_0_8FD9
		DEC	Objects_Xpos_H,X

loc_0_8FD9:				; ...
		LDA	Objects_Y_sub,X
		CLC
		ADC	tmp_var_22
		STA	Objects_Y_sub,X
		LDA	Objects_Ypos_L,X
		ADC	tmp_var_21
		STA	Objects_Ypos_L,X
		BCC	locret_0_8FEF
		INC	Objects_Ypos_H,X

locret_0_8FEF:				; ...
		RTS
; ---------------------------------------------------------------------------

Add_XY_2:				; ...
		LDA	Objects_X_sub,X	; 1B-1C	is X, 21-22 is Y
		CLC
		ADC	tmp_var_1C
		STA	Objects_X_sub,X
		LDA	Objects_Xpos_L,X
		ADC	tmp_var_1B
		STA	Objects_Xpos_L,X
		BCC	loc_0_9006
		INC	Objects_Xpos_H,X

loc_0_9006:				; ...
		LDA	Objects_Y_sub,X
		SEC
		SBC	tmp_var_22
		STA	Objects_Y_sub,X
		LDA	Objects_Ypos_L,X
		SBC	tmp_var_21
		STA	Objects_Ypos_L,X
		BCS	locret_0_901C
		DEC	Objects_Ypos_H,X

locret_0_901C:				; ...
		RTS
; ---------------------------------------------------------------------------

SBC_XY_2:				; ...
		LDA	Objects_X_sub,X	; 21-22	is X, 1B-1C is Y
		SEC
		SBC	tmp_var_22
		STA	Objects_X_sub,X
		LDA	Objects_Xpos_L,X
		SBC	tmp_var_21
		STA	Objects_Xpos_L,X
		BCS	loc_0_9034
		DEC	Objects_Xpos_H,X
		SEC

loc_0_9034:				; ...
		LDA	Objects_Y_sub,X
		SBC	tmp_var_1C
		STA	Objects_Y_sub,X
		LDA	Objects_Ypos_L,X
		SBC	tmp_var_1B
		STA	Objects_Ypos_L,X
		BCS	locret_0_9049
		DEC	Objects_Ypos_H,X

locret_0_9049:				; ...
		RTS
; End of function obj_moving_by_speed

; ---------------------------------------------------------------------------
spd_table:	.BYTE 0, 8, $10, $18, $20, $20,	$28, $30, $30, $38, $38, $38, $40, $40,	$40, $40, 8, $18, $28, $30, $40, $48, $50, $60 ; ...
		.BYTE $68, $70,	$78, $78, $80, $80, $80, $88, $10, $28,	$38, $48, $60, $70, $80, $90, $98, $A8,	$B0, $B8, $C0, $C8, $C8
		.BYTE $C8, $18,	$30, $50, $68, $80, $90, $A8, $C0, $D0,	$E0, $F0, $F8, 1, 9, 9,	1, $20,	$40, $60, $80, $A0, $B8, $D8
		.BYTE $F0, 9, $19, $29,	$39, $41, $49, $51, $51, $28, $50, $70,	$98, $C0, $E0, 1, $21, $39, $51, $69, $79, $81,	$91
		.BYTE $99, $81,	$28, $58, $88, $B0, $E0, 9, $29, $51, $71, $89,	$A1, $B9, $C9, $D1, $D9, $D9, $30, $68,	$98, $D0, 1
		.BYTE $31, $59,	$81, $A1, $C1, $E1, $F9, 2, 2, 2, 2, $38, $78, $B0, $E8, $21, $51, $81,	$B1, $D9, $F9, $1A, $3A, $4A
		.BYTE $5A, $62,	$62, $40, $80, $C0, 1, $41, $79, $B1, $E1, $12,	$3A, $5A, $72, $8A, $9A, $AA, $AA, $48,	$90, $D8, $21
		.BYTE $61, $A1,	$D9, $12, $42, $72, $92, $B2, $CA, $E2,	$EA, $EA, $50, $A0, $E8, $39, $81, $C1,	$A, $42, $7A, $AA, $D2
		.BYTE $F2, $13,	$23, $33, 3, $50, $A8, 1, $51, $A1, $E9, $32, $72, $AA,	$E2, $B, $33, $53, $63,	$73, $7B, $58, $B8, $11
		.BYTE $69, $C1,	$12, $5A, $A2, $E2, $1B, $4B, $73, $93,	$AB, $B3, $BB, $60, $C8, $29, $89, $E1,	$3A, $8A, $D2, $1B, $53
		.BYTE $83, $B3,	$D3, $EB, $FB, 4
; ---------------------------------------------------------------------------

object_dmg_hit:				; ...
		DEC	Objects_cnt2,X
		BNE	locret_0_918E

loc_0_913F:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


play_sound_62:				; ...
		LDA	#$F8
		STA	bkg_vs_spr_pos_neg
		LDA	#$62
; End of function play_sound_62


; =============== S U B	R O U T	I N E =======================================


play_sound_ch4:				; ...
		LDX	#snd_channel4

play_sound:				; ...
		JSR	jump_to_play_sound ; A is sound	id, X -	jmp_off	(ch ID)
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		RTS
; End of function play_sound_ch4


; =============== S U B	R O U T	I N E =======================================


object_level1_boss_noga:		; ...
		LDA	#1
		STA	flag_boss_1
		INC	Objects_cnt2,X
		LDA	Objects_cnt2,X
		CMP	#$FF
		BEQ	loc_0_913F
		CMP	#$E0
		BEQ	music_for_noga
		CMP	#$30
		BEQ	loc_0_916A
		CMP	#$64
		BNE	loc_0_9171

loc_0_916A:				; ...
		JSR	play_sound_62
		LDA	#8
		STA	some_sound_flag	; by tables

loc_0_9171:				; ...
		JSR	write_anim_fear
		LDA	Objects_cnt2,X
		CMP	#$50
		BCC	locret_0_918E
		LDA	#$12
		STA	Objects_gfx_frame,X
		JSR	objects_Z?
		JSR	levels_physics_bank5
		LDA	Objects_Z_floor,X
		BEQ	locret_0_918E
		DEC	Objects_Xpos_L,X

locret_0_918E:				; ...
		RTS
; End of function object_level1_boss_noga


; =============== S U B	R O U T	I N E =======================================


write_anim_fear:			; ...
		LDX	#1

write_anim_fear_:			; ...
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	Level_ID
		CMP	#revolution
		LDA	#$2C
		BCS	loc_0_91A6
		LDA	Objects_cnt2,Y
		CMP	#$E0
		LDA	#$2C
		BCC	loc_0_91A6
		LDA	#$2E

loc_0_91A6:				; ...
		STA	Objects_AnimID,X ; номер движения для запуска
		STY	global_var_cnt?
		STX	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	drop_and_remove_stick
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDY	global_var_cnt?
		STY	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		BEQ	loc_0_91D1
		AND	#$1F
		TAY
		DEY
		LDA	#$40
		STA	Objects_X_speed,Y
		LDA	#2
		STA	Objects_Z_speed,Y
		LDA	#0
		STA	Objects_Linker_ID,Y ; флаг/id какой объект меня	прицепил
		STA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта

loc_0_91D1:				; ...
		LDA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		AND	#7
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		DEX
		BPL	write_anim_fear_
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		RTS
; End of function write_anim_fear


; =============== S U B	R O U T	I N E =======================================


music_for_noga:				; ...
		LDY	#$E
		JSR	set_music_by_level_id
		LDX	#$5D

loc_0_91E6:				; ...
		LDY	#6
		JSR	jump_from_bank0
		JMP	frame_end_wait_nmi
; ---------------------------------------------------------------------------

loc_0_91EE:				; ...
		LDX	#$60
		BNE	loc_0_91E6	; jump
; End of function music_for_noga


; =============== S U B	R O U T	I N E =======================================


screen_off:				; ...
		LDA	#$10		; nmi off, bg at $1000
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		JSR	wait_vblank
		LDY	#0		; bg+spr off
		STY	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		RTS
; End of function screen_off


; =============== S U B	R O U T	I N E =======================================


object_level1_boss_dead:		; ...
		LDA	Objects_gfx_frame,X
		BNE	loc_0_9216
		LDA	timer_end_music
		BMI	locret_0_923D
		LDA	Objects_Life,X
		AND	#$F0
		STA	Objects_dir,X	; / angle
		LDA	#$80
		STA	Objects_X_speed,X

loc_0_9216:				; ...
		JSR	obj_set_flags_by_dir
		LDA	#$FF
		JSR	object_inc_to_Xspeed ; A is speed
		LDA	objects_some_anim,X ; some obj X speed
		STA	Objects_gfx_frame,X
		STA	Obj_anims_timer,X ; timer used for gfx frames
		LDA	Objects_Z_floor,X
		BEQ	loc_0_922F
		JSR	obj_moving_by_speed

loc_0_922F:				; ...
		JSR	objects_Z?
		JSR	levels_physics_bank5
		JSR	test_Z_speed_and_floor?
		BNE	locret_0_923D
		JSR	loc_0_B057

locret_0_923D:				; ...
		RTS
; End of function object_level1_boss_dead


; =============== S U B	R O U T	I N E =======================================


object_level1_boss_dmg_spr:		; ...
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		JSR	level1_boss_loc
		DEC	objects_some_anim,X ; some obj X speed
		BNE	loc_0_924C
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

loc_0_924C:				; ...
		LDA	#$C7
		STA	Objects_gfx_frame,X
		RTS
; End of function object_level1_boss_dmg_spr


; =============== S U B	R O U T	I N E =======================================


object_level1_boss_turrets:		; ...
		LDA	Objects_Zpos_L,X
		CMP	#$50
		BEQ	loc_0_925C
		INC	Objects_Zpos_L,X

loc_0_925C:				; ...
		LDA	Objects_cnt2,X
		BEQ	loc_0_9264
		DEC	Objects_cnt2,X

loc_0_9264:				; ...
		LDA	players_cnt_unk
		BEQ	loc_0_92C5
		AND	#7
		BNE	loc_0_92C5
		LDY	objects_some_anim,X ; some obj X speed
		BPL	loc_0_9273
		LDA	#8

loc_0_9273:				; ...
		EOR	players_cnt_unk
		AND	#8
		BEQ	loc_0_92C5
		LDA	flag_boss_1
		CMP	#2
		BEQ	loc_0_92C5
		LDA	#$18
		STA	global_var5
		STA	global_var6
		LDA	#7
		STA	Objects_cnt2,X
		JSR	get_free_obj_slot_IDX
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	copy_objects_XYZ
		LDA	objects_some_anim,Y ; some obj X speed
		AND	#$40
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		CMP	#$40
		LDA	#$18
		BCC	loc_0_92A2
		LDA	#$68

loc_0_92A2:				; ...
		STA	Objects_dir,X	; / angle
		LDA	#$10
		STA	Objects_TypeID,X
		LDA	#$F0
		STA	Objects_X_speed,X
		LDA	players_cnt_unk
		CMP	#9
		BCS	loc_0_92BC
		STA	Objects_Life,X
		LDA	#$4E
		BNE	loc_0_92BE	; jump

loc_0_92BC:				; ...
		LDA	#$50

loc_0_92BE:				; ...
		LDX	#snd_channel2
		JSR	jump_to_play_sound ; A is sound	id, X -	JmpOff (channel	id)
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_0_92C5:				; ...
		JSR	level1_boss_sub
		LDA	#$10
		STA	Objects_gfx_frame,X
		LDA	objects_some_anim,X ; some obj X speed
		AND	#$40
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		RTS
; End of function object_level1_boss_turrets


; =============== S U B	R O U T	I N E =======================================


level1_boss_sub:			; ...
		LDA	objects_some_anim,X ; some obj X speed
		CLC
		ADC	Objects_cnt2,X
		BMI	level1_boss_loc
		SEC
		SBC	Objects_cnt2,X
		SBC	Objects_cnt2,X

level1_boss_loc:			; ...
		JSR	object_X_by_camera
		LDA	Objects_cnt2,X
		CLC
		ADC	#$18
		ADC	Camera_Y_pos_l	;  / level_position - on v levels
		STA	Objects_Ypos_L,X
		LDA	Camera_Y_pos_H
		ADC	#1
		STA	Objects_Ypos_H,X
		RTS
; End of function level1_boss_sub


; =============== S U B	R O U T	I N E =======================================


object_X_by_camera:			; ...
		CLC

object_X_by_camera_:			; ...
		ADC	Camera_X_pos_l	;  / level_position - on h levels
		STA	Objects_Xpos_L,X
		LDA	Camera_X_pos_H
		ADC	#0
		STA	Objects_Xpos_H,X
		RTS
; End of function object_X_by_camera


; =============== S U B	R O U T	I N E =======================================


object_level1_boss:			; ...
		LDA	FrameCounter
		BNE	loc_0_9312
		LDA	#$40		; boss 1 shoot timer
		STA	players_cnt_unk

loc_0_9312:				; ...
		LDA	players_cnt_unk
		BEQ	loc_0_9318
		DEC	players_cnt_unk

loc_0_9318:				; ...
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_9337
		DEC	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_9334
		LDA	FrameCounter
		AND	#3
		BNE	loc_0_932E
		LDA	Camera_X_pos_l	;  / level_position - on h levels
		EOR	#4		; boss X mov camera speed
		STA	Camera_X_pos_l	;  / level_position - on h levels

loc_0_932E:				; ...
		LDA	#$5A
		STA	Camera_Y_pos_l_2
		BNE	loc_0_935C

loc_0_9334:				; ...
		JMP	loc_0_91EE
; ---------------------------------------------------------------------------

loc_0_9337:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	loc_0_934C
		DEC	Obj_anims_timer,X ; timer used for gfx frames
		AND	#1
		BNE	loc_0_935C
		LDA	Camera_X_pos_l	;  / level_position - on h levels
		EOR	#2
		STA	Camera_X_pos_l	;  / level_position - on h levels
		JMP	loc_0_935C
; ---------------------------------------------------------------------------

loc_0_934C:				; ...
		LDA	Objects_cnt3,X
		CMP	#$20
		BEQ	loc_0_9356
		INC	Objects_cnt3,X

loc_0_9356:				; ...
		LDA	FrameCounter
		AND	#$7F
		BEQ	loc_0_9365

loc_0_935C:				; ...
		JSR	level1_boss_sub
		LDA	#$11
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------

loc_0_9365:				; ...
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		INC	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		AND	#7
		AND	#3
		ASL	A
		ASL	A
		TAY
		LDX	#0

loc_0_9374:				; ...
		LDA	byte_0_9386,Y
		STA	global_var1,X
		INY
		INX
		CPX	#4
		BNE	loc_0_9374
		LDA	#$44
		LDX	#snd_channel2
		JMP	jump_to_play_sound ; A is sound	id, X -	JmpOff (channel	id)
; End of function object_level1_boss

; ---------------------------------------------------------------------------
byte_0_9386:	.BYTE	 2, $23,   0,	0 ; ...
		.BYTE	 0,   0,   4, $60
		.BYTE  $FE, $23, $FC, $60
		.BYTE	 0,   0,   0,	0

; =============== S U B	R O U T	I N E =======================================


object_level1_boss_bullet:		; ...
		JSR	obj_moving_by_speed
		LDA	Objects_cnt2,X
		CLC
		ADC	#3
		STA	Objects_cnt2,X
		CMP	#$57
		BCS	loc_0_93C8
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	tmp_var_15	;  / Object Counter / various tmp
		CLC
		ADC	#$13
		STA	Objects_gfx_frame,X
		LDA	Objects_Life,X
		BEQ	locret_0_93C7
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ORA	#1
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	#$7D
		SEC
		SBC	tmp_var_15	;  / Object Counter / various tmp
		STA	Objects_gfx_frame,X

locret_0_93C7:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_93C8:				; ...
		LDA	#$6E
		JSR	write_obj_Anim_ID
		JSR	read_obj_anim	; without ptr inc
		LDA	Objects_Life,X
		BEQ	loc_0_93FB
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	#5
		STA	Objects_TypeID,X
		LDA	Objects_Ypos_L,X
		STA	objects_some_anim,X ; some obj X speed
		JSR	levels_physics_bank5
		LDA	Objects_Ypos_L,X
		SEC
		SBC	Objects_Ypos_L,X
		CLC
		JSR	objects_add_Z?	; A is Z_speed
		LDA	#2
		STA	Objects_Z_speed,X
		LDA	#$90
		STA	objects_some_anim,X ; some obj X speed
		RTS
; ---------------------------------------------------------------------------

loc_0_93FB:				; ...
		JMP	clear_object_vars ; remove object
; End of function object_level1_boss_bullet


; =============== S U B	R O U T	I N E =======================================


drop_and_remove_stick:			; ...
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#have_stick
		BEQ	locret_0_93C7
		LDA	#$DF
		JSR	upd_state

drop_stick_:				; ...
		LDA	Level_ID
		CMP	#wookie_hole
		BNE	loc_0_9413
		JMP	create_obj_ravenclaw
; ---------------------------------------------------------------------------

loc_0_9413:				; ...
		JSR	create_obj_stick
		INC	Objects_TypeID,X
		LDA	#0
		STA	objects_some_anim,X ; some obj X speed
		LSR	Objects_X_speed,X
		LDA	#$10
		JSR	objects_add_Z?	; A is Z_speed
		TXA
		TAY
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		RTS
; End of function drop_and_remove_stick


; =============== S U B	R O U T	I N E =======================================


create_obj_stick:			; ...
		JSR	get_free_obj_slot_IDX
		LDA	#$1B
		STA	Objects_TypeID,X
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	Objects_dir,Y	; / angle
		STA	Objects_dir,X	; / angle
		LDA	#$80
		STA	Objects_X_speed,X
		LDA	#4
		STA	Objects_Z_speed,X
		JMP	copy_objects_XYZ
; End of function create_obj_stick


; =============== S U B	R O U T	I N E =======================================


object_tall_walker:			; ...
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		STA	Objects_Z_floor,X
		LDA	Objects_death_timer,X ;	undamage time
		BNE	loc_0_945D
		LDA	#$1E
		STA	camera_lock_cnt

loc_0_945D:				; ...
		JSR	obj_moving_by_speed
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	loc_0_94B6
		LDA	Objects_AnimID,X ; номер движения для запуска
		BNE	loc_0_9485
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_9485
		STA	Objects_AnimID,X ; номер движения для запуска
		JSR	create_obj_stick
		LDA	#$30
		JSR	objects_add_Z?	; A is Z_speed
		JSR	drop_stick_
		LDA	Objects_dir,Y	; / angle
		EOR	#$80
		STA	Objects_dir,Y	; / angle

loc_0_9485:				; ...
		JSR	sub_0_E1A7
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$40
		BNE	loc_0_9494
		JMP	loc_0_95AE
; ---------------------------------------------------------------------------
byte_0_9492:	.BYTE $E8		; ...
		.BYTE $F0
; ---------------------------------------------------------------------------

loc_0_9494:				; ...
		LDA	Objects_X_speed,X
		LSR	A
		LSR	A
		LSR	A
		EOR	#$FF
		LDY	Objects_TypeID,X
		CMP	byte_0_9492 - $11,Y
		BCS	loc_0_94A7
		LDA	byte_0_9492 - $11,Y

loc_0_94A7:				; ...
		STA	Obj_various_cnt,X
		JSR	sub_0_95BA
		CLC
		ADC	#2
		STA	Objects_cnt3,X
		JMP	loc_0_95AE
; ---------------------------------------------------------------------------

loc_0_94B6:				; ...
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_94C1
		JSR	sub_0_E18C
		JMP	loc_0_95AE
; ---------------------------------------------------------------------------

loc_0_94C1:				; ...
		LDA	#$FC
		JSR	object_inc_to_Xspeed ; A is speed
		LDY	Objects_AnimID,X ; номер движения для запуска
		BEQ	loc_0_94EE
		LDA	#0		; every	frame
		JSR	start_read_anim	; with ptr inc by AND with frame cnt
		LDA	Objects_gfx_frame,X
		SEC
		SBC	#$18
		JSR	sub_0_95BA
		LDA	Objects_AnimID,X ; номер движения для запуска
		EOR	#$3C
		BEQ	loc_0_94E7
		DEY
		TYA
		EOR	#$FF
		CMP	#$80
		ROR	A

loc_0_94E7:				; ...
		CLC
		ADC	Objects_Xpos_L,X
		JMP	loc_0_959D
; ---------------------------------------------------------------------------

loc_0_94EE:				; ...
		JSR	sub_0_E317
		LDA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		BEQ	loc_0_94FF
		DEC	Objects_Anim_Ptr,X ; оффсет чтения анимации

loc_0_94F9:				; ...
		LDA	Obj_various_cnt,X
		JMP	loc_0_958F
; ---------------------------------------------------------------------------

loc_0_94FF:				; ...
		LDA	tmp_var_1A
		BNE	loc_0_94F9
		LDA	tmp_var_19
		ORA	tmp_var_17
		BNE	loc_0_9558
		LDA	tmp_var_16
		ADC	#$60
		TAY
		LDA	tmp_var_15	;  / Object Counter / various tmp
		ADC	#0
		BNE	loc_0_9558
		CPY	#$80
		BCS	loc_0_9549
		CPY	#$40
		BCC	loc_0_9549
		TYA
		SBC	#$50
		CMP	#$20
		BCS	loc_0_952F
		LDA	tmp_var_15	;  / Object Counter / various tmp
		EOR	#$80
		AND	#$80
		STA	Objects_dir,X	; / angle
		JMP	loc_0_9558
; ---------------------------------------------------------------------------

loc_0_952F:				; ...
		LDY	Objects_TargetID,X
		LDA	Objects_Life,Y
		AND	#$F
		CMP	#4
		LDA	#$3A
		BCC	loc_0_953F
		LDA	#$3C

loc_0_953F:				; ...
		JSR	write_obj_Anim_ID
		LDA	#0
		STA	Obj_various_cnt,X
		BEQ	loc_0_95A0

loc_0_9549:				; ...
		CPY	#$C0
		BCS	loc_0_9558
		LDA	RandomValue_1
		AND	#$F
		BNE	loc_0_9558
		LDA	#$40
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации

loc_0_9558:				; ...
		LDA	#$40
		STA	Objects_X_speed,X
		LDA	Objects_TypeID,X
		CMP	#$12
		LDA	#$10
		BCS	loc_0_9568
		LDA	#$18

loc_0_9568:				; ...
		CMP	Obj_various_cnt,X
		BEQ	loc_0_9573
		CLC
		ADC	Obj_various_cnt,X
		BNE	loc_0_957B

loc_0_9573:				; ...
		LDA	#$FE
		EOR	Objects_cnt2,X
		STA	Objects_cnt2,X

loc_0_957B:				; ...
		LDA	Objects_cnt2,X
		CLC
		ADC	#1
		LDY	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	loc_0_9588
		ASL	A
		ASL	A

loc_0_9588:				; ...
		CLC
		ADC	Obj_various_cnt,X
		STA	Obj_various_cnt,X

loc_0_958F:				; ...
		CLC
		ADC	Objects_Xpos_L,X
		STA	objects_some_anim,X ; some obj X speed
		LDA	Objects_Xpos_L,X
		SEC
		SBC	Obj_various_cnt,X

loc_0_959D:				; ...
		STA	Objects_cnt3,X

loc_0_95A0:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BNE	loc_0_95AE
		JSR	objects_Z?
		JSR	levels_physics_bank5
		JSR	sub_0_E271

loc_0_95AE:				; ...
		LDA	Objects_Z_floor,X
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	#$19
		STA	Objects_gfx_frame,X
		RTS
; End of function object_tall_walker


; =============== S U B	R O U T	I N E =======================================


sub_0_95BA:				; ...
		TAY
		LDA	Objects_dir,X	; / angle
		BPL	loc_0_95C5
		DEY
		TYA
		EOR	#$FF
		TAY

loc_0_95C5:				; ...
		TYA
		CLC
		ADC	Objects_Xpos_L,X
		STA	objects_some_anim,X ; some obj X speed
		RTS
; End of function sub_0_95BA


; =============== S U B	R O U T	I N E =======================================


create_obj_ravenclaw:			; ...
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions

create_obj_ravenclaw_:			; ...
		JSR	get_free_obj_slot_IDX
		JSR	copy_objects_XYZ_and_dir
		LDA	#$70
		STA	Objects_X_speed,X
		LDA	#$2F
		STA	Objects_TypeID,X
		LDA	#1
		STA	Objects_Z_speed,X
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		RTS
; End of function create_obj_ravenclaw

; ---------------------------------------------------------------------------

loc_0_95E8:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_dead_raven:			; ...
		LDA	#$22
		STA	Objects_gfx_frame,X
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_95E8
		LDA	Objects_X_speed,X
		CMP	#$FF
		BNE	loc_0_9624
		INC	Objects_gfx_frame,X
		LDY	Objects_TargetID,X
		JSR	copy_objects_XYZ
		LDA	Objects_dir,Y	; / angle
		LSR	A
		AND	#$40
		EOR	#$40
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		TXA
		AND	#7
		ASL	A
		ASL	A
		JSR	objects_add_Z?	; A is Z_speed
		LDA	Objects_X_speed,Y
		CMP	#$FF
		BEQ	locret_0_9642
		LDA	#0
		STA	Objects_X_speed,X

loc_0_9624:				; ...
		LDA	#$FC
		JSR	object_inc_to_Xspeed ; A is speed
		JSR	obj_moving_by_speed
		LDA	#$E8
		JSR	objects_Z_phys?

loc_0_9631:				; ...
		JSR	levels_physics_bank5
		LDA	#3
; End of function object_dead_raven


; =============== S U B	R O U T	I N E =======================================


rnd_swap_flags_dir?:			; ...
		AND	FrameCounter
		BNE	locret_0_9642
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		EOR	#$40
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?

locret_0_9642:				; ...
		RTS
; End of function rnd_swap_flags_dir?


; =============== S U B	R O U T	I N E =======================================


object_raven_large:			; ...
		LDA	Objects_X_speed,X
		CMP	#$60
		BCC	loc_0_964F
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_95E8

loc_0_964F:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BNE	loc_0_96AB
		LDA	Objects_X_speed,X
		BNE	loc_0_9688
		LDA	Objects_cnt2,X
		BEQ	loc_0_966C
		LDA	#$1E
		STA	camera_lock_cnt
		JSR	sub_0_B976
		DEC	Objects_cnt2,X
		BNE	loc_0_9684
		BEQ	loc_0_9688

loc_0_966C:				; ...
		JSR	obj_set_dir_by_Xlow
		LDA	#2
		CLC
		JSR	objects_add_Z?	; A is Z_speed
		LDA	Objects_Y_shad,X
		BEQ	loc_0_9684
		CMP	objects_some_anim,X ; some obj X speed
		BCS	loc_0_9684
		LDA	#$50
		STA	Objects_cnt2,X

loc_0_9684:				; ...
		LDA	#$60
		BNE	loc_0_96A2

loc_0_9688:				; ...
		LDA	#$1E
		STA	camera_lock_cnt
		INC	Objects_X_speed,X
		JSR	obj_moving_by_speed
		LDA	#6
		JSR	sub_0_994E
		LDA	#7
		JSR	sub_0_994E
		JSR	sub_0_B976
		LDA	Objects_X_speed,X

loc_0_96A2:				; ...
		JSR	obj_unjk_cnt_add_
		LDA	byte_0_994A,Y
		JMP	loc_0_9932
; ---------------------------------------------------------------------------

loc_0_96AB:				; ...
		JSR	create_obj_ravenclaw
; End of function object_raven_large


; =============== S U B	R O U T	I N E =======================================


object_raven:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	sub_0_96BE
		LDA	#3
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	#$14
		STA	Objects_TypeID,X
		RTS
; End of function object_raven


; =============== S U B	R O U T	I N E =======================================


sub_0_96BE:				; ...
		LDA	Objects_X_speed,X
		BNE	loc_0_96F7
		JSR	obj_set_dir_by_Xlow
		DEC	objects_some_anim,X ; some obj X speed
		BNE	loc_0_96CF
		INC	Objects_X_speed,X
		RTS
; ---------------------------------------------------------------------------

loc_0_96CF:				; ...
		LDA	Objects_Y_shad,X
		SBC	#$80
		CMP	#$20
		LDA	#$20
		BCC	loc_0_96E5
		ADC	#0
		LDY	Objects_TypeID,X
		CPY	#$16
		BNE	loc_0_96E5
		LDA	#$29

loc_0_96E5:				; ...
		STA	Objects_gfx_frame,X
		RTS
; End of function sub_0_96BE


; =============== S U B	R O U T	I N E =======================================


obj_set_dir_by_Xlow:			; ...
		LDA	Objects_Xpos_L,X
		AND	#$80
		STA	Objects_dir,X	; / angle
		JMP	obj_set_flags_by_dir__
; End of function obj_set_dir_by_Xlow


; =============== S U B	R O U T	I N E =======================================


sub_0_96F4:				; ...
		JMP	loc_0_97D8
; ---------------------------------------------------------------------------

loc_0_96F7:				; ...
		LDA	Level_ID
		CMP	#revolution
		BEQ	loc_0_9701
		LDA	#$1E
		STA	camera_lock_cnt

loc_0_9701:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		BNE	sub_0_96F4
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_970E
		JSR	obj_moving_by_speed

loc_0_970E:				; ...
		LDA	#$80
		JSR	obj_unjk_cnt_add_
		JSR	loc_0_992F
		LDY	Objects_TypeID,X
		LDA	#$FE
		CPY	#$17
		BEQ	loc_0_9729
		CPY	#$5D
		BEQ	loc_0_9729
		CPY	#$5E
		BEQ	loc_0_9729
		LDA	#$FC

loc_0_9729:				; ...
		JSR	object_inc_to_Xspeed ; A is speed
		BNE	loc_0_9733
		LDA	#1
		STA	Objects_X_speed,X

loc_0_9733:				; ...
		LDA	Objects_TypeID,X
		CMP	#$5D
		BEQ	loc_0_9754
		CMP	#$5E
		BEQ	loc_0_9754
		LDA	Objects_Z_speed,X
		BMI	loc_0_9754
		CMP	#3
		BCC	loc_0_9754
		LDA	Objects_TypeID,X
		CMP	#$17
		BNE	loc_0_9754
		LDA	global_var_cnt?
		AND	#8
		BNE	loc_0_9777

loc_0_9754:				; ...
		LDA	Objects_Z_floor,X
		CMP	#$70
		BCS	loc_0_9777
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_9767
		LDA	Objects_Y_shad,X
		CMP	#$30
		BCC	loc_0_9777

loc_0_9767:				; ...
		LDA	#$10
		LDY	Level_ID
		CPY	#revolution
		BNE	loc_0_9771
		LDA	#$30

loc_0_9771:				; ...
		JSR	objects_Z_phys?
		JMP	levels_physics_bank5
; ---------------------------------------------------------------------------

loc_0_9777:				; ...
		LDA	#0
		STA	Objects_Z_speed,X
		STA	Objects_Z_spd_sub,X
		LDA	Objects_TypeID,X
		CMP	#$17
		BEQ	loc_0_9796
		CMP	#$5D
		BEQ	loc_0_9796
		CMP	#$5E
		BEQ	loc_0_9796
		TXA
		ADC	RandomValue_1
		AND	#$1F
		BEQ	loc_0_9796

locret_0_9795:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_9796:				; ...
		JSR	set_target_random
		LDY	Objects_TargetID,X
		LDA	Objects_death_timer,Y ;	undamage time
		BMI	locret_0_9795
		LDA	Objects_AnimID,Y ; номер движения для запуска
		CMP	#$2C
		BEQ	locret_0_9795
		LDA	Level_ID
		CMP	#ragnarok_canyon
		BNE	loc_0_97BA
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		BNE	loc_0_97BA
		LDA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$40
		BNE	locret_0_9795

loc_0_97BA:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_97C4
		LDA	Objects_death_timer,Y ;	undamage time
		BNE	locret_0_9795

loc_0_97C4:				; ...
		INC	objects_some_anim,X ; some obj X speed
		JSR	sub_0_E33B
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ASL	A
		AND	#$80
		STA	Objects_dir,X	; / angle
		LDA	#1
		STA	Objects_Z_speed,X

loc_0_97D8:				; ...
		JSR	obj_moving_by_speed
		LDA	Objects_AnimID,X ; номер движения для запуска
		BNE	loc_0_983A
		LDA	Objects_TypeID,X
		CMP	#$5D
		BEQ	loc_0_983A
		CMP	#$5E
		BEQ	loc_0_983A
		LDA	#2
		STA	hit_Z_table_index ; index for Z	collision tbl
		LDY	#1
		LDA	#3
		CLC
		JSR	check_hitting_
		BMI	loc_0_983A
		LDA	Obj_anims_timer,Y ; timer used for gfx frames
		BEQ	loc_0_982C
		LDA	Objects_LinkedObj_ID,Y ; флаг/id присоединённого объекта
		ORA	Objects_Linker_ID,Y ; флаг/id какой объект меня	прицепил
		ORA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		BNE	loc_0_983A
		LDA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$40
		BEQ	loc_0_983A
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$10
		BNE	loc_0_983A
		LDA	Objects_TypeID,X
		EOR	#$17
		BNE	loc_0_983A
		LDA	#$34
		BNE	loc_0_9837
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ORA	#$10
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BNE	loc_0_983A

loc_0_982C:				; ...
		LDY	Objects_TypeID,X
		LDA	#$32
		CPY	#$17
		BEQ	loc_0_9837
		LDA	#$30

loc_0_9837:				; ...
		JSR	write_obj_Anim_ID

loc_0_983A:				; ...
		LDY	Objects_TargetID,X
		LDA	objects_some_anim,X ; some obj X speed
		CMP	#1
		BNE	loc_0_9873
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		BEQ	loc_0_98AF
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		AND	#$1F
		TAY
		DEY
		STY	tmp_var_21
		LDA	global_var_cnt?
		AND	#8
		BEQ	loc_0_9876
		LDA	#$40
		ORA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		STA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		LDA	#$D4
		STA	Obj_anims_timer,Y ; timer used for gfx frames
		JSR	unlink_objects
		LDA	#0
		STA	Objects_Z_speed,Y
		STA	Objects_Z_speed,X
		JMP	loc_0_9906
; ---------------------------------------------------------------------------

loc_0_9873:				; ...
		JMP	loc_0_98F3
; ---------------------------------------------------------------------------

loc_0_9876:				; ...
		LDA	Objects_Z_floor,X
		BNE	loc_0_98AB
		LDA	#$37
		STA	tmp_var_8c
		JSR	loc_0_DC61
		LDA	#$C
		STA	some_sound_flag	; by tables
		LDA	Objects_X_shadow,X
		AND	#$80
		STA	Objects_dir,X	; / angle
		EOR	#$80
		STA	tmp_var_15	;  / Object Counter / various tmp
		JSR	sub_0_E3C0
		LDA	global_var_cnt?
		AND	#8
		BEQ	loc_0_98A4
		LDY	tmp_var_21
		LDA	#0
		STA	Objects_Z_speed,Y
		BEQ	loc_0_9906

loc_0_98A4:				; ...
		LDA	#$FF
		STA	Objects_Z_speed,X
		BNE	loc_0_9906

loc_0_98AB:				; ...
		LDA	#$80
		BNE	loc_0_98E6

loc_0_98AF:				; ...
		LDA	Objects_death_timer,Y ;	undamage time
		BEQ	loc_0_98BA
		LDA	#0
		STA	objects_some_anim,X ; some obj X speed
		RTS
; ---------------------------------------------------------------------------

loc_0_98BA:				; ...
		LDA	Objects_TypeID,X
		CMP	#$5D
		BNE	loc_0_98C5
		LDA	#$70
		BNE	loc_0_98CF

loc_0_98C5:				; ...
		CMP	#$5E
		BNE	loc_0_98CD
		LDA	#$60
		BNE	loc_0_98CF

loc_0_98CD:				; ...
		LDA	#$50

loc_0_98CF:				; ...
		JSR	object_compare_Z
		BNE	loc_0_98E4
		STA	Objects_Z_spd_sub,X
		LDA	#$FC
		STA	Objects_Z_speed,X
		INC	objects_some_anim,X ; some obj X speed
		LDA	#$40
		STA	Objects_X_speed,X

loc_0_98E4:				; ...
		LDA	#$E0

loc_0_98E6:				; ...
		JSR	objects_Z_phys?
		JSR	levels_physics_bank5
		LDA	Objects_AnimID,X ; номер движения для запуска
		BNE	loc_0_9923
		BEQ	loc_0_9928

loc_0_98F3:				; ...
		LDY	Objects_TargetID,X
		JSR	loc_0_E332
		LDA	Objects_dir,X	; / angle
		ADC	#$40
		LSR	A
		EOR	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$40
		BEQ	loc_0_990E

loc_0_9906:				; ...
		LDA	#0
		STA	objects_some_anim,X ; some obj X speed
		STA	Objects_AnimID,X ; номер движения для запуска

loc_0_990E:				; ...
		LDA	Objects_Z_speed,X
		BEQ	loc_0_9918
		LDA	#$20
		JSR	objects_Z_phys?

loc_0_9918:				; ...
		JSR	levels_physics_bank5
		JSR	obj_inc_Xspeed_by_4
		LDA	Objects_AnimID,X ; номер движения для запуска
		BEQ	loc_0_992C

loc_0_9923:				; ...
		LDA	#3		; every	fourth frame
		JMP	start_read_anim	; with ptr inc by AND with frame cnt
; ---------------------------------------------------------------------------

loc_0_9928:				; ...
		LDA	#$1C
		BNE	loc_0_9932

loc_0_992C:				; ...
		JSR	obj_counter_inc_by_speed

loc_0_992F:				; ...
		LDA	byte_0_9942,Y

loc_0_9932:				; ...
		STA	Objects_gfx_frame,X
		RTS
; End of function sub_0_96F4


; =============== S U B	R O U T	I N E =======================================


obj_inc_Xspeed_by_4:			; ...
		LDA	#4
		CLC
		ADC	Objects_X_speed,X
		BMI	locret_0_9941
		STA	Objects_X_speed,X

locret_0_9941:				; ...
		RTS
; End of function obj_inc_Xspeed_by_4

; ---------------------------------------------------------------------------
byte_0_9942:	.BYTE $1C, $1D,	$1E, $1D ; ...
byte_0_9946:	.BYTE $24, $24,	$25, $25 ; ...
byte_0_994A:	.BYTE $26, $27,	$28, $27 ; ...

; =============== S U B	R O U T	I N E =======================================


sub_0_994E:				; ...
		JSR	get_obj_slot_type_by_ID
		BNE	locret_0_9941
		STY	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_TypeID,Y
		SEC
		SBC	#6
		TAY
		LDA	Objects_death_timer,Y ;	undamage time
		BNE	locret_0_99CF
		STY	tmp_var_21
		LDY	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_Y_shad,X
		CMP	Objects_Y_shad,Y
		BCS	locret_0_99CF
		LDA	Objects_dir,X	; / angle
		BEQ	loc_0_9982
		LDA	Objects_Xpos_L,X
		SBC	Objects_TargetID,Y
		BCC	locret_0_99CF
		CMP	#$10
		LDA	#$E
		BCC	loc_0_9990
		BCS	locret_0_99CF

loc_0_9982:				; ...
		LDA	Objects_Xpos_L,X
		SBC	Objects_TargetID,Y
		BCS	locret_0_99CF
		CMP	#$F0
		LDA	#$F1
		BCC	locret_0_99CF

loc_0_9990:				; ...
		ADC	Objects_TargetID,Y
		STA	Objects_Xpos_L,X
		LDA	Objects_TargetID,Y
		SBC	Objects_Xpos_L,X
		ADC	#$10
		CMP	#$20
		BCS	locret_0_99CF
		LDA	#$10
		STA	Objects_X_speed,X
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		ADC	#8
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BCC	locret_0_99CF
		LDA	Objects_Zpos_L,X
		SBC	#$28
		STA	Objects_Zpos_L,Y
		LDA	Objects_Zpos_H,X
		SBC	#0
		STA	Objects_Zpos_H,Y
		LDA	#$20
		STA	some_sound_flag	; by tables
		LDA	#$82
		JSR	gen_damage_effects_
		LDA	#$40
		STA	Objects_X_speed,X

locret_0_99CF:				; ...
		RTS
; End of function sub_0_994E

; ---------------------------------------------------------------------------

loc_0_99D0:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_invader:				; ...
		LDA	#$1E
		STA	camera_lock_cnt
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		ORA	Objects_death_timer,X ;	undamage time
		BNE	loc_0_99E9
		LDX	#snd_channel1
		LDA	#$72
		JSR	play_sound	; A is sound id, X - jmp_off (ch ID)
		JMP	loc_0_9A85
; ---------------------------------------------------------------------------

loc_0_99E9:				; ...
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BEQ	loc_0_99F5
		DEC	Objects_various_flags,X	; для пушек ID прицепленного объекта
		DEC	Objects_death_timer,X ;	undamage time
		RTS
; ---------------------------------------------------------------------------

loc_0_99F5:				; ...
		LDA	Objects_AnimID,X ; номер движения для запуска
		CMP	#$28
		BCC	loc_0_9A40
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_9A40
		LDA	#1
		JSR	check_collision_Z_index	; A= Z_index
		BMI	loc_0_9A40
		TYA
		STA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		LDA	Objects_Y_shad,X
		STA	objects_some_anim,X ; some obj X speed
		LDA	#0
		STA	Objects_death_timer,X ;	undamage time
		STA	Obj_anims_timer,X ; timer used for gfx frames
		LDA	#$FF
		STA	Objects_Zpos_H,X
		LDA	#$FA
		STA	Objects_Zpos_L,X
		LDA	#$FD
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		LDA	#$1D
		STA	Objects_TypeID,X
		LDA	#$3D
		STA	Objects_gfx_frame,X
		LDA	#$75
		LDX	#snd_channel2
		JSR	play_sound	; A is sound id, X - jmp_off (ch ID)
		JSR	sub_0_9B72
		JMP	object_flying_life_bar
; ---------------------------------------------------------------------------

loc_0_9A40:				; ...
		JSR	sub_0_9B68
		INC	Objects_AnimID,X ; номер движения для запуска
		BEQ	loc_0_99D0
		LDA	Objects_death_timer,X ;	undamage time
		BNE	loc_0_9A80
		INC	Objects_death_timer,X ;	undamage time
		INC	Objects_death_timer,X ;	undamage time
		LDA	#2
		STA	Objects_Z_speed,X
		LDA	Objects_cnt3,X
		AND	#$80
		STA	Objects_TargetID,X
		DEC	Objects_TargetID,X
		LDA	#$3B
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	Objects_gfx_frame,X
		CMP	#$39
		BCC	loc_0_9A76
		LDA	#0
		JSR	get_obj_slot_type_by_ID

loc_0_9A76:				; ...
		JSR	create_obj_4_
		TYA
		TAX
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		JMP	copy_objects_XYZ
; ---------------------------------------------------------------------------

loc_0_9A80:				; ...
		LDA	#$F8
		JSR	objects_Z_phys?

loc_0_9A85:				; ...
		LDA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		BNE	object_flying_life_bar
		LDA	Objects_Xpos_H,X
		STA	Objects_cnt3,X
		DEC	Objects_Anim_Ptr,X ; оффсет чтения анимации
		JSR	set_target_random
		STA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		JSR	sub_0_9B72
; End of function object_invader


; =============== S U B	R O U T	I N E =======================================


object_flying_life_bar:			; ...
		LDA	Objects_cnt3,X
		CMP	Objects_TargetID,X
		BEQ	loc_0_9AB0
		LDA	#$FE
		BCS	loc_0_9AAA
		LDA	#1

loc_0_9AAA:				; ...
		ADC	Objects_cnt3,X
		STA	Objects_cnt3,X

loc_0_9AB0:				; ...
		JSR	object_X_by_camera
		LDA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		CMP	#$3B
		BEQ	loc_0_9B03
		CLC
		ADC	objects_some_anim,X ; some obj X speed
		CMP	#$C
		BCS	loc_0_9AD0
		CMP	#4
		BCC	loc_0_9B17
		LDA	Objects_TypeID,X
		CMP	#$1D
		BNE	loc_0_9AD5
		LDA	#$C
		CLC

loc_0_9AD0:				; ...
		STA	objects_some_anim,X ; some obj X speed
		BCS	loc_0_9B34

loc_0_9AD5:				; ...
		LDY	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		JSR	sub_0_9B72
		CMP	Objects_cnt3,X
		BNE	loc_0_9B34
		LDA	Objects_TypeID,X
		CMP	#$1D
		BNE	loc_0_9B05
		LDX	#snd_channel2
		LDA	#$79
		JSR	play_sound	; A is sound id, X - jmp_off (ch ID)
		LDY	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		LDA	Objects_Life,Y
		CLC
		ADC	#8
		CMP	#$30
		BCS	loc_0_9AFE
		STA	Objects_Life,Y

loc_0_9AFE:				; ...
		INC	update_ui_flag
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

loc_0_9B03:				; ...
		BEQ	loc_0_9B64	; jump

loc_0_9B05:				; ...
		LDA	tmp_var_15	;  / Object Counter / various tmp
		CMP	#7
		BCS	loc_0_9B12
		DEC	objects_some_anim,X ; some obj X speed
		BEQ	loc_0_9B17
		BNE	loc_0_9B34

loc_0_9B12:				; ...
		LDA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		BMI	loc_0_9B1A

loc_0_9B17:				; ...
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

loc_0_9B1A:				; ...
		LDX	#snd_channel2
		LDA	#$77
		JSR	play_sound	; A is sound id, X - jmp_off (ch ID)
		LDY	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		LDA	Objects_Life,Y
		SEC
		SBC	#8
		STA	Objects_Life,Y
		INC	update_ui_flag
		LDA	#2
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации

loc_0_9B34:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		CLC
		ADC	Camera_Y_pos_l	;  / level_position - on v levels
		STA	Objects_Ypos_L,X
		LDA	Camera_Y_pos_H
		ADC	#0
		STA	Objects_Ypos_H,X
		LDA	Objects_gfx_frame,X
		CMP	#$3B
		BCS	sub_0_9B68
		LDA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		CMP	#$80
		LDA	#$40
		BCS	loc_0_9B56
		LDA	#$80

loc_0_9B56:				; ...
		JSR	obj_unjk_cnt_add_
		LDA	byte_0_9946,Y
		LDY	Objects_Anim_Ptr,X ; оффсет чтения анимации
		BMI	loc_0_9B64
		CLC
		ADC	#$15

loc_0_9B64:				; ...
		STA	Objects_gfx_frame,X
		RTS
; End of function object_flying_life_bar


; =============== S U B	R O U T	I N E =======================================


sub_0_9B68:				; ...
		LDA	FrameCounter
		AND	#3
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		RTS
; End of function sub_0_9B68

; ---------------------------------------------------------------------------
byte_0_9B70:	.BYTE $12		; ...
		.BYTE $C2

; =============== S U B	R O U T	I N E =======================================


sub_0_9B72:				; ...
		LDA	Objects_Life,Y
		AND	#$38
		STA	tmp_var_15	;  / Object Counter / various tmp
		CLC
		ADC	byte_0_9B70,Y
		LDY	Objects_TypeID,X
		CPY	#$15
		BEQ	loc_0_9B86
		ADC	#8

loc_0_9B86:				; ...
		STA	Objects_TargetID,X
		RTS
; End of function sub_0_9B72

; ---------------------------------------------------------------------------
obj_code_ptrs:	.WORD no_obj_code	; ...
		.WORD object_player	; 1
		.WORD object_player	; 2
		.WORD warp_part?	; 3
		.WORD object_delete?	; 4
		.WORD object_tall_walker_head ;	5 голова ходули
		.WORD object_rope	; 6 верёвка
		.WORD object_rope	; 7
		.WORD obj_wall_destroy	; 8
		.WORD obj_tongue	; 9
		.WORD object_muhi	; A Мухи
		.WORD object_Psyko_Pig	; B
		.WORD object_dmg_hit	; C удар
		.WORD object_level1_boss_noga ;	D  нога	босса первого уровня
		.WORD object_level1_boss_turrets ; E   турели босса первого левела (2штуки создаются)
		.WORD object_level1_boss ; F
		.WORD object_level1_boss_bullet	; 10	пули от	пушек первого босса
		.WORD object_tall_walker ; 11 ходуля
		.WORD object_tall_walker ; 12
		.WORD object_raven	; 13
		.WORD object_dead_raven	; 14
		.WORD object_invader	; 15  ворующие жизни
		.WORD object_raven_large ; 16
		.WORD object_dragon	; 17
		.WORD object_bike	; 18  в	тунеле байк, на	5-ом доска, в 7	самолет
		.WORD object_set_palette ; 19
		.WORD object_infernorace_animation ; 1a
		.WORD object_tall_walker_head ;	1b
		.WORD object_hodulya_palka ; 1c
		.WORD object_flying_life_bar ; 1d  летящий кубик жизней
		.WORD object_fireball	; 1e  выстрелы драконов	с 1-ого	левела
		.WORD create_Psyko_Pig	; 1f
		.WORD object_psyko_Pig_ambush ;	20    бичи с первого левела под	землей
		.WORD object_turbo_tunnel_falling_obstacle ; 21
		.WORD object_WARP	; 22  warp/hodulya poyavlenie
		.WORD object_turbo_tunnel_obstacle ; 23
		.WORD object_turbo_tunnel_obstacle ; 24
		.WORD object_turbo_tunnel_obstacle ; 25
		.WORD object_checkpoint_part1 ;	26   перегордка-чекпоинт турбо-тунеля (или водного) (или инферно)
		.WORD object_checkpoint_part2 ;	27
		.WORD object_turbo_tunnel_rat_rocket ; 28  крыса на ракете
		.WORD object_turbo_tunnel_falling_obstacle ; 29	 перегордка которую бросает крыса на ракете
		.WORD object_turbo_tunnel_obstacle_up ;	2a
		.WORD object_turbo_tunnel_fly_obstacle ; 2b  летающие хрени в турбо тунелле
		.WORD object_turbo_tunnel_balls	; 2c  шары при падении
		.WORD object_saturn_toadtrap ; 2d   кусачки со 2-ого левела
		.WORD object_electro_trap ; 2e	2-ой левел электричество
		.WORD object_raven_claw	; 2f  ножи от ворон
		.WORD objects_power_ups	; 30  всякие поверапы и	очки
		.WORD object_retro_blaster ; 31
		.WORD object_retro_blaster_shoot ; 32  выстрелы	пушек 2-ого левела
		.WORD object_snowman	; 33
		.WORD object_platform_last_level ; 34
		.WORD object_level4_platform_mov_down ;	35  и на последнем
		.WORD object_prujina	; 36
		.WORD object_rotating_spike ; 37  вращающийся шип ласт левел
		.WORD object_ice_cube	; 38
		.WORD object_sosulka	; 39
		.WORD object_snowball	; 3a  ili electrozaryad
		.WORD object_snow	; 3b  кучка снега
		.WORD object_leve4_wall	; 3c  перегородка которую нужно	разбивать
		.WORD object_large_snowball ; 3d
		.WORD object_level4_moving_platform ; 3e
		.WORD object_level4_wall_moving	; 3f  перегородка двигающаяся вверхвниз
		.WORD object_level4_spike_moving ; 40
		.WORD object_levels_checkpoint ; 41
		.WORD object_restore_point ; 42	 всегда	на уровне (levels 4,6,8)
		.WORD object_level4_sosulka_kamennaya ;	43
		.WORD object_multiple_del? ; 44
		.WORD object_level4_spike_moving ; 45
		.WORD object_dead_robo_manus_ili_begushaya_krisa ; 46	или королева
		.WORD object_giblet	; 47  крысы турбо тунеля
		.WORD object_inferno_race_create ; 48
		.WORD object_turbo_tunnel_warning_sprite ; 49
		.WORD object_elevator_platform ; 4a
		.WORD object_rat_race_palette_fade ; 4b
		.WORD object_snake	; 4c
		.WORD object_snake_animation ; 4d   SNAKE PIT LEVEL
		.WORD object_snake_hide_head ; 4e
		.WORD object_snake_pit_hole? ; 4f
		.WORD object_sentry_drone ; 50
		.WORD object_slizen	; 51  8-ой левел мозговые слизни :)
		.WORD object_gas_turret	; 52
		.WORD object_gas	; 53
		.WORD object_ventilyator ; 54
		.WORD object_ventilyator ; 55
		.WORD object_veter	; 56
		.WORD object_ball	; 57  level-8
		.WORD obj_ratbomb_sub?	; 58
		.WORD object_ball_laucnh_hole ;	59  level-8
		.WORD object_ratrace_bomb ; 5a
		.WORD object_screen_light ; 5b	мигание	экрана при ударе по 1-ому боссу
		.WORD object_hordhead	; 5c  быки ласт	левел
		.WORD object_last_lvl_flying ; 5d  летающий и дующий
		.WORD object_last_lvl_flying ; 5e
		.WORD object_palka_v_stene ; 5f
		.WORD object_last_lvl_head ; 60
		.WORD object_veter2?	; 61
		.WORD object_swellcheeks ; 62  ласт левел летающий
		.WORD object_level1_boss_dmg_spr ; 63  спрайт разбитого	стекла первого босса
		.WORD object_level1_boss_ball ;	64  ; шар первого босса	в руке
		.WORD object_level1_boss_dead ;	65  обломок первого босса - 4шт.
		.WORD object_rocket_rat2_inferno ; 66
		.WORD object_inferno_race_electricity ;	67
		.WORD object_mines_rokets_creator ; creates objects: rokets, fires, mines
		.WORD object_level7_fires ; 69
		.WORD object_level7_rockets ; 6a
		.WORD object_shesterenka ; 6b  terra tubes
		.WORD object_water_splash ; 6c	удар сёрфа об воду
		.WORD object_robot	; 6d terra tubes
		.WORD object_electrofish ; 6e
		.WORD object_hammerfish	; 6f
		.WORD object_shark	; 70
		.WORD object_shark	; 71
		.WORD object_utka	; 72
		.WORD object_angelica_ili_pimpl	; 73
		.WORD object_verevka_s_propellerom ; 74
		.WORD object_terra_tubes_xz ; 75
		.WORD object_vodovorot	; 76
		.WORD object_brevno	; 77
		.WORD object_surfcity_watermine	; 78
		.WORD object_big_blag	; 79
		.WORD object_electroball ; 7a
		.WORD object_electroball_phase2	; 7b
		.WORD object_general_slaughter ; 7c
		.WORD object_robu_manus	; 7d
		.WORD object_dark_queen	; 7e   poyavlaetsa 2 raza
		.WORD object_last_lvl_end ; 7f	взрыв перед появлением королевы
objects_unk_dat1:.BYTE	$11, $11, $11, $11, $11, $11, $11, $11,	$11, $11, $11, $11, $11, $11, $11, $11 ; ...
		.BYTE  $11, $11, $11, $11, $11,	$11, $11, $11,	 8, $11, $11, $11, $11,	$11, $11, $11
		.BYTE  $11, $11, $11, $11, $11,	$11, $11, $11, $11, $11, $11, $11, $11,	$11, $11, $11
		.BYTE  $11, $11, $11, $16, $11,	$11, $11,   3,	 6, $11, $11, $11,   8,	  6, $11,   8
		.BYTE	 4,   0,   0,	0,   0,	  4,  $C, $11,	 0,   0,   0,	0,   0,	  0,   0,   0
		.BYTE	 8,   4,  $C,	4,  $C,	 $C,  $C,   4,	 2,   0,  $C,	0,  $C,	 $C,  $C,   4
		.BYTE	 8,  $C,   4,	0, $11,	$11, $20,   0,	 0,   0,   0,	0,   0,	 $E, $11,   8
		.BYTE  $11,  $C, $10, $10,   4,	  4,   4, $11, $11, $18, $18, $16, $14,	$12, $11
objects_unk_dat2:.BYTE	  1,   4,   4,	 5,   5,   5,	5,   5,	  5,   5,   5,	 7,   5,   5,	5,   5 ; ...
		.BYTE	 5,   5,   5,	4,   5,	  5,   4,   8,	 5,   5,  $F,	4,   4,	  4,   4,   4 ;	Z?
		.BYTE	 4,   8,   0,	0,   0,	  0,   5,   0,	$F,   4,   0,	2,   4,	 $F,   4,   3
		.BYTE	 4,   4,   4,	4,   3,	  3,   4,   4,	 4,   4,   5,	4,   4,	  3,   4,   4
		.BYTE	 4,   4,   4,	4,   4,	  4,   7,   4,	 4,   4,   4,	4,   4,	  4,   4,   4
		.BYTE	 4,   4,   4,	4,   4,	  4,   4,   8,	 4,   0,   4,	0,   4,	  4,   4,   4
		.BYTE	 4,   4,   2,	4,   5,	 $F,   1,   4,	 4,   4,   6,	4,   2,	  4,   4,   4
		.BYTE	 4,   4,   4,	3,   4,	  4,   4,   4,	 4,   6,   4,	6,   4,	  4
obj_hit_flags_cfg:.BYTE	  $C, $53, $53,	  0,   0, $44,	 0,   0,   0,	0,   8,	$53,   0,   0,	 0,   0	; ...
		.BYTE	 0, $51, $51, $51, $51,	$51, $51, $51,	 0,   0,   0, $44, $64,	  0,   0,   0
		.BYTE	 0,   0,   0,	0,   0,	  0,   0,   0,	 0,   0,   0,	0,   0,	$51,   0,   0
		.BYTE	 0, $51,   0, $11,   0,	  0,   0,   0, $53,   0,   0,	4, $40,	  0,   0, $40
		.BYTE	 0,   0,   0,	0,   0,	$40, $51, $51,	 0,   0,   0,	0,   0,	  0,   0,   0
		.BYTE  $51, $40, $40, $40, $40,	$40,   0, $40,	 0,   0, $11,	0, $51,	  0,   0,   0
		.BYTE	 0,   0, $51,	0, $44,	  0, $51,   0,	 0,   0,   0,	0,   0,	$51, $51, $51
		.BYTE  $51, $51, $51,	0,   0,	  0,   0,   0,	 0, $53,   0, $53, $53,	$51, $51
level_camlock_cnt:.BYTE	 $1E,	0, $1E,	  0,   0, $1E,	 0,   0,   0,	0,   0,	$1E ; ...

; =============== S U B	R O U T	I N E =======================================

; lock obj to camera

object_vs_camera_check:			; ...
		LDA	Objects_Xpos_L,X
		SEC
		SBC	Camera_X_pos_l	;  / level_position - on h levels
		TAY
		CPY	#$1A
		BCS	loc_0_9E26
		LDX	Level_ID
		LDA	level_camlock_cnt - 1,X
		STA	camera_lock_cnt
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_0_9E26:				; ...
		LDA	#$16
		CPY	#$16
		BCC	loc_0_9E32
		CPY	#$EF
		BCC	locret_0_9E4D
		LDA	#$ED

loc_0_9E32:				; ...
		JSR	object_X_by_camera_
		JSR	speed_limit
		LDA	#1
		CPX	#2
		BCS	loc_0_9E4A
		LDA	#0		; for players only
		STA	player1_updown_slide_cnt,X
		LDA	Objects_dir,X	; / angle
		AND	#$78
		BNE	locret_0_9E4D

loc_0_9E4A:				; ...
		STA	Objects_X_speed,X

locret_0_9E4D:				; ...
		RTS
; End of function object_vs_camera_check


; =============== S U B	R O U T	I N E =======================================


sub_0_9E4E:				; ...
		LDA	#$FE
		CLC
		JSR	objects_add_Z?	; A is Z_speed
		LDA	#$FE
		JSR	object_inc_to_Xspeed ; A is speed
; End of function sub_0_9E4E


; =============== S U B	R O U T	I N E =======================================


sub_0_9E59:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	locret_0_9EAE
		CMP	#$31
		BCC	loc_0_9E74
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		BPL	loc_0_9E74
		JSR	damage_linked_object
		LDA	#4
		STA	Objects_Z_speed,Y
		LDA	#$A0
		STA	Objects_X_speed,Y

loc_0_9E74:				; ...
		DEC	Obj_anims_timer,X ; timer used for gfx frames
		BNE	locret_0_9EAE
		CPX	#2
		BCC	loc_0_9E83
		JSR	set_target_random
		JMP	loc_0_9E8B
; ---------------------------------------------------------------------------

loc_0_9E83:				; ...
		LDA	#0
		STA	player1_unused?,X
		STA	player1_razdvalen_flag?,X ; frame 56

loc_0_9E8B:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ASL	A
		AND	#$80
		STA	Objects_dir,X	; / angle
		LDA	Objects_death_timer,X ;	undamage time
		BNE	upd_state_

some_state_upd:				; ...
		LDA	#0
		STA	Obj_anims_timer,X ; timer used for gfx frames
		LDA	Objects_Life,X
		ORA	#7

write_life_and_state:			; ...
		STA	Objects_Life,X

upd_state_:				; ...
		LDA	#$BF

upd_state:				; ...
		AND	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		STA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage

locret_0_9EAE:				; ...
		RTS
; End of function sub_0_9E59

; ---------------------------------------------------------------------------
mov_dir_table:	.BYTE $FF, 0, $80, $40,	$C0, $E4, $9C, $C0, $40, $1C, $64, $40,	0, 0, $80, 0 ; ...

; =============== S U B	R O U T	I N E =======================================


speed_limit:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$EF		; remove running
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	#$80
		CMP	Objects_X_speed,X
		BCS	locret_0_9ED1
		STA	Objects_X_speed,X

locret_0_9ED1:				; ...
		RTS
; End of function speed_limit


; =============== S U B	R O U T	I N E =======================================


level1_on_rope:				; ...
		LDA	#$FD
		STA	Objects_Z_speed,X
		LDA	#$80
		STA	Objects_Z_spd_sub,X
		LDA	#0
		JSR	objects_Z_phys?
		JSR	levels_physics_bank5
		LDA	#$24		; frame	ID while on a rope
		STA	player1_obj_wanted_frame,X
		LDA	tmp_var_c8
		CLC
		ADC	#$6E
		ADC	objects_some_anim,X ; some obj X speed
		ASL	A
		EOR	Objects_dir,X	; / angle
		BPL	loc_0_9F07
		LDA	Objects_X_speed,X
		BNE	loc_0_9F04
		LDA	Objects_dir,X	; / angle
		EOR	#$80
		STA	Objects_dir,X	; / angle

loc_0_9F04:				; ...
		JMP	loc_0_A89B
; ---------------------------------------------------------------------------

loc_0_9F07:				; ...
		LDY	#$80
		LDA	#$C
		JMP	loc_0_A866
; End of function level1_on_rope

; ---------------------------------------------------------------------------
Level_CanMove_Dir:.BYTE	$F, $F,	3, $F, 3, 3, $F, 3, 3, 3, 3, 3,	$F, 3 ;	...
					; возможность ходьбы в направлении (udlr)
Level_CarryObjSpeed:.BYTE $80, $80, $C0, $80, $80, $80,	$80, $80, $90, $80, $80, $80, $80, $80 ; ...
					; скорость при взятом объекте
; ---------------------------------------------------------------------------

loc_0_9F2A:				; ...
		JMP	level_completed

; =============== S U B	R O U T	I N E =======================================


ragnarok_canyon_end:			; ...
		DEC	player1_endLvL_timer,X
		BEQ	loc_0_9F2A
		LDA	player1_endLvL_timer,X
		CMP	#$7F
		BNE	loc_0_9F43
		STA	Objects_Z_spd_sub,X
		LDA	#5
		STA	Objects_Z_speed,X
		LDA	#$70

loc_0_9F43:				; ...
		CMP	#$57
		BCS	loc_0_9F51
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ORA	#$20
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	#$70

loc_0_9F51:				; ...
		CMP	#$DF
		LDA	#0
		BCS	loc_0_9F63
		LDA	Camera_X_pos_l	;  / level_position - on h levels
		CMP	#$7E
		BCC	loc_0_9F61
		LDA	#$1E
		STA	camera_lock_cnt

loc_0_9F61:				; ...
		LDA	#1

loc_0_9F63:				; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		AND	#button_start|button_select
		ORA	tmp_var_15	;  / Object Counter / various tmp
		STA	InputHold_P1,X	; данные первого джойстика на зажатие
		LDA	InputTap_P1,X	; данные первого джойстика на нажатие
		AND	#button_start|button_select
		STA	InputTap_P1,X	; данные первого джойстика на нажатие
		JMP	loc_0_A733
; End of function ragnarok_canyon_end

; ---------------------------------------------------------------------------
		LDA	#1		; unused?
		JMP	start_read_anim	; with ptr inc by AND with frame cnt

; =============== S U B	R O U T	I N E =======================================


player_taken_by_enemy:			; ...
		JSR	sub_0_9F8E
		LDA	Level_ID
		CMP	#wookie_hole
		BNE	taken_by_dragon_or_pl

taken_by_flower:
		LDA	#$35
		JMP	write_pl_wanted_frame
; ---------------------------------------------------------------------------

taken_by_dragon_or_pl:			; ...
		LDA	#$2F
		JMP	write_pl_wanted_frame
; End of function player_taken_by_enemy


; =============== S U B	R O U T	I N E =======================================


sub_0_9F8E:				; ...
		LDA	#$FE
		JSR	object_inc_to_Xspeed ; A is speed
		JSR	obj_moving_by_speed
		JMP	loc_0_B06B
; End of function sub_0_9F8E


; =============== S U B	R O U T	I N E =======================================


level1_on_rope_:			; ...
		JMP	level1_on_rope
; ---------------------------------------------------------------------------
		JMP	loc_0_A119	; unused?
; ---------------------------------------------------------------------------

loc_0_9F9F:				; ...
		JMP	ragnarok_canyon_end
; ---------------------------------------------------------------------------

loc_0_9FA2:				; ...
		LDA	Level_ID
		CMP	#ragnarok_canyon
		BEQ	loc_0_9F9F
		LDA	#$77
		STA	Objects_death_timer,X ;	undamage time
		TXA
		EOR	#1
		TAY
		LDA	Objects_TypeID,Y
		BEQ	loc_0_9FBE
		LDA	player1_endLvL_timer,Y
		BNE	loc_0_9FBE
		JMP	copy_objects_XYZ
; ---------------------------------------------------------------------------

loc_0_9FBE:				; ...
		LDA	restart_point_id
		CMP	#3
		BEQ	loc_0_9FCF
		DEC	player1_endLvL_timer,X
		BNE	locret_0_9FCE
		INC	restart_point_id
		JMP	restart_for_karnath
; ---------------------------------------------------------------------------

locret_0_9FCE:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_9FCF:				; ...
		LDA	timer_end_music
		BNE	locret_0_9FCE
		LDA	#$82
		STA	timer_end_music
		RTS
; ---------------------------------------------------------------------------

object_player:				; ...
		LDA	player1_endLvL_timer,X
		BNE	loc_0_9FA2
		LDA	cnt_unk_pl1,X
		BEQ	loc_0_9FE3
		DEC	cnt_unk_pl1,X

loc_0_9FE3:				; ...
		LDY	Level_ID
		LDA	levels_flag_unk	- 1,Y
		BNE	loc_0_9FED
		JMP	loc_0_A092
; ---------------------------------------------------------------------------

loc_0_9FED:				; ...
		LDA	Objects_Ypos_L,X
		SEC
		SBC	Objects_Zpos_L,X
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_Ypos_H,X
		SBC	Objects_Zpos_H,X
		STA	tmp_var_16
		LDA	tmp_var_15	;  / Object Counter / various tmp
		SEC
		SBC	Camera_Y_pos_l	;  / level_position - on v levels
		LDA	tmp_var_16
		SBC	Camera_Y_pos_H
		BEQ	loc_0_A00D
		BMI	loc_0_A03A
		BPL	loc_0_A067

loc_0_A00D:				; ...
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$10
		BEQ	loc_0_A02D
		JSR	get_object_Y_on_screen
		CMP	#$F8
		JMP	loc_0_A036
; End of function level1_on_rope_

; ---------------------------------------------------------------------------
levels_flag_unk:.BYTE 0, 0, 0, $FC, 4, 0, 4, $FC, 4, 0,	$FC, 0 ; ...

; =============== S U B	R O U T	I N E =======================================


play_sound_89:				; ...
		LDA	#$89
		JMP	play_sound_ch1_and_ch2
; ---------------------------------------------------------------------------

loc_0_A02D:				; ...
		JSR	get_object_Y_on_screen
		CMP	#$C
		BCC	loc_0_A03A
		CMP	#$E8

loc_0_A036:				; ...
		BCC	loc_0_A092
		BCS	loc_0_A067

loc_0_A03A:				; ...
		LDA	levels_flag_unk	- 1,Y
		BPL	loc_0_A05B
		AND	InputHold_P1,X	; данные первого джойстика на зажатие
		STA	InputHold_P1,X	; данные первого джойстика на зажатие
		LDA	InputTap_P1,X	; данные первого джойстика на нажатие
		AND	#button_B|button_A
		STA	InputTap_P1,X	; данные первого джойстика на нажатие
		JSR	speed_limit
		LDA	#$FE
		STA	Objects_Z_speed,X
		LDA	#0
		STA	players_obj_unk1,X
		STA	Objects_X_speed,X
		BEQ	loc_0_A092	; jump

loc_0_A05B:				; ...
		LDA	#4
		CMP	players_obj_unk16,X
		BCC	loc_0_A092
		STA	players_obj_unk16,X
		BCS	loc_0_A092

loc_0_A067:				; ...
		LDA	player1_water_flag,X ; $80 - in	water (terra tubes)
		BEQ	loc_0_A078
		LDA	Objects_death_timer,X ;	undamage time
		BMI	loc_0_A078
		LDA	#1
		STA	Objects_Z_speed,X
		BNE	loc_0_A092

loc_0_A078:				; ...
		LDA	Objects_death_timer,X ;	undamage time
		ORA	timer_end_music
		BNE	loc_0_A092
		JSR	loc_0_8F1B
		LDA	#$20
		STA	Obj_anims_timer,X ; timer used for gfx frames
		CMP	players_obj_unk16,X
		BCC	loc_0_A08F
		STA	players_obj_unk16,X

loc_0_A08F:				; ...
		JSR	play_sound_89

loc_0_A092:				; ...
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		BEQ	loc_0_A09A
		JMP	player_taken_by_enemy
; ---------------------------------------------------------------------------

loc_0_A09A:				; ...
		LDA	#$FE
		LDY	player1_water_flag,X ; $80 - in	water (terra tubes)
		BMI	loc_0_A0B5
		LDA	#$FC		; speed	reduce value
		LDY	Level_ID
		CPY	#arctic_caverns
		BNE	loc_0_A0B5
		LDY	player1_unused?,X
		BNE	loc_0_A0B3
		LDY	Obj_anims_timer,X ; timer used for gfx frames
		BNE	loc_0_A0B5

loc_0_A0B3:				; ...
		LDA	#$FF		; speed	reduce value

loc_0_A0B5:				; ...
		JSR	object_inc_to_Xspeed ; A is speed
		LDA	tmp_var_c8	; ??
		BEQ	loc_0_A0BF
		JMP	level1_on_rope_
; ---------------------------------------------------------------------------

loc_0_A0BF:				; ...
		LDA	Level_ID
		CMP	#TurboTunnel
		BNE	loc_0_A119
		LDA	players_cnt_unk,X
		BNE	loc_0_A119
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BPL	loc_0_A119
		LDA	timer_end_music
		BNE	loc_0_A119
		LDA	Objects_Zpos_H,X
		BMI	loc_0_A0E0
		CMP	#1
		BEQ	loc_0_A119
		LDA	Objects_Zpos_L,X
		BMI	loc_0_A119

loc_0_A0E0:				; ...
		INC	players_cnt_unk,X
		LDA	#2
		STA	tmp_var_15	;  / Object Counter / various tmp

loc_0_A0E6:				; ...
		JSR	get_free_obj_slot_IDX
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	copy_objects_XYZ
		LDA	#$2C
		STA	Objects_TypeID,X
		LDA	#$59
		STA	Objects_gfx_frame,X
		LDA	#$30
		ORA	tmp_var_15	;  / Object Counter / various tmp
		STA	Objects_cnt2,X
		LDY	tmp_var_15	;  / Object Counter / various tmp
		LDA	byte_0_A18E,Y
		STA	Objects_Z_speed,X
		LDA	byte_0_A191,Y
		STA	Objects_dir,X	; / angle
		LDA	byte_0_A194,Y
		STA	Objects_X_speed,X
		DEC	tmp_var_15	;  / Object Counter / various tmp
		BPL	loc_0_A0E6
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_0_A119:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		BEQ	loc_0_A121
		DEC	objects_some_anim,X ; some obj X speed

loc_0_A121:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BNE	loc_0_A129
		JMP	check_dead
; ---------------------------------------------------------------------------

loc_0_A129:				; ...
		JSR	loc_0_A8A1
		LDA	Level_ID
		CMP	#revolution
		BEQ	loc_0_A135
		JSR	object_vs_camera_check ; lock obj to camera

loc_0_A135:				; ...
		LDA	Level_ID
		CMP	#wookie_hole
		BNE	loc_0_A148
		LDA	Objects_death_timer,X ;	undamage time
		BNE	loc_0_A148
		LDA	#0
		JSR	loc_0_8DCF
		JMP	loc_0_A1A6
; ---------------------------------------------------------------------------

loc_0_A148:				; ...
		LDA	players_obj_unk,X
		BPL	loc_0_A19A
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BPL	loc_0_A158
		JSR	clear_obj_anims_timer
		JMP	loc_0_A15D
; ---------------------------------------------------------------------------

loc_0_A158:				; ...
		LDA	#$E0
		JSR	objects_Z_phys?

loc_0_A15D:				; ...
		LDA	#0
		STA	Objects_Z_floor,X
		LDA	Level_ID
		CMP	#clinger_winger
		BEQ	fall_from_surfboard_frame
		CMP	#SurfCity
		BNE	frame_fall_from_bike

fall_from_surfboard_frame:		; ...
		LDA	Objects_Z_speed,X
		ROL	A
		LDA	#$13
		ADC	#0
		JMP	write_pl_wanted_frame
; ---------------------------------------------------------------------------

frame_fall_from_bike:			; ...
		LDA	Objects_X_speed,X
		BEQ	fall_from_bike_
		LDA	#$3B
		JMP	write_pl_wanted_frame
; ---------------------------------------------------------------------------

fall_from_bike_:			; ...
		LDA	#$41
		JMP	write_pl_wanted_frame
; ---------------------------------------------------------------------------
flags_razdavlen:			; ...
		.BYTE 8, 8, 8, $48
frames_razdavlen:.BYTE $56, $55, $56, $55 ; ...
byte_0_A18E:	.BYTE 5, 5, 4		; ...
byte_0_A191:	.BYTE 0, $80, 0		; ...
byte_0_A194:	.BYTE $40, $40,	0	; ...
; ---------------------------------------------------------------------------

loc_0_A197:				; ...
		JMP	loc_0_A27F
; ---------------------------------------------------------------------------

loc_0_A19A:				; ...
		LDA	#$F0
		LDY	player1_unused?,X
		BNE	loc_0_A1A3
		LDA	#$C8

loc_0_A1A3:				; ...
		JSR	objects_Z_phys?

loc_0_A1A6:				; ...
		JSR	sub_0_E471
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		CMP	#$40
		BCS	loc_0_A197
		LDY	players_slizen_id,X
		BEQ	loc_0_A1ED
		AND	#8
		STA	Objects_X_speed,X
		LSR	A

frame_when_slizen:
		ADC	#$E
		TAY
		STY	tmp_var_8d
		LDA	InputTap_P1,X	; данные первого джойстика на нажатие
		BEQ	loc_0_A1E8
		LDY	players_slizen_id,X
		LDA	Objects_various_flags,Y	; для пушек ID прицепленного объекта
		SEC
		SBC	#1
		STA	Objects_various_flags,Y	; для пушек ID прицепленного объекта
		BNE	loc_0_A1E8
		STA	players_slizen_id,X
		STA	Objects_cnt2,Y
		LDA	#$D0
		STA	Objects_various_flags,Y	; для пушек ID прицепленного объекта
		LDA	#1
		STA	Obj_anims_timer,X ; timer used for gfx frames
		JSR	sub_0_9E59
		JMP	loc_0_A5AC
; ---------------------------------------------------------------------------

loc_0_A1E8:				; ...
		LDY	tmp_var_8d
		JMP	write_pl_wanted_frameY
; ---------------------------------------------------------------------------

loc_0_A1ED:				; ...
		LDY	players_shock_timer,X
		BNE	loc_0_A200
		LDY	Level_ID
		CPY	#wookie_hole
		BNE	take_dmg_frames
		CMP	#$20
		LDA	#3
		BCS	loc_0_A200
		LDA	#$F

loc_0_A200:				; ...
		LDY	players_shock_timer,X
		BEQ	take_dmg_on_a_rope
		LDA	FrameCounter
		AND	#3
		BNE	loc_0_A213
		LDA	#4
		EOR	Objects_Xpos_L,X
		STA	Objects_Xpos_L,X

loc_0_A213:				; ...
		DEC	players_shock_timer,X
		CPY	#$20
		BCS	player_shocked

shocked_on_lvl2:
		LDY	#$35
		LDA	Level_ID
		CMP	#wookie_hole
		BEQ	write_pl_wanted_frameY_
		LDY	#$13		; get shocked 2	(not on	rope)
		BNE	write_pl_wanted_frameY_

player_shocked:				; ...
		LDA	FrameCounter
		AND	#2
		BEQ	loc_0_A244
		LDY	#$5D		; shoked by electro frame
		LDA	Level_ID
		CMP	#intruder_excluder
		BEQ	write_pl_wanted_frameY_
		CMP	#clinger_winger
		BEQ	write_pl_wanted_frameY_
		CMP	#rat_race
		BEQ	write_pl_wanted_frameY_
		CMP	#terra_tubes
		BEQ	write_pl_wanted_frameY_
		LDY	#$42
		BNE	write_pl_wanted_frameY_

loc_0_A244:				; ...
		TAY
		STA	Objects_gfx_frame,X

write_pl_wanted_frameY_:		; ...
		JMP	write_pl_wanted_frameY
; ---------------------------------------------------------------------------

take_dmg_on_a_rope:			; ...
		JSR	rnd_swap_flags_dir?
		LDY	#$35
		BNE	write_pl_wanted_frameY_	; jump

unused_shocked_on_rope:			; ??
		LDA	FrameCounter
		AND	#4
		EOR	Objects_Xpos_L,X
		STA	Objects_Xpos_L,X
		DEC	players_obj_unk,X
		LDA	FrameCounter
		AND	#2
		BEQ	write_pl_wanted_frameY_
		LDY	#$42		; shocked by electro
		BNE	write_pl_wanted_frameY_	; jump

take_dmg_frames:			; ...
		LDY	#2		; frame	while stunned (eyes closed)
		CMP	#$18
		BCC	write_pl_wanted_frameY_
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ASL	A
		EOR	Objects_dir,X	; / angle
		LDY	#$29		; frame	when get damage
		ROL	A
		BCS	write_pl_wanted_frameY_
		LDY	#$16		; frame	when get damage	from back
		BNE	write_pl_wanted_frameY_	; jump

loc_0_A27F:				; ...
		JSR	drop_and_remove_stick
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		CMP	#$50
		BNE	loc_0_A298
		LDA	#1
		STA	Obj_anims_timer,X ; timer used for gfx frames
		LDA	Objects_death_timer,X ;	undamage time
		BMI	loc_0_A298
		LDA	#$1C
		STA	Objects_death_timer,X ;	undamage time

loc_0_A298:				; ...
		LDY	players_obj_unk14,X
		BEQ	loc_0_A2D0
		LDA	Objects_dir,Y	; / angle
		EOR	#$80
		LSR	A
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		JSR	copy_objects_XYZ
		LDA	Objects_TypeID,Y
		CMP	#$5C
		BNE	loc_0_A2C0
		LDA	#8
		JSR	objects_add_Z?	; A is Z_speed
		LDA	#$F0
		STA	Objects_X_speed,X
		JSR	obj_moving_by_speed
		JSR	obj_moving_by_speed

loc_0_A2C0:				; ...
		LDA	#0
		STA	Objects_Z_floor,X

popal_v_ventilyator:
		LDY	#$5B
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		AND	#2
		BNE	write_pl_wanted_frameY__
		INY
		BNE	write_pl_wanted_frameY__

loc_0_A2D0:				; ...
		CMP	#$90
		BCC	loc_0_A2F1
		LDA	players_gas_slot?,X
		BEQ	loc_0_A2F1
		LDA	Objects_Z_floor,X
		BNE	loc_0_A2E8
		LDA	#$40
		STA	Objects_X_speed,X
		LDA	#2
		STA	Objects_Z_speed,X

loc_0_A2E8:				; ...
		LDA	#0
		STA	Objects_Z_floor,X
		LDY	#$5A		; damaged by gas
		BNE	write_pl_wanted_frameY

loc_0_A2F1:				; ...
		LDA	player1_unused?,X
		BEQ	loc_0_A2FA
		LDY	#$54		; glitched (unused?)
		BNE	write_pl_wanted_frameY

loc_0_A2FA:				; ...
		LDA	player1_razdvalen_flag?,X ; frame 56
		BEQ	loc_0_A331
		LDY	#0
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		CMP	#$A0
		BCS	loc_0_A324
		CMP	#$9F
		BNE	loc_0_A31A
		LDA	#$1C
		LDX	#snd_channel1
		JSR	play_sound	; A is sound id, X - jmp_off (ch ID)
		LDA	#0
		STA	Objects_Z_speed,X
		LDA	#$9F

loc_0_A31A:				; ...
		LSR	A
		LSR	A
		AND	#3
		TAY
		LDA	#$40
		STA	Objects_X_speed,X

loc_0_A324:				; ...
		LDA	flags_razdavlen,Y
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	frames_razdavlen,Y
		TAY

write_pl_wanted_frameY__:		; ...
		JMP	write_pl_wanted_frameY
; ---------------------------------------------------------------------------

loc_0_A331:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		CMP	#$C8
		BCS	loc_0_A343
		LDA	player1_obj_wanted_frame,X
		CMP	#$15
		BEQ	loc_0_A348
		CMP	#$30
		BEQ	loc_0_A348

loc_0_A343:				; ...
		LDA	Objects_Z_floor,X
		BNE	loc_0_A35B

loc_0_A348:				; ...
		JSR	test_Z_speed_and_floor?
		BNE	loc_0_A350
		JSR	loc_0_B057

loc_0_A350:				; ...
		LDY	#$15		; on ground
		LDA	Objects_death_timer,X ;	undamage time
		BNE	write_pl_wanted_frameY
		LDY	#$30		; on ground 2d - levels
		BNE	write_pl_wanted_frameY

loc_0_A35B:				; ...
		LDY	#$13		; fly with dmg
		LDA	Objects_Z_speed,X
		BPL	write_pl_wanted_frameY
		INY			; fly with dmg 2

write_pl_wanted_frameY:			; ...
		TYA
		STA	player1_obj_wanted_frame,X
		JMP	sub_0_9E59
; ---------------------------------------------------------------------------

loc_0_A36A:				; ...
		JMP	players_check_control
; ---------------------------------------------------------------------------

check_dead:				; ...
		LDA	Objects_death_timer,X ;	 for p1/p2? death timer?
		BEQ	loc_0_A36A
		LDA	Objects_death_timer,X ;	undamage time
		DEC	Objects_death_timer,X ;	undamage time
		CMP	#$80
		BEQ	is_dead?
		BCC	loc_0_A36A
		JMP	object_vs_camera_check ; lock obj to camera
; ---------------------------------------------------------------------------

is_dead?:				; ...
		LDA	#0
		STA	rat_slot_id
		STA	player1_razdvalen_flag?,X ; frame 56
		STA	player1_water_flag,X ; should be objects AnimID?
		STA	Obj_anims_timer,X ; timer used for gfx frames
		STA	players_obj_unk16,X
		STA	player1_water_flag,X ; $80 - in	water (terra tubes)
		STA	players_slizen_id,X
		STA	players_shock_timer,X
		STA	players_cnt_unk,X
		STA	players_gas_slot?,X
		STA	players_obj_unk14,X
		DEC	Lives_Player1,X	; кол-во жизней	(сердечек)
		BPL	loc_0_A3AC
		JSR	clear_object_vars ; remove object
		JMP	continue_screen
; ---------------------------------------------------------------------------

loc_0_A3AC:				; ...
		LDA	Level_ID
		CMP	#wookie_hole
		BNE	loc_0_A3DD
		LDA	#$80
		CPX	#1
		ROR	A
		STA	Objects_Xpos_L,X
		LDA	#$10
		SBC	Camera_Y_pos_l	;  / level_position - on v levels
		STA	Objects_Zpos_L,X
		LDA	#$20
		SBC	Camera_Y_pos_H
		STA	Objects_Zpos_H,X
		LDA	#$38
		STA	objects_some_anim,X ; some obj X speed
		BNE	respawn_player	; jump

clinger_winger_respawn:			; ...
		LDA	#$7B
		JSR	get_obj_slot_type_by_ID
		BEQ	respawn_player
		LDA	timer_end_music
		BNE	respawn_player
		JMP	clear_ram
; ---------------------------------------------------------------------------

loc_0_A3DD:				; ...
		LDA	Level_ID
		CMP	#clinger_winger
		BEQ	clinger_winger_respawn
		CMP	#ragnarok_canyon
		BEQ	ragnarok_canyon_restart
		CMP	#SurfCity
		BEQ	races_restart
		CMP	#volkmire_inferno
		BEQ	races_restart
		CMP	#TurboTunnel	; for level 3
		BNE	loc_0_A405

races_restart:				; ...
		LDA	Objects_LinkedObj_ID,X ; x=1,  value $43
		AND	#$40
		BEQ	loc_0_A405
		JMP	restart_on_bike_chk ; surf city/volkmire/turbo tunnel
; ---------------------------------------------------------------------------

intruder_restart:			; ...
		LDA	Camera_Y_pos_l_2
		AND	#$F
		BNE	respawn_player
		BEQ	std_level_restart_

loc_0_A405:				; ...
		CMP	#terra_tubes
		BEQ	std_level_restart_
		CMP	#intruder_excluder
		BEQ	intruder_restart
		CMP	#revolution
		BEQ	std_level_restart_
		CMP	#arctic_caverns
		BEQ	std_level_restart_
		CMP	#rat_race
		BNE	loc_0_A422
		LDA	Camera_Y_pos_H
		CMP	#$34
		BEQ	respawn_player

std_level_restart_:			; ...
		JMP	std_level_restart
; ---------------------------------------------------------------------------

loc_0_A422:				; ...
		CMP	#karnath_lair
		BNE	ragnarok_canyon_restart
		JMP	restart_for_karnath
; ---------------------------------------------------------------------------

ragnarok_canyon_restart:		; ...
		LDA	Objects_Zpos_H,X
		BPL	respawn_player
		LDX	#$15
		LDY	#5		; BANK5:B309
		JSR	jump_from_bank0

respawn_player:				; ...
		LDA	#$2F
		JSR	write_life_and_state
		LDA	#0
		STA	Objects_Z_speed,X
		STA	Objects_Z_spd_sub,X
		INC	update_ui_flag

players_check_control:			; ...
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		AND	#button_B
		BEQ	loc_0_A475
		LDA	Level_ID
		CMP	#clinger_winger
		BNE	loc_0_A45E
		LDA	Objects_Xpos_H,X
		CMP	#6
		BNE	loc_0_A475
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		AND	#$40
		BNE	loc_0_A475

loc_0_A45E:				; ...
		LDA	InputTap_P1,X	; данные первого джойстика на нажатие
		AND	#button_B
		BNE	loc_0_A478
		LDA	Objects_AnimID,X ; номер движения для запуска
		BEQ	loc_0_A475
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		BPL	loc_0_A475
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#4
		BNE	loc_0_A478

loc_0_A475:				; ...
		JMP	loc_0_A4F6
; ---------------------------------------------------------------------------

loc_0_A478:				; ...
		LDA	#2
		STA	hit_Z_table_index ; index for Z	collision tbl
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		AND	#$40
		BEQ	loc_0_A4EA
		LDA	Objects_AnimID,X ; номер движения для запуска
		BNE	loc_0_A4F6
		LDA	Level_ID
		CMP	#TurboTunnel
		BEQ	loc_0_A4F6
		CMP	#volkmire_inferno
		BEQ	loc_0_A4F6
		CMP	#SurfCity
		BEQ	loc_0_A4F6
		CMP	#terra_tubes
		BNE	loc_0_A49F

udar_s_propellera:
		LDA	#$82
		JMP	write_obj_Hit_ID_
; ---------------------------------------------------------------------------

loc_0_A49F:				; ...
		LDA	some_counter
		CMP	#2
		BCS	loc_0_A4F6
		INC	some_counter
		LDA	#$C
		JSR	create_weapon	; returns -1 , if can't create
		BMI	loc_0_A4D8
		LDX	tmp_var_1D
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$40
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ASL	A
		AND	#$80
		STA	Objects_dir,X	; / angle
		LDA	#$1E
		STA	Objects_TypeID,X
		LDA	Objects_Z_speed,Y
		STA	Objects_Z_speed,X
		BEQ	loc_0_A4D0
		LDA	Objects_Z_spd_sub,Y

loc_0_A4D0:				; ...
		STA	Objects_Z_spd_sub,X
		LDA	#$5E
		JSR	play_sound_ch4

loc_0_A4D8:				; ...
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$20
		BEQ	loc_0_A4E3

stick_hit_from_dragon:
		LDA	#$3E
		BNE	write_obj_hit_ID__

loc_0_A4E3:				; ...
		LDA	#$A
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		BNE	loc_0_A4F6

loc_0_A4EA:				; ...
		LDA	Objects_AnimID,X ; номер движения для запуска
		BEQ	loc_0_A4F9
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#4
		BNE	loc_0_A4F9

loc_0_A4F6:				; ...
		JMP	loc_0_A6AF
; ---------------------------------------------------------------------------

loc_0_A4F9:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#is_running
		BEQ	loc_0_A503
		JMP	running_hits
; ---------------------------------------------------------------------------

loc_0_A503:				; ...
		LDA	Level_ID
		CMP	#wookie_hole
		BEQ	loc_0_A521
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#have_stick
		BEQ	loc_0_A521
		LDA	#8
		JSR	check_hitting	; A - hit flags
		BPL	write_obj_hit_ID__

stick_hit_ID:				; ...
		LDA	#$1A
		BNE	write_obj_hit_ID__

loc_0_A51B:				; ...
		JMP	loc_0_A5BC
; ---------------------------------------------------------------------------

loc_0_A51E:				; ...
		JMP	loc_0_A5AC
; ---------------------------------------------------------------------------

loc_0_A521:				; ...
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		BMI	loc_0_A51E
		AND	#$40
		BEQ	loc_0_A530
		LDA	Level_ID
		CMP	#terra_tubes
		BEQ	loc_0_A54E

loc_0_A530:				; ...
		LDA	Level_ID
		CMP	#wookie_hole
		BNE	loc_0_A51B
		LDA	player1_obj_wanted_frame,X
		CMP	#$34		; na verevki okolo steni?
		BEQ	loc_0_A541
		CMP	#$2C		; na verevki okolo steni?
		BNE	loc_0_A54E

loc_0_A541:				; ...
		LDA	players_obj_un5,X
		CMP	#1

tol4ok_on_steni:
		LDA	#$1E
		BCS	write_obj_hit_ID__

udar_girei:
		LDA	#$24
		BNE	write_obj_hit_ID__

loc_0_A54E:				; ...
		LDA	#$B
		JSR	check_hitting	; A - hit flags
		BMI	loc_0_A592
		CMP	#$18
		BNE	loc_0_A560
		LDA	#$20
		BNE	write_obj_hit_ID__

write_obj_hit_ID__:			; ...
		JMP	write_obj_Hit_ID_
; ---------------------------------------------------------------------------

loc_0_A560:				; ...
		LDA	Objects_TypeID,Y
		CMP	#$31
		BNE	target_not_turret
		LDA	Objects_Life,Y
		CMP	#$10

botinkami_po_pushke:
		LDA	#$22
		BCC	write_obj_hit_ID__
		LDA	Objects_Life,Y
		CMP	#$20
		LDA	#$4E		; udar girei po	pushke
		BCC	write_obj_hit_ID__
		LDA	RandomValue_1

udar_po_pushkam_l2:
		AND	#2
		ORA	#$50		; $50 -	botinkami
		BNE	write_obj_hit_ID__

target_not_turret:			; ...
		CMP	#$16
		BNE	target_not_raven

udar_po_voronam:
		LDA	#$52
		BNE	write_obj_hit_ID__

target_not_raven:			; ...
		LDA	Objects_Life,Y
		CMP	#$10

udar_botinkami_s_verevki:		; po cvetky
		LDA	#$22
		BCC	write_obj_hit_ID__

loc_0_A592:				; ...
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#have_stick
		CMP	#have_stick

udar_kluvom:
		LDA	#$48
		BCS	write_obj_hit_ID__
		LDA	Objects_TypeID,Y
		CMP	#$2D
		BEQ	po_cvetky_na_verevke

hit_id_on_rope:				; udar s verevki
		LDA	#$1C
		BNE	write_obj_hit_ID__

po_cvetky_na_verevke:			; ...
		LDA	#$46		; kulakom vniz
		BNE	write_obj_hit_ID__

loc_0_A5AC:				; ...
		LDA	flag_boss_1
		BEQ	anim_throw_obj
		LDA	#$70		; anim throw in	boss 1
		JMP	write_obj_Hit_ID_
; ---------------------------------------------------------------------------

anim_throw_obj:				; ...
		LDA	#$C
		BNE	write_obj_hit_ID__

free_hits_:				; ...
		JMP	free_hits
; ---------------------------------------------------------------------------

loc_0_A5BC:				; ...
		LDA	#$3F
		JSR	check_hitting	; A - hit flags
		BMI	free_hits_
		BNE	write_obj_hit_ID__
		LDA	Objects_TypeID,Y
		CMP	#$50
		BNE	loc_0_A5D3
		LDA	#$C0
		STA	Objects_cnt2,Y
		BNE	loc_0_A63D

loc_0_A5D3:				; ...
		LDA	Objects_TypeID,Y
		CMP	#$6D
		BNE	loc_0_A5F0
		LDA	Objects_Life,Y
		CMP	#4
		BCC	loc_0_A5F0
		LDA	#$40
		STA	Obj_anims_timer,Y ; timer used for gfx frames
		LDA	#$10
		STA	Obj_various_cnt,Y

po_robotam:
		LDA	#$7A
		JMP	write_obj_Hit_ID_
; ---------------------------------------------------------------------------

loc_0_A5F0:				; ...
		CMP	#$6E
		BCC	loc_0_A5FD
		CMP	#$72
		BCS	loc_0_A5FD
		LDA	#$78		; udar po ugryu
		JMP	write_obj_Hit_ID_
; ---------------------------------------------------------------------------

loc_0_A5FD:				; ...
		LDA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#damaged_heavy
		BEQ	loc_0_A618
		LDA	Objects_TypeID,Y
		EOR	#$33
		BEQ	toads_simple_punch
		LDA	Objects_Life,Y
		CMP	#8

udar_nogoi:				; nogoi	(removed in btdd)
		LDA	#$12
		BCS	write_obj_Hit_ID_

udar_botinok:				; ...
		LDA	#$14		; big bad boot :)
		BNE	write_obj_Hit_ID_

loc_0_A618:				; ...
		LDA	Objects_TypeID,Y
		CMP	#$33
		BEQ	udar_loktem?
		AND	#$FC
		CMP	#$7C
		BEQ	loc_0_A63D
		LDA	Objects_LinkedObj_ID,Y ; флаг/id присоединённого объекта
		AND	#$40
		BNE	uppercut
		LDA	Objects_Life,Y
		CMP	#4
		BCS	target_more_than_4_life
		LDA	Level_ID
		CMP	#volkmire_inferno
		BNE	power_punch
		CPY	#2		; target life
		BCC	power_punch

loc_0_A63D:				; ...
		LDA	#0		; power	hits on	some objs, and volkimire lvl
		STA	Objects_X_speed,Y
		LDA	RandomValue_1

power_hits:
		AND	#6
		ADC	#$71		; power	hits (4	various)
		BNE	write_obj_Hit_ID_

power_punch:				; ...
		LDA	#$E		; power	punch
		BNE	write_obj_Hit_ID_

target_more_than_4_life:		; ...
		AND	#$F
		CMP	#4
		BCS	toads_simple_punch
		LDA	Objects_TypeID,Y
		CMP	#$47
		BEQ	udar_loktem?
		CMP	#$17
		BNE	uppercut

udar_loktem?:				; ...
		LSR	Objects_X_speed,X
		LDA	#$36
		BNE	write_obj_Hit_ID_

uppercut:				; ...
		LDA	#6
		BNE	write_obj_Hit_ID_

loc_0_A66A:				; ...
		LDA	Level_ID
		CMP	#arctic_caverns
		BNE	toads_simple_punch ; ???

toads_simple_punch:			; ...
		LDA	RandomValue_1,X
		AND	#2
		CLC
		ADC	#2		; 2 or 4
		BNE	write_obj_Hit_ID_

free_hits:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#is_running
		BEQ	loc_0_A66A

running_hits:				; ...
		LDA	#3
		JSR	check_hitting	; A - hit flags
		BNE	udar_s_razgona
		LDA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#damaged_heavy
		BNE	udar_botinok

udar_s_razgona:				; ...
		LDA	#$16

write_obj_Hit_ID_:			; ...
		JSR	write_obj_Anim_ID
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		AND	#button_right|button_left
		BEQ	loc_0_A6AF
		AND	#button_left
		BEQ	loc_0_A69F
		LDA	#$80

loc_0_A69F:				; ...
		STA	Objects_dir,X	; / angle
		LSR	A
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$BF
		ORA	tmp_var_15	;  / Object Counter / various tmp
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?

loc_0_A6AF:				; ...
		LDA	Objects_AnimID,X ; номер движения для запуска
		BEQ	loc_0_A6BC
		LDA	#1		; every	second frame
		JSR	start_read_anim	; with ptr inc by AND with frame cnt
		JMP	loc_0_A89B
; ---------------------------------------------------------------------------

loc_0_A6BC:				; ...
		LDA	Level_ID
		CMP	#clinger_winger	; clinger_winger
		BNE	loc_0_A717
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		AND	#$40
		BNE	loc_0_A6D4
		LDA	Objects_Xpos_H,X
		CMP	#6
		BCS	loc_0_A717
		LDA	#$60
		BNE	loc_0_A709

loc_0_A6D4:				; ...
		LDA	Objects_TargetID,X
		BNE	loc_0_A6F5
		INC	Objects_Z_sub,X	; timer...
		LDA	Objects_Z_sub,X
		SBC	#$20
		BCC	loc_0_A70F
		BNE	loc_0_A6E9
		JSR	play_sound_6C
		TXA

loc_0_A6E9:				; ...
		AND	#$80
		BEQ	loc_0_A709
		INC	Objects_TargetID,X
		LDA	#$6E
		JSR	play_sound_ch4

loc_0_A6F5:				; ...
		LDA	#$80
		STA	Objects_X_speed,X
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		AND	#button_right|button_left|button_down|button_up
		TAY
		LDA	mov_dir_table,Y
		CMP	Objects_dir,X	; / angle
		BNE	loc_0_A70C
		LDA	#$F0

loc_0_A709:				; ...
		STA	Objects_X_speed,X

loc_0_A70C:				; ...
		JSR	obj_moving_by_speed

loc_0_A70F:				; ...
		JMP	loc_0_AB23
; ---------------------------------------------------------------------------

play_sound_6C:				; ...
		LDA	#$6C
		JMP	play_sound_ch1_and_ch2
; ---------------------------------------------------------------------------

loc_0_A717:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#is_running
		BEQ	loc_0_A733
		LDA	InputTap_P1,X	; данные первого джойстика на нажатие
		AND	#button_right|button_left|button_down|button_up|button_A
		BNE	loc_0_A730
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		AND	#button_right|button_left|button_down|button_up
		CMP	#button_down
		BCS	loc_0_A730
		AND	#button_right|button_left
		BNE	loc_0_A733

loc_0_A730:				; ...
		JSR	speed_limit

loc_0_A733:				; ...
		LDA	players_obj_unk1,X
		SEC
		SBC	#4
		BCC	loc_0_A76F
		STA	players_obj_unk1,X
		LDA	InputTap_P1,X	; данные первого джойстика на нажатие
		AND	#button_right|button_left
		BEQ	loc_0_A77A
		EOR	players_obj_unk1,X
		AND	#3
		BNE	loc_0_A77A
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		CMP	#$80
		BCS	loc_0_A762
		AND	#$40
		BEQ	loc_0_A762
		LDA	Level_ID
		CMP	#TurboTunnel
		BEQ	loc_0_A767
		CMP	#volkmire_inferno
		BEQ	loc_0_A767
		LDA	#0

loc_0_A762:				; ...
		ORA	Objects_Z_floor,X
		BNE	loc_0_A77A

loc_0_A767:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ORA	#is_running
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?

loc_0_A76F:				; ...
		LDA	InputTap_P1,X	; данные первого джойстика на нажатие
		AND	#button_right|button_left
		BEQ	loc_0_A77A
		ORA	#$38
		STA	players_obj_unk1,X

loc_0_A77A:				; ...
		LDA	players_obj_unk3,X
		BMI	loc_0_A794
		LDY	Level_ID
		CPY	#volkmire_inferno
		BNE	loc_0_A78D
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		ASL	A
		BPL	loc_0_A78D
		LDY	#2

loc_0_A78D:				; ...
		LDA	Level_CanMove_Dir,Y ; возможность ходьбы в направлении (udlr)
		AND	InputHold_P1,X	; данные первого джойстика на зажатие
		BNE	moving_dirs

loc_0_A794:				; ...
		JMP	loc_0_A89B
; ---------------------------------------------------------------------------

moving_dirs:				; ...
		TAY
		LDA	mov_dir_table,Y
		SEC
		SBC	Objects_dir,X	; / angle
		BEQ	loc_0_A7D3
		CMP	#$41
		BCC	loc_0_A7B8
		CMP	#$C0
		BCS	loc_0_A7B8
		LDA	#$F8
		JSR	object_inc_to_Xspeed ; A is speed
		LDA	Objects_X_speed,X
		CMP	#$20
		BCC	loc_0_A7BF
		JMP	loc_0_A89B
; ---------------------------------------------------------------------------

loc_0_A7B8:				; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_X_speed,X
		BNE	loc_0_A7C5

loc_0_A7BF:				; ...
		LDA	mov_dir_table,Y
		JMP	loc_0_A7D0
; ---------------------------------------------------------------------------

loc_0_A7C5:				; ...
		ROL	tmp_var_15	;  / Object Counter / various tmp
		LDA	#8
		BCC	loc_0_A7CD
		SBC	#$10

loc_0_A7CD:				; ...
		ADC	Objects_dir,X	; / angle

loc_0_A7D0:				; ...
		STA	Objects_dir,X	; / angle

loc_0_A7D3:				; ...
		LDA	player1_water_flag,X ; $80 - in	water (terra tubes)
		BEQ	loc_0_A7DB
		JSR	speed_limit

loc_0_A7DB:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#is_running
		BEQ	loc_0_A7F0
		CLC
		LDA	Obj_various_cnt,X
		ADC	#4
		STA	Obj_various_cnt,X
		LDA	#$C0
		JMP	loc_0_A873
; ---------------------------------------------------------------------------

loc_0_A7F0:				; ...
		LDY	#$40
		LDA	Objects_dir,X	; / angle
		AND	#$7F
		SEC
		SBC	#$21
		CMP	#$3D
		BCC	loc_0_A804
		LDY	Level_ID
		LDA	Level_CarryObjSpeed,Y ;	скорость при взятом объекте
		TAY

loc_0_A804:				; ...
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		CMP	#$40
		BCC	loc_0_A841
		AND	#$40
		BEQ	loc_0_A839
		LDA	Level_ID
		CMP	#TurboTunnel
		BEQ	loc_0_A841
		CMP	#volkmire_inferno
		BNE	loc_0_A81E
		LDA	#$80
		JMP	loc_0_A873
; ---------------------------------------------------------------------------

loc_0_A81E:				; ...
		CPY	#$40
		BEQ	loc_0_A841
		LDA	Objects_Z_floor,X
		BEQ	loc_0_A835
		CMP	#$28
		BCS	loc_0_A841
		LDA	global_var_cnt?
		AND	#8
		BNE	loc_0_A841
		LDY	#$A0
		BNE	loc_0_A841

loc_0_A835:				; ...
		LDY	#$40
		BNE	loc_0_A841

loc_0_A839:				; ...
		TYA
		LSR	A
		STA	tmp_var_15	;  / Object Counter / various tmp
		LSR	A
		ADC	tmp_var_15	;  / Object Counter / various tmp
		TAY

loc_0_A841:				; ...
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		AND	#$40
		BNE	loc_0_A84F
		LDA	Objects_gfx_frame,X
		CMP	#$4B		; sitting frame
		BEQ	loc_0_A876

loc_0_A84F:				; ...
		LDA	player1_water_flag,X ; $80 - in	water (terra tubes)
		BEQ	loc_0_A85A
		LDY	#$60
		LDA	#6
		BNE	loc_0_A866	; jump

loc_0_A85A:				; ...
		LDA	Level_ID
		CMP	#arctic_caverns
		BNE	loc_0_A864
		LDA	#karnath_lair
		BNE	loc_0_A866

loc_0_A864:				; ...
		LDA	#$A

loc_0_A866:				; ...
		CLC
		ADC	Objects_X_speed,X
		STA	Objects_X_speed,X
		TYA
		CMP	Objects_X_speed,X
		BCS	loc_0_A876

loc_0_A873:				; ...
		STA	Objects_X_speed,X

loc_0_A876:				; ...
		LDA	Objects_X_speed,X
		CMP	#$80
		BCC	loc_0_A89B
		LDA	Level_ID
		CMP	#rat_race
		BNE	loc_0_A89B
		LDA	rat_slot_id
		BEQ	loc_0_A89B
		LDA	Objects_Z_floor,X
		BNE	loc_0_A893
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ORA	#is_running
		BNE	loc_0_A898

loc_0_A893:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$EF

loc_0_A898:				; ...
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?

loc_0_A89B:				; ...
		JSR	loc_0_A8A1
		JMP	loc_0_A915
; ---------------------------------------------------------------------------

loc_0_A8A1:				; ...
		LDA	Level_ID
		CMP	#arctic_caverns
		BNE	loc_0_A90F
		LDA	Objects_AnimID,X ; номер движения для запуска
		BEQ	loc_0_A8B8
		LDA	player1_updown_slide_cnt,X
		BEQ	loc_0_A8B8
		LDA	#0
		STA	player1_updown_slide_cnt,X
		BEQ	locret_0_A90E

loc_0_A8B8:				; ...
		LDA	player1_updown_slide_cnt,X
		BEQ	loc_0_A8C5
		BPL	loc_0_A8C5
		LDA	#0
		SEC
		SBC	player1_updown_slide_cnt,X

loc_0_A8C5:				; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_dir,X	; / angle
		PHA
		EOR	player1_updown_slide_cnt,X
		BPL	loc_0_A8E9
		LDA	Objects_X_speed,X
		SEC
		SBC	tmp_var_15	;  / Object Counter / various tmp
		BCS	loc_0_A8F3
		LDA	Objects_dir,X	; / angle
		EOR	#$80
		STA	Objects_dir,X	; / angle
		LDA	tmp_var_15	;  / Object Counter / various tmp
		ADC	#$F
		SBC	Objects_X_speed,X
		BCS	loc_0_A8F3

loc_0_A8E9:				; ...
		LDA	tmp_var_15	;  / Object Counter / various tmp
		CMP	Objects_X_speed,X
		BCS	loc_0_A8F3
		LDA	Objects_X_speed,X

loc_0_A8F3:				; ...
		STA	tmp_var_8d
		JSR	change_obj_coord?_ ; A is speed
		PLA
		STA	Objects_dir,X	; / angle
		LDA	player1_updown_slide_cnt,X
		BEQ	locret_0_A90E
		ROL	A
		LDA	#0
		BCS	loc_0_A908
		LDA	#$FF

loc_0_A908:				; ...
		ADC	player1_updown_slide_cnt,X
		STA	player1_updown_slide_cnt,X

locret_0_A90E:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_A90F:				; ...
		JMP	obj_moving_by_speed
; ---------------------------------------------------------------------------

loc_0_A912:				; ...
		JMP	loc_0_A9CB
; ---------------------------------------------------------------------------

loc_0_A915:				; ...
		LDA	timer_end_music
		BNE	loc_0_A922
		LDA	Level_ID
		CMP	#revolution
		BEQ	loc_0_A922
		JSR	object_vs_camera_check ; lock obj to camera

loc_0_A922:				; ...
		LDA	Level_ID
		CMP	#wookie_hole
		BEQ	loc_0_A912
		LDA	InputTap_P1,X	; данные первого джойстика на нажатие
		BPL	loc_0_A912
		LDA	player1_water_flag,X ; $80 - in	water (terra tubes)
		BPL	loc_0_A93E
		LDA	Objects_Z_speed,X
		CMP	#1
		BEQ	loc_0_A912
		LDY	#1
		LDA	#$F0
		BNE	loc_0_A9B7

loc_0_A93E:				; ...
		LDA	cnt_unk_pl1,X
		BNE	loc_0_A912
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		AND	#$40
		BEQ	loc_0_A994
		LDY	#3
		LDA	Level_ID
		CMP	#TurboTunnel
		BEQ	loc_0_A976
		CMP	#volkmire_inferno
		BEQ	loc_0_A976
		CMP	#SurfCity
		BEQ	loc_0_A976
		LDA	global_var_cnt?
		AND	#8
		BNE	loc_0_A9CB
		LDA	Objects_Z_floor,X
		CMP	#$70
		BCS	loc_0_A9CB
		LDA	Objects_Y_shad,X
		SBC	Objects_Z_floor,X
		BCC	loc_0_A9CB
		CMP	#$30
		BCC	loc_0_A9CB
		LDA	#0
		BEQ	loc_0_A9B7

loc_0_A976:				; ...
		LDA	Objects_Z_floor,X
		CMP	#$12
		BCS	loc_0_A9CB
		LDA	global_var_cnt?
		AND	#8
		BNE	loc_0_A9CB
		LDA	#2
		STA	Objects_Z_speed,X
		LDA	#$80
		STA	Objects_Z_spd_sub,X
		LDA	#0
		STA	players_obj_un3,X
		BEQ	loc_0_A9C3	; jump

loc_0_A994:				; ...
		LDY	#4
		LDA	Objects_Z_floor,X
		ORA	Objects_AnimID,X ; номер движения для запуска
		BNE	loc_0_A9CB
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		BPL	loc_0_A9A4
		DEY

loc_0_A9A4:				; ...
		LDA	Level_ID
		CMP	#terra_tubes
		BEQ	loc_0_A9B0
		EOR	#TurboTunnel
		BEQ	loc_0_A9B2
		BNE	loc_0_A9B5

loc_0_A9B0:				; ...
		LDA	#$98

loc_0_A9B2:				; ...
		INY
		BNE	loc_0_A9B7

loc_0_A9B5:				; ...
		LDA	#$E0

loc_0_A9B7:				; ...
		STA	Objects_Z_spd_sub,X
		TYA
		STA	Objects_Z_speed,X
		LDA	#$80
		STA	players_obj_un3,X

loc_0_A9C3:				; ...
		LDA	#$30
		STA	players_obj_un2,X
		INC	Objects_Z_floor,X

loc_0_A9CB:				; ...
		LDA	tmp_var_c8
		BNE	loc_0_AA3D
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		AND	#$40
		BEQ	not_surf_bike
		LDA	Level_ID
		CMP	#SurfCity
		BNE	not_surf_city_
		JSR	drop_and_remove_stick
		LDA	Objects_Z_floor,X
		BNE	not_surf_bike
		STA	players_obj_un3,X
		LDA	#1
		STA	Objects_Z_speed,X
		LDA	RandomValue_1
		STA	Objects_Z_spd_sub,X
		LDA	Objects_Zpos_L,X
		AND	#8
		BNE	not_surf_bike
		LDA	#$9F
		JSR	play_sound_ch4
		JSR	get_free_obj_slot_IDX
		LDA	Object_RamSlotID_tmp ; id saved	for objects functions
		STA	Objects_TargetID,X
		LDA	#$6C
		STA	Objects_TypeID,X
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

not_surf_bike:				; ...
		JMP	loc_0_AB0A
; ---------------------------------------------------------------------------

not_surf_city_:				; ...
		CMP	#TurboTunnel
		BEQ	loc_0_AA81
		CMP	#volkmire_inferno
		BEQ	loc_0_AA81
		CMP	#terra_tubes
		BNE	loc_0_AA40
		LDA	Objects_TargetID,X
		STA	Objects_Z_speed,X
		CLC
		JSR	objects_add_Z?	; A is Z_speed
		JSR	sub_0_E471
		LDA	Objects_TargetID,X
		BEQ	loc_0_AA3D
		LDA	player1_water_flag,X ; $80 - in	water (terra tubes)
		BNE	loc_0_AA38
		LDA	some_lvl_flag_cnt ; 0-air,1-h_surf,2-right,3-left naklon
		CMP	#$A
		BNE	loc_0_AA3D

loc_0_AA38:				; ...
		LDA	#0
		STA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта

loc_0_AA3D:				; ...
		JMP	loc_0_AB2C
; ---------------------------------------------------------------------------

loc_0_AA40:				; ...
		LDA	global_var_cnt?
		AND	#8
		BNE	loc_0_AA7E
		LDY	#$E0
		LDA	Objects_Z_floor,X
		CMP	#8
		BCS	loc_0_AA5F
		LDA	#0
		STA	Objects_Z_speed,X
		LDA	#$C0
		STA	Objects_Z_spd_sub,X
		JSR	obj_add_Z_by_Zspd?
		JMP	loc_0_AB23
; ---------------------------------------------------------------------------

loc_0_AA5F:				; ...
		CMP	#$40
		BCS	loc_0_AA71
		LDA	Objects_X_speed,X
		BPL	loc_0_AA71
		LDA	Objects_Z_speed,X
		BEQ	loc_0_AA78
		BPL	loc_0_AA71
		LDY	#$18

loc_0_AA71:				; ...
		LDA	#3
		STY	tmp_var_15	;  / Object Counter / various tmp
		JSR	loc_0_8EA8

loc_0_AA78:				; ...
		JMP	loc_0_AB23
; ---------------------------------------------------------------------------
		JMP	loc_0_AB2C	; unused?
; ---------------------------------------------------------------------------

loc_0_AA7E:				; ...
		JMP	loc_0_AB0A
; ---------------------------------------------------------------------------

loc_0_AA81:				; ...
		LDA	Level_ID
		CMP	#volkmire_inferno
		BNE	loc_0_AAC9
		LDA	#0
		STA	Objects_X_speed,X
		LDA	#$CC
		SEC
		SBC	Objects_Ypos_L,X
		BEQ	loc_0_AA9D
		CLC
		JSR	objects_add_Z?	; A is Z_speed
		LDA	#$CC
		STA	Objects_Ypos_L,X

loc_0_AA9D:				; ...
		LDA	Objects_Ypos_L,X
		SBC	Objects_Zpos_L,X
		SEC
		SBC	Camera_Y_pos_l	;  / level_position - on v levels
		TAY
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		AND	#button_down|button_up
		CMP	#button_up
		BCS	loc_0_AABD
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		AND	#button_down
		BEQ	loc_0_AAC6
		CPY	#$E0
		BCS	loc_0_AAC6
		LDA	#$FE
		BNE	loc_0_AAC3

loc_0_AABD:				; ...
		CPY	#$34
		BCC	loc_0_AAC6
		LDA	#1

loc_0_AAC3:				; ...
		JSR	objects_add_Z?	; A is Z_speed

loc_0_AAC6:				; ...
		JMP	loc_0_AB23
; ---------------------------------------------------------------------------

loc_0_AAC9:				; ...
		LDA	Objects_Z_floor,X
		BEQ	loc_0_AAD7
		LDA	global_var_cnt?
		AND	#8
		ORA	players_obj_un2,X
		BNE	loc_0_AB0A

loc_0_AAD7:				; ...
		STA	players_obj_un2,X
		STA	players_obj_un3,X
		LDA	tunnel_unk_p1,X
		BEQ	loc_0_AAEB
		SEC
		JSR	loc_0_AAF6
		LDA	#0
		STA	tunnel_unk_p1,X
		BEQ	loc_0_AB23

loc_0_AAEB:				; ...
		JSR	loc_0_AAF1
		JMP	loc_0_AB23
; ---------------------------------------------------------------------------

loc_0_AAF1:				; ...
		LDA	Objects_Z_floor,X
		CMP	#8

loc_0_AAF6:				; ...
		LDY	#$E4

loc_0_AAF8:				; ...
		BCS	loc_0_AB03
		CPX	#2
		BCS	loc_0_AAFF
		DEY

loc_0_AAFF:				; ...
		TYA
		EOR	#$FF
		TAY

loc_0_AB03:				; ...
		LDA	#1
		STY	tmp_var_15	;  / Object Counter / various tmp
		JMP	loc_0_8EA8
; ---------------------------------------------------------------------------

loc_0_AB0A:				; ...
		LDA	Objects_AnimID,X ; номер движения для запуска
		BEQ	loc_0_AB14
		LDA	player1_water_flag,X ; $80 - in	water (terra tubes)
		BMI	loc_0_AB23

loc_0_AB14:				; ...
		LDA	players_obj_un3,X
		CMP	#$C0
		BEQ	loc_0_AB20
		AND	InputHold_P1,X	; данные первого джойстика на зажатие
		STA	players_obj_un3,X

loc_0_AB20:				; ...
		JSR	players_Z?

loc_0_AB23:				; ...
		JSR	sub_0_E471
		LDA	Level_ID
		CMP	#wookie_hole
		BEQ	loc_0_AB2F

loc_0_AB2C:				; ...
		JSR	obj_set_flags_by_dir

loc_0_AB2F:				; ...
		LDA	Objects_AnimID,X ; номер движения для запуска
		ORA	tmp_var_c8
		BNE	locret_0_ABA2
		LDA	Level_ID
		CMP	#terra_tubes
		BNE	loc_0_AB4E
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		AND	#$40
		BEQ	loc_0_AB4E
		LDA	Obj_various_cnt,X
		ADC	#$10
		STA	Obj_various_cnt,X
		JMP	on_rope_or_propeller
; ---------------------------------------------------------------------------

loc_0_AB4E:				; ...
		CMP	#wookie_hole
		BNE	loc_0_ABA3
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		AND	#button_right|button_left
		BEQ	loc_0_AB61
		AND	#button_left
		BEQ	loc_0_AB5E
		LDA	#$40

loc_0_AB5E:				; ...
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?

loc_0_AB61:				; ...
		LDA	players_obj_un5,X
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ASL	A
		EOR	Objects_Xpos_L,X
		BPL	on_rope_or_propeller
		LDA	Objects_Xpos_L,X
		SEC
		SBC	#$2E
		CMP	#$A3
		BCC	on_rope_or_propeller
		LDA	players_obj_un5,X
		BNE	rope_near_wall2
		LDA	FrameCounter
		AND	#$10
		BEQ	rope_near_wall2
		LDA	FrameCounter
		AND	#$F
		BNE	rope_near_wall1
		LDA	#$66		; sound	when near wall
		LDX	#snd_channel1
		JSR	play_sound	; A is sound id, X - jmp_off (ch ID)

rope_near_wall1:			; ...
		LDA	#$34		; girya
		BNE	loc_0_AB9F	; jump

rope_near_wall2:			; ...
		LDA	#$2C		; normal
		BNE	loc_0_AB9F	; jump

on_rope_or_propeller:			; ...
		LDA	Obj_various_cnt,X
		ROL	A
		LDA	#$24
		ADC	#0

loc_0_AB9F:				; ...
		JMP	write_pl_wanted_frame
; ---------------------------------------------------------------------------

locret_0_ABA2:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_ABA3:				; ...
		LDA	player1_water_flag,X ; $80 - in	water (terra tubes)
		BPL	loc_0_ABCC
		LDA	Objects_X_speed,X
		CMP	#$20
		LDA	#$F
		BCS	loc_0_ABBB
		LDA	Objects_Z_floor,X
		BNE	loc_0_ABB9
		JMP	stand_with_hold_obj
; ---------------------------------------------------------------------------

loc_0_ABB9:				; ...
		LDA	#$1F

loc_0_ABBB:				; ...
		AND	FrameCounter
		BNE	loc_0_ABC2
		INC	Obj_various_cnt,X

loc_0_ABC2:				; ...
		LDA	Obj_various_cnt,X
		AND	#1
		ORA	#$62
		JMP	write_pl_wanted_frame
; ---------------------------------------------------------------------------

loc_0_ABCC:				; ...
		LDA	Level_ID
		CMP	#karnath_lair
		BNE	not_snake_pit
		LDA	players_obj_unk3,X
		BEQ	not_snake_pit
		BMI	not_snake_pit
		DEC	players_obj_unk3,X
		LDA	#$3A
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		LSR	A
		LSR	A
		AND	#1
		ORA	#$58		; frame	holding	on snake
		JMP	write_pl_wanted_frame
; ---------------------------------------------------------------------------

loc_0_ABE9:				; ...
		JMP	loc_0_AC85
; ---------------------------------------------------------------------------

not_snake_pit:				; ...
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		AND	#$40
		BEQ	loc_0_ABE9
		LDY	Level_ID
		CPY	#TurboTunnel
		BEQ	frames_on_bike
		CPY	#volkmire_inferno
		BEQ	frames_on_bike
		CPY	#SurfCity
		BNE	not_surf_city
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$BF
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		TXA
		EOR	FrameCounter
		ROR	A
		BCC	loc_0_AC10
		RTS
; ---------------------------------------------------------------------------

loc_0_AC10:				; ...
		LDA	InputTap_P1,X	; данные первого джойстика на нажатие
		BEQ	loc_0_AC1F
		INC	Objects_TargetID,X
		LDA	Objects_TargetID,X
		AND	#3
		STA	Objects_TargetID,X

loc_0_AC1F:				; ...
		LDY	Objects_TargetID,X
		LDA	surfboard_frames,Y
		JMP	write_pl_wanted_frame
; ---------------------------------------------------------------------------
surfboard_frames:.BYTE $45, $46, $4A, $4B ; ...
; ---------------------------------------------------------------------------

frames_on_bike:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$BF
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	players_obj_un2,X
		CMP	#1
		LDA	#$3A		; on bike linear
		BCC	write_pl_wanted_frame_
		CPY	#volkmire_inferno
		BEQ	write_pl_wanted_frame_
		LDA	#$3C		; on bike - up
		LDY	Objects_Z_speed,X
		DEY
		BPL	write_pl_wanted_frame_
		LDA	#$3B		; on bike - down
		BNE	write_pl_wanted_frame_

not_surf_city:				; ...
		LDY	Objects_Z_floor,X
		LDA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		BEQ	loc_0_AC5C
		DEC	Objects_Anim_Ptr,X ; оффсет чтения анимации
		LDA	#$3E		; dragon - shoot fireballs
		BNE	write_pl_wanted_frame_

loc_0_AC5C:				; ...
		CPY	#$30
		BCS	loc_0_AC6E
		LDA	Objects_X_speed,X
		BPL	loc_0_AC6E
		LDA	#$3D		; frame	dragon fly down
		LDY	Objects_Z_speed,X
		BEQ	write_pl_wanted_frame_
		BMI	write_pl_wanted_frame_

loc_0_AC6E:				; ...
		CPY	#$10
		BCC	frames_on_dragon
		LDA	Objects_Z_speed,X
		CMP	#$80
		LDA	#$38
		BCS	write_pl_wanted_frame_

frames_on_dragon:			; ...
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		AND	#2
		LSR	A
		ADC	#$38

write_pl_wanted_frame_:			; ...
		JMP	write_pl_wanted_frame
; ---------------------------------------------------------------------------

loc_0_AC85:				; ...
		LDA	Objects_Z_floor,X
		BEQ	loc_0_ACA3
		LDY	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		BMI	jump_with_hold_obj
		LDA	Objects_Z_speed,X
		CLC
		ADC	#2
		CMP	#5
		LDA	#$2D		; jump and fall	frames
		BCC	write_pl_wanted_frame_
		LDA	#5
		BNE	write_pl_wanted_frame_

jump_with_hold_obj:			; ...
		LDA	#$2E		; jump with obj
		BNE	write_pl_wanted_frame_

loc_0_ACA3:				; ...
		LDA	Level_ID
		CMP	#arctic_caverns
		BNE	not_level_4
		LDA	some_lvl_flag_cnt ; 0-air,1-h_surf,2-right,3-left naklon
		BEQ	check_sliding
		CMP	#1
		BNE	check_sliding
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		AND	#button_down
		BEQ	loc_0_ACC2	; check	sitting

sitting_frame:
		LDA	#$4B
		LDY	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		BPL	write_pl_wanted_frame_
		LDA	#$E		; sitting with obj
		BNE	write_pl_wanted_frame_

loc_0_ACC2:				; ...
		LDA	tmp_var_8d
		CMP	#8
		BCC	loc_0_AD2F
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		AND	#button_right|button_left
		CMP	#button_right
		LDA	#8
		BCS	loc_0_AD35
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		BMI	sliding_with_obj_frame
		LDA	tmp_var_8d
		CMP	#$40
		LDA	#$45		; sliding slow
		BCC	write_pl_wanted_frame_
		LDA	#$51		; sliding fast
		BNE	write_pl_wanted_frame_

check_sliding:				; ...
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		AND	#button_right|button_left
		CMP	#button_right
		LDA	#8
		BCS	loc_0_AD35
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		BPL	sliding_frames

sliding_with_obj_frame:			; ...
		LDA	#$12
		JMP	write_pl_wanted_frame
; ---------------------------------------------------------------------------

sliding_frames:				; ...
		LDA	some_lvl_flag_cnt ; 0-air,1-h_surf,2-right,3-left naklon
		ROR	A
		ROR	A
		ROR	A
		EOR	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#turned_left
		CMP	#1
		LDA	#$4F		; sliding up
		BCS	loc_0_AD09
		LDA	#$50		; sliding down

loc_0_AD09:				; ...
		JMP	write_pl_wanted_frame
; ---------------------------------------------------------------------------

not_level_4:				; ...
		LDA	Level_ID
		CMP	#revolution
		BNE	not_level_5
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		AND	#button_down
		BEQ	not_level_5
		STA	Objects_X_speed,X

sitting_frame_2d:			; ...
		LDA	#$4B
		BNE	write_pl_wanted_frame

not_level_5:				; ...
		LDY	Level_ID
		LDA	level_flags_sit_and_xz,Y
		AND	#button_down
		AND	InputHold_P1,X	; данные первого джойстика на зажатие
		BNE	sitting_frame_2d
		LDA	Objects_X_speed,X
		CMP	#$20

loc_0_AD2F:				; ...
		BCC	stand_with_hold_obj
		LSR	A
		LSR	A
		LSR	A
		LSR	A

loc_0_AD35:				; ...
		CLC
		ADC	Obj_various_cnt,X
		STA	Obj_various_cnt,X
		ROL	A
		ROL	A
		ROL	A
		ROL	A
		AND	#7
		TAY
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		BMI	frames_with_holding_obj
		LDA	Objects_dir,X	; / angle
		AND	#$7F
		CMP	#$40
		BNE	loc_0_AD60
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		ADC	FrameCounter
		LSR	A
		LSR	A
		LSR	A
		AND	#3
		TAY
		LDA	rash_move_UD_frames,Y
		BNE	write_pl_wanted_frame

loc_0_AD60:				; ...
		LDX	Level_ID
		LDA	level_flags_sit_and_xz,X
		AND	#$80
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		ORA	Objects_Z_floor
		ORA	player2_Z_floor
		BNE	loc_0_AD85
		LDA	Objects_X_speed
		ADC	player2_X_speed
		BCC	loc_0_AD85
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$10
		BEQ	loc_0_AD85
		LDA	rash_run_frames,Y
		BNE	write_pl_wanted_frame

loc_0_AD85:				; ...
		LDA	rash_walk_frames,Y

write_pl_wanted_frame:			; ...
		STA	player1_obj_wanted_frame,X
		RTS
; ---------------------------------------------------------------------------

frames_with_holding_obj:		; ...
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		LSR	A
		LSR	A
		AND	#3
		TAY
		LDA	rash_with_obj_frames,Y
		BNE	write_pl_wanted_frame ;	jump

stand_with_hold_obj:			; ...
		LDA	#$11		; stand	with linked obj
		LDY	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		BMI	write_pl_wanted_frame
		LDA	#$C0
		STA	Obj_various_cnt,X

object_default_frame:
		LDA	#1
		STA	player1_obj_wanted_frame,X
		LDA	player1_eye_clos,X
		BNE	loc_0_ADBE
		LDA	RandomValue_1,X
		AND	#$3F
		BNE	locret_0_ADC4
		LDA	RandomValue_2,X
		AND	#$F
		CLC
		ADC	#4
		STA	player1_eye_clos,X

loc_0_ADBE:				; ...
		DEC	player1_eye_clos,X
		INC	player1_obj_wanted_frame,X

locret_0_ADC4:				; ...
		RTS
; ---------------------------------------------------------------------------
level_flags_sit_and_xz:.BYTE $80, $80, $80, $80, 4, $84, $80, 4, $84, 4, $84, 4, 0, 4, 0 ; ...
; ---------------------------------------------------------------------------

loc_0_ADD4:				; ...
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

object_delete?:				; ...
		LDA	Objects_cnt3,X

loc_0_ADDA:				; ...
		CLC
		ADC	Objects_cnt2,X
		BCS	loc_0_ADD4
		JMP	loc_0_AE6C
; ---------------------------------------------------------------------------

object_WARP:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		CMP	#$55
		BNE	loc_0_AE11
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		LDA	Objects_Life,X
		BEQ	loc_0_ADF7
		DEC	Objects_Life,X
		BNE	loc_0_ADFC

loc_0_ADF7:				; ...
		DEC	Objects_AnimID,X ; номер движения для запуска
		BEQ	loc_0_ADD4

loc_0_ADFC:				; ...
		JSR	warp_sub
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		INC	Objects_various_flags,X	; для пушек ID прицепленного объекта
		AND	#$20
		CMP	#$A
		LDA	#1
		BCC	loc_0_ADDA
		LDA	#$FF
		BCS	loc_0_AE30

loc_0_AE11:				; ...
		LDA	Level_ID
		CMP	#rat_race
		BEQ	loc_0_AE1B
		LDA	#$1E
		STA	camera_lock_cnt

loc_0_AE1B:				; ...
		LDA	Objects_cnt3,X
		BNE	warp_part?
		LDA	#$14
		JSR	play_sound_ch1_and_ch2
		DEC	Objects_cnt2,X
		LDA	#$FE
		STA	Objects_cnt3,X

warp_part?:				; ...
		LDA	Objects_cnt3,X

loc_0_AE30:				; ...
		CLC
		ADC	Objects_cnt2,X
		BCS	loc_0_AE6C
		LDA	Objects_TypeID,X
		EOR	#$22
		BNE	loc_0_ADD4
		STA	Objects_cnt3,X
		STA	Objects_cnt2,X
		LDA	#$12
		STA	Objects_TypeID,X
		LDA	#$E8
		JSR	objects_add_Z?	; A is Z_speed
		LDA	Level_ID
		CMP	#rat_race
		BEQ	loc_0_AE64
		LDA	#$40
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		LDA	Level_ID
		CMP	#SurfCity
		BNE	loc_0_AE61
		DEC	Objects_TypeID,X

loc_0_AE61:				; ...
		JMP	object_tall_walker
; ---------------------------------------------------------------------------

loc_0_AE64:				; ...
		LDA	#$46
		STA	Objects_TypeID,X
		JMP	object_dead_robo_manus_ili_begushaya_krisa
; ---------------------------------------------------------------------------

loc_0_AE6C:				; ...
		STA	Objects_cnt2,X
		DEC	Objects_Anim_Ptr,X ; оффсет чтения анимации
		BNE	locret_0_AE77

loc_0_AE74:				; ...
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

locret_0_AE77:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_AE78:				; ...
		JSR	obj_moving_by_speed
		JSR	loc_0_B06B
		TYA
		STA	Objects_TargetID,X
		LDA	#$7A
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------

loc_0_AE88:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	#$7D
		SEC
		SBC	tmp_var_15	;  / Object Counter / various tmp
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------

object_level1_boss_ball:		; ...
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		BNE	loc_0_AE78
		LDA	Objects_X_speed,X
		BPL	loc_0_AE74
		JSR	obj_moving_by_speed
		LDA	#$E8
		JSR	objects_Z_phys?
		JSR	levels_physics_bank5
		DEC	objects_some_anim,X ; some obj X speed
		BNE	loc_0_AE88
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_AE74
		LDA	Objects_X_shadow,X
		SBC	#$18
		CMP	#$D0
		BCS	loc_0_AE74
		JSR	get_free_obj_slot_IDX
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	copy_objects_XYZ
		LDA	#$63
		STA	Objects_TypeID,X
		STA	objects_some_anim,X ; some obj X speed
		LDA	Objects_Xpos_L,X
		SEC
		SBC	Camera_X_pos_l	;  / level_position - on h levels
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	Objects_Ypos_L,X
		SEC
		SBC	Camera_Y_pos_l	;  / level_position - on v levels
		SEC
		SBC	#$18
		STA	Objects_cnt2,X
		JSR	level1_boss_sub
		LDA	#$F
		JSR	get_obj_slot_type_by_ID
		STY	tmp_var_1E
		LDA	Objects_Life,Y
		SEC
		SBC	#$10
		STA	Objects_Life,Y
		BCC	loc_0_AF0B
		LDA	#$60
		STA	Obj_anims_timer,Y ; timer used for gfx frames
		JSR	create_obj_screen_light	; object #$5B
		LDA	#$F0
		STA	Objects_Life,X
		BNE	loc_0_AF20

loc_0_AF0B:				; ...
		LDA	#$A0
		STA	Objects_death_timer,Y ;	undamage time
		LDA	#2
		STA	flag_boss_1
		JSR	create_obj_screen_light	; object #$5B
		LDA	#$46
		JSR	play_sound_ch1_and_ch2
		LDA	#$48
		BNE	loc_0_AF29	; jump

loc_0_AF20:				; ...
		LDA	#$4C
		LDX	#snd_channel1
		JSR	jump_to_play_sound ; A is sound	id, X -	JmpOff (channel	id)
		LDA	#$4A

loc_0_AF29:				; ...
		JSR	play_sound_ch4
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	create_object_4
		LDA	#$40
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		LDY	Objects_TargetID,X
		LDA	flag_boss_1
		ROR	A
		LDA	#5
		BCS	loc_0_AF42
		LDA	#8

loc_0_AF42:				; ...
		JMP	create_scores_obj ; A is score obj index
; ---------------------------------------------------------------------------
		JMP	clear_object_vars ; unused?
; ---------------------------------------------------------------------------

loc_0_AF48:				; ...
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

object_tall_walker_head:		; ...
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		BNE	loc_0_AF60
		LDA	flag_boss_1
		BEQ	loc_0_AF5B
		DEC	objects_some_anim,X ; some obj X speed
		BEQ	loc_0_AF48
		BNE	loc_0_AF60

loc_0_AF5B:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_AF48

loc_0_AF60:				; ...
		LDA	Objects_X_speed,X
		ORA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		ORA	Objects_Z_floor,X
		BEQ	loc_0_AF9F
		LDA	#$FE
		JSR	object_inc_to_Xspeed ; A is speed

loc_0_AF70:				; ...
		JSR	obj_moving_by_speed
		JSR	loc_0_B06B
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		BEQ	loc_0_AF8C
		LDA	flag_boss_1
		CMP	#1
		BNE	loc_0_AF8F
		LDA	#$3C
		STA	objects_some_anim,X ; some obj X speed
		LDA	#$64
		STA	Objects_TypeID,X
		RTS
; ---------------------------------------------------------------------------

loc_0_AF8C:				; ...
		JSR	levels_physics_bank5

loc_0_AF8F:				; ...
		LDA	Level_ID
		CMP	#arctic_caverns
		BEQ	locret_0_AFB5
		JSR	test_Z_speed_and_floor?
		BNE	loc_0_AF9F
		LDA	#$E7
		JSR	object_inc_to_Xspeed ; A is speed

loc_0_AF9F:				; ...
		LDA	flag_boss_1
		CMP	#1
		LDA	#$7A
		BCS	loc_0_AFB2
		LDA	#1
		LDY	Objects_TypeID,X
		CPY	#$1B
		BNE	loc_0_AFB2
		LDA	#$1B

loc_0_AFB2:				; ...
		STA	Objects_gfx_frame,X

locret_0_AFB5:				; ...
		RTS
; ---------------------------------------------------------------------------

object_hodulya_palka:			; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_AF48
		LDA	objects_some_anim,X ; some obj X speed
		CMP	#6
		BCS	loc_0_B001
		LDA	#$FF
		JSR	object_inc_to_Xspeed ; A is speed
		JSR	objects_Z?
		JSR	obj_moving_by_speed
		LDA	#0
		STA	Objects_Z_floor,X
		LDA	Level_ID
		CMP	#intruder_excluder
		BEQ	loc_0_AFED
		JSR	levels_physics_bank5
		JSR	test_Z_speed_and_floor?
		BNE	loc_0_AFE5
		LDA	#$E7
		JSR	object_inc_to_Xspeed ; A is speed

loc_0_AFE5:				; ...
		LDA	Objects_X_speed,X
		ORA	Objects_Z_floor,X
		BEQ	loc_0_B001

loc_0_AFED:				; ...
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		AND	#1
		CLC
		ADC	Obj_various_cnt,X
		CMP	#6
		BNE	loc_0_AFFB
		LDA	#0

loc_0_AFFB:				; ...
		STA	Obj_various_cnt,X
		LDA	Obj_various_cnt,X

loc_0_B001:				; ...
		TAY
		LDA	byte_0_B014,Y
		STA	Objects_gfx_frame,X
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#8
		ORA	byte_0_B01C,Y
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		RTS
; ---------------------------------------------------------------------------
byte_0_B014:	.BYTE  $32, $33, $32, $31, $30,	$31, $AD, $AD ;	...
byte_0_B01C:	.BYTE	 0,   0, $40, $40,   0,	  0,   0, $40 ;	...
; ---------------------------------------------------------------------------

test_Z_speed_and_floor?:		; ...
		LDA	Objects_Z_floor,X
		BNE	loc_0_B054
		LDA	Obj_Z_floor_tmp
		BEQ	loc_0_B054
		LDA	Objects_Z_speed,X
		CMP	#$80
		ROR	A
		EOR	#$FF
		STA	Objects_Z_speed,X
		LDA	Objects_Z_spd_sub,X
		ROR	A
		EOR	#$FF
		STA	Objects_Z_spd_sub,X
		CPX	#2
		BCS	loc_0_B051
		LDA	Objects_Z_speed,X
		CMP	#$80
		ROR	A
		STA	Objects_Z_speed,X
		ROR	Objects_Z_spd_sub,X

loc_0_B051:				; ...
		LDA	#0
		RTS
; ---------------------------------------------------------------------------

loc_0_B054:				; ...
		LDA	#1

locret_0_B056:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_B057:				; ...
		LDA	#6
		LDY	global_var_cnt?
		BPL	loc_0_B05F
		LDA	#8

loc_0_B05F:				; ...
		LDY	#3
		LDX	#$15
		STA	snd_tmp_var_39
		JSR	jump_from_bank0
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		RTS
; ---------------------------------------------------------------------------

loc_0_B06B:				; ...
		LDA	#$B0
		JSR	objects_Z_phys?
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		BEQ	locret_0_B056

loc_0_B075:				; ...
		AND	#$1F
		TAY
		DEY
		LDA	Level_ID
		CMP	#revolution
		BNE	loc_0_B0CA
		CPX	#2
		BCS	loc_0_B0CA
		CPY	#2
		BCC	loc_0_B0CA
		JSR	copy_objects_XYZ
		STY	tmp_var_1F
		LDA	#8
		ORA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		PLA
		PLA
		LDA	Obj_various_cnt,X

wind_hold_frames:
		CMP	#$5F
		BEQ	loc_0_B0A3
		CMP	#$60
		BEQ	loc_0_B0A3
		LDA	#$5E

loc_0_B0A3:				; ...
		STA	player1_obj_wanted_frame,X
		LDY	tmp_var_1F
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		AND	#button_down
		STA	Obj_various_cnt,X
		BEQ	locret_0_B0C9
		STA	Obj_various_cnt,Y
		LDA	#2
		STA	Objects_Z_speed,X
		LDA	#0
		STA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		ORA	#have_stick
		STA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		JMP	stick_hit_ID
; ---------------------------------------------------------------------------

locret_0_B0C9:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_B0CA:				; ...
		LDA	Objects_Z_speed,X
		BMI	loc_0_B0D2
		JMP	copy_objects_Y
; ---------------------------------------------------------------------------

loc_0_B0D2:				; ...
		JSR	copy_objects_XY
		LDA	Objects_TypeID,Y
		EOR	#$17
		BEQ	loc_0_B0FE
		LDA	Level_ID
		CMP	#wookie_hole
		BEQ	loc_0_B0FE
		LDA	Objects_Linker_ID,Y ; флаг/id какой объект меня	прицепил
		CMP	#1
		LDA	#$A
		BCS	loc_0_B0FE
		LDA	Objects_gfx_frame,Y
		CMP	#$11		; hold obj
		BNE	loc_0_B0F6
		LDA	#$22		; height
		BNE	loc_0_B0FE	; jump

loc_0_B0F6:				; ...
		CMP	#$10		; hold obj frame
		LDA	#$21		; height 2
		BCS	loc_0_B0FE
		LDA	#$1C		; height 3 (low	if <$10	($E))

loc_0_B0FE:				; ...
		ADC	Objects_Zpos_L,Y
		STA	Objects_Zpos_L,X
		LDA	Objects_Zpos_H,Y
		ADC	#0
		STA	Objects_Zpos_H,X
		RTS
; ---------------------------------------------------------------------------

loc_0_B10D:				; ...
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

object_rope:				; ...
		LDA	Level_ID
		CMP	#wookie_hole
		BEQ	loc_0_B123
		LDA	#$70
		STA	Obj_anims_timer,X ; timer used for gfx frames
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BPL	loc_0_B123
		JMP	loc_0_B10D
; ---------------------------------------------------------------------------

loc_0_B123:				; ...
		LDA	tmp_var_c8
		BNE	loc_0_B13B
		LDA	Level_ID
		LSR	A
		CMP	#1
		BEQ	loc_0_B13B

loc_0_B12E:				; ...
		LDA	#$27
		STA	Objects_cnt3,X
		DEC	Objects_Xpos_L,X
		LDA	#$10
		JMP	objects_Z_phys?
; ---------------------------------------------------------------------------

loc_0_B13B:				; ...
		LDA	Objects_TypeID,X
		SEC
		SBC	#6
		TAY
		STY	tmp_var_22
		LDA	Objects_TypeID,Y
		BEQ	loc_0_B10D
		LDA	Level_ID
		CMP	#TurboTunnel
		BEQ	loc_0_B12E
		LDA	Objects_death_timer,Y ;	undamage time
		BPL	loc_0_B15D
		LDA	#1
		CLC
		JSR	objects_add_Z?	; A is Z_speed
		JMP	loc_0_B160
; ---------------------------------------------------------------------------

loc_0_B15D:				; ...
		JSR	copy_objects_XYZ

loc_0_B160:				; ...
		LDX	#$18
		LDY	#1
		JMP	jump_from_bank0
; ---------------------------------------------------------------------------

copy_objects_XYZ_and_dir:		; ...
		LDA	Objects_dir,Y	; / angle

set_obj_dir_and_copy_obj_XYZ:		; ...
		STA	Objects_dir,X	; / angle

copy_objects_XYZ:			; ...
		LDA	Objects_Zpos_H,Y
		STA	Objects_Zpos_H,X
		LDA	Objects_Zpos_L,Y
		STA	Objects_Zpos_L,X

copy_objects_XY:			; ...
		LDA	Objects_Xpos_H,Y
		STA	Objects_Xpos_H,X
		LDA	Objects_Xpos_L,Y
		STA	Objects_Xpos_L,X

copy_objects_Y:				; ...
		LDA	Objects_Ypos_H,Y
		STA	Objects_Ypos_H,X
		LDA	Objects_Ypos_L,Y
		STA	Objects_Ypos_L,X
		RTS
; ---------------------------------------------------------------------------
frames_on_koleso:.BYTE $67, $66, $64, $65 ; ...
frames_koleso:	.BYTE $74, $76,	$78, $7A ; ...
flags_koleso:	.BYTE 0, 0, $40, $40	; ...
shadow_koleso:				; ...
		.BYTE 0, 1, 0, 1
; ---------------------------------------------------------------------------

clinger_winger_char_frames:		; ...
		LDA	Objects_death_timer,Y ;	undamage time
		BNE	loc_0_B213
		LDA	Objects_dir,Y	; / angle
		ROL	A
		ROL	A
		ROL	A
		AND	#3
		STA	tmp_var_15	;  / Object Counter / various tmp
		EOR	Objects_TargetID,X
		BEQ	loc_0_B1C8
		INC	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		EOR	#3
		BNE	loc_0_B1C8
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	tmp_var_15	;  / Object Counter / various tmp
		STA	Objects_TargetID,X

loc_0_B1C8:				; ...
		LDA	Objects_TargetID,X
		TAX
		LDA	shadow_koleso,X
		AND	FrameCounter_Even ; счетчик каждого второго кадра
		EOR	Objects_X_shadow,Y
		STA	Objects_X_shadow,Y
		LDA	shadow_koleso,X
		EOR	#1
		AND	FrameCounter_Even ; счетчик каждого второго кадра
		EOR	Objects_Y_shad,Y
		STA	Objects_Y_shad,Y
		LDA	frames_on_koleso,X
		STA	player1_obj_wanted_frame,Y
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$BF
		ORA	flags_koleso,X
		STA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	Objects_TargetID,Y
		BNE	loc_0_B208
		LDA	FrameCounter
		SBC	#$64
		JSR	obj_unjk_cnt_add__
		LDA	Obj_various_cnt,X
		ROL	A
		JMP	loc_0_B213
; ---------------------------------------------------------------------------

loc_0_B208:				; ...
		LDA	Objects_X_speed,Y
		CMP	#$F0
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		BCS	loc_0_B212
		ROR	A

loc_0_B212:				; ...
		ROR	A

loc_0_B213:				; ...
		LDX	tmp_var_15	;  / Object Counter / various tmp
		LDA	flags_koleso,X
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	frames_koleso,X
		ADC	#0
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		STA	Objects_gfx_frame,X
		LDA	tmp_var_15	;  / Object Counter / various tmp
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		RTS
; ---------------------------------------------------------------------------

clinger_winger_score:			; ...
		JSR	add_scores_for_bikes
		JMP	clinger_winger_char_frames
; ---------------------------------------------------------------------------

add_scores_for_bikes:			; ...
		LDA	FrameCounter
		AND	#$F
		BNE	locret_0_B241
		LDA	#0
		JSR	add_scores	; Y player ID, A - scores tbl index
		LDY	tmp_var_15	;  / Object Counter / various tmp
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		INC	update_ui_flag

locret_0_B241:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_B242:				; ...
		JSR	sub_0_88EF
		CMP	#$2C
		BNE	loc_0_B25B
		LDA	#2
		AND	FrameCounter_Even ; счетчик каждого второго кадра
		LDY	turbotunnel_X_flag ; =1, if camH=$DD
		BNE	loc_0_B252
		LSR	A

loc_0_B252:				; ...
		LDY	tmp_var_15	;  / Object Counter / various tmp
		CLC
		ADC	Objects_Z_floor,Y
		STA	Objects_Z_floor,Y

loc_0_B25B:				; ...
		LDY	tmp_var_15	;  / Object Counter / various tmp
		LDA	Level_ID
		CMP	#clinger_winger
		BEQ	clinger_winger_score
		LDA	bikes_speed
		ORA	bikes_speed_sub
		BEQ	loc_0_B26E
		JSR	add_scores_for_bikes
		LDA	#1

loc_0_B26E:				; ...
		ORA	stop_scroll_flag
		BNE	loc_0_B285
		LDA	Objects_Xpos_L,X
		SEC
		SBC	Camera_X_pos_l	;  / level_position - on h levels
		CMP	#$60
		BCS	loc_0_B285
		LDX	tmp_var_15	;  / Object Counter / various tmp
		LDA	#$60
		JSR	object_X_by_camera
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_0_B285:				; ...
		LDA	Level_ID
		CMP	#SurfCity
		BNE	locret_0_B2C9
		STA	cnt_unk_pl1,Y	; surf city
		LDA	Objects_death_timer,Y ;	undamage time
		BNE	loc_0_B2C6
		LDA	Objects_Xpos_H,X
		CMP	#$24
		BNE	loc_0_B2B0
		LDA	Objects_Zpos_L,X
		CMP	#$50
		BCS	loc_0_B2C6
		LDA	#0
		STA	Objects_dir,Y	; / angle
		STA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	#3
		STA	Objects_Z_speed,Y
		BNE	loc_0_B2C6

loc_0_B2B0:				; ...
		CMP	#$20
		BNE	loc_0_B2C6
		LDA	#$60
		CMP	Objects_Xpos_L,Y
		BCS	loc_0_B2C6
		STA	Objects_Xpos_L,Y
		LDA	Objects_X_shadow,Y
		BMI	loc_0_B2C6
		JSR	loc_0_B2CA

loc_0_B2C6:				; ...
		JMP	bike_frame_id
; ---------------------------------------------------------------------------

locret_0_B2C9:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_B2CA:				; ...
		LDA	#0
		STA	Objects_LinkedObj_ID,Y ; флаг/id присоединённого объекта
		STA	Objects_dir,Y	; / angle
		STA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	#$E0
		STA	Objects_X_speed,Y
		STA	Obj_anims_timer,X ; timer used for gfx frames
		LDA	#5
		STA	Objects_Z_speed,Y
		RTS
; ---------------------------------------------------------------------------

loc_0_B2E3:				; ...
		JMP	loc_0_B242
; ---------------------------------------------------------------------------

object_bike:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	loc_0_B2FD
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_B322
		LDA	Level_ID
		CMP	#clinger_winger
		BNE	bike_frame_id
		LDA	#4
		JSR	obj_increment_to_X ; A is X_low
		BNE	bike_frame_id

loc_0_B2FD:				; ...
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		CMP	#$40
		BCS	loc_0_B2E3
		LDA	#$5E
		STA	Objects_AnimID,X ; номер движения для запуска
		LDA	#1
		JSR	set_on_transport_
		LDA	#0
		STA	Objects_AnimID,X ; номер движения для запуска
		LDA	Level_ID
		CMP	#clinger_winger
		BEQ	bike_frame_id
		CMP	#SurfCity
		BNE	loc_0_B325
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BPL	loc_0_B325

loc_0_B322:				; ...
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

loc_0_B325:				; ...
		LDA	Objects_Xpos_L,X
		SEC
		SBC	Camera_X_pos_l	;  / level_position - on h levels
		BMI	bike_frame_id
		LDA	#$1E
		STA	camera_lock_cnt

bike_frame_id:				; ...
		LDA	#$2A
		LDY	Level_ID
		CPY	#TurboTunnel
		BEQ	loc_0_B347
		LDA	#$D2
		CPY	#SurfCity
		BEQ	loc_0_B347
		LDA	#$74
		CPY	#clinger_winger
		BEQ	loc_0_B347
		LDA	#$8B

loc_0_B347:				; ...
		STA	Objects_gfx_frame,X

locret_0_B34A:				; ...
		RTS
; ---------------------------------------------------------------------------
byte_0_B34B:	.BYTE $F		; ...
byte_0_B34C:	.BYTE 0, 0, $10, $10, $20, $20,	$30, $30, $20, $20, $30, $10, $20, 0, $10 ; ...
; ---------------------------------------------------------------------------

object_set_palette:			; ...
		LDA	pal_reduce_value ; dec to color	value
		BNE	locret_0_B34A
		LDA	Objects_Zpos_L,X
		BEQ	loc_0_B368
		DEC	Objects_Zpos_L,X

locret_0_B367:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_B368:				; ...
		LDA	upd_gfx_flag2	; what to update - attrib,pal or someelse
		CMP	#$80
		BNE	locret_0_B367
		JSR	obj_set_palette_sub
		LDA	objects_some_anim,X ; some obj X speed
		STA	some_anim_tmp?
		STY	tmp_var_15	;  / Object Counter / various tmp
		LDA	#8
		STA	Objects_Zpos_L,X
		LDA	Level_ID
		CMP	#SurfCity
		BNE	loc_0_B398
		ROL	some_anim_tmp?
		BCC	loc_0_B3D2
		LDA	Objects_Xpos_L,X
		PHA
		LDA	Objects_Ypos_H,X
		STA	Objects_Xpos_L,X
		PLA
		STA	Objects_Ypos_H,X
		JMP	loc_0_B3D5
; ---------------------------------------------------------------------------

loc_0_B398:				; ...
		CMP	#$A
		BNE	loc_0_B3D2
		INC	Objects_cnt2,X
		LDA	Objects_cnt2,X
		AND	#$E
		TAY
		BNE	loc_0_B3B7
		LDA	Objects_cnt3,X
		CLC
		ADC	#1

loc_0_B3AD:				; ...
		STA	Objects_cnt3,X
		LDA	Objects_cnt3,X
		EOR	#$D
		BEQ	loc_0_B3AD

loc_0_B3B7:				; ...
		LDA	Objects_cnt3,X
		ORA	byte_0_B34B,Y
		STA	Objects_Xpos_L,X
		LDA	#$20
		CPY	#8
		BEQ	loc_0_B3CC
		LDA	Objects_cnt3,X
		ORA	byte_0_B34C,Y

loc_0_B3CC:				; ...
		STA	Objects_Ypos_H,X
		JMP	loc_0_B3D5
; ---------------------------------------------------------------------------

loc_0_B3D2:				; ...
		JSR	clear_object_vars ; remove object

loc_0_B3D5:				; ...
		LDY	tmp_var_15	;  / Object Counter / various tmp

loc_0_B3D7:				; ...
		TYA
		AND	#$10

loc_0_B3DA:				; ...
		STA	pal_vram_upd_off ; BKG=$00, SPR=$10
		LDA	#$84
		STA	upd_gfx_flag2	; what to update - attrib,pal or someelse
		RTS
; ---------------------------------------------------------------------------

obj_set_palette_sub:			; ...
		LDY	Objects_Zpos_H,X
		LDA	Objects_Xpos_H,X
		STA	palette_ram+1,Y
		LDA	Objects_Xpos_L,X
		STA	palette_ram+2,Y
		LDA	Objects_Ypos_H,X
		STA	palette_ram+3,Y
		RTS
; ---------------------------------------------------------------------------

object_screen_light:			; ...
		INC	Objects_cnt2,X
		LDA	Objects_cnt2,X
		LSR	A
		LDY	Objects_Life,X
		BMI	loc_0_B404
		LSR	A

loc_0_B404:				; ...
		TAX
		LDY	#$1F

loc_0_B407:				; ...
		LDA	level_ram2+$10,Y
		CMP	#$F
		BNE	loc_0_B414
		CPX	#$B
		BCS	loc_0_B414
		LDA	#0

loc_0_B414:				; ...
		CLC
		ADC	byte_0_B448,X
		BCS	loc_0_B455
		CMP	#$40
		BCC	loc_0_B422
		LDA	#$30
		BNE	loc_0_B422

loc_0_B422:				; ...
		STA	palette_ram,Y
		CPY	#$11
		BCC	loc_0_B436
		LDA	level_ram2+$10,Y
		SBC	byte_0_B448,X
		BCS	loc_0_B433
		LDA	#$F

loc_0_B433:				; ...
		STA	palette_ram,Y

loc_0_B436:				; ...
		DEY
		BPL	loc_0_B407
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	Objects_cnt2,X
		AND	#1
		ASL	A
		ASL	A
		ASL	A
		ASL	A
		TAY
		JMP	loc_0_B3D7
; ---------------------------------------------------------------------------
byte_0_B448:	.BYTE $40, 0, $40, 0, $40, $30,	$30, $20, $20, $10, $10, 0, $FF	; ...
; ---------------------------------------------------------------------------

loc_0_B455:				; ...
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

object_rat_race_palette_fade:		; ...
		LDX	#$1E
		LDY	#2
		JSR	jump_from_bank0
		LDA	Objects_TypeID,X
		BEQ	loc_0_B455
		RTS
; ---------------------------------------------------------------------------

object_infernorace_animation:		; ...
		LDA	FrameCounter
		AND	#3
		ORA	pal_reduce_value ; dec to color	value
		BNE	loc_0_B495
		LDA	Level_ID
		CMP	#volkmire_inferno
		BNE	loc_0_B482
		LDA	upd_gfx_flag2	; what to update - attrib,pal or someelse
		EOR	#$80
		BNE	loc_0_B482
		JSR	loc_0_B3DA
		LDA	palette_ram+1
		EOR	#$10
		STA	palette_ram+1

loc_0_B482:				; ...
		LDY	Objects_cnt2,X
		BEQ	loc_0_B48A
		DEC	Objects_cnt2,X

loc_0_B48A:				; ...
		LDA	RandomValue_1
		AND	#$1F
		BNE	loc_0_B495
		LDA	#9
		STA	Objects_cnt2,X

loc_0_B495:				; ...
		LDA	Objects_Zpos_L,X
		ORA	Objects_Z_sub,X
		ORA	Obj_various_cnt,X
		BNE	loc_0_B4B5
		INC	Obj_various_cnt,X
		LDA	#0
		STA	Objects_Z_speed,X
		STA	Objects_Z_spd_sub,X
		LDA	#4
		STA	Objects_cnt3,X
		EOR	#$FF
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации

loc_0_B4B5:				; ...
		LDA	Objects_Zpos_L,X
		CMP	#$30
		LDA	Objects_cnt3,X
		BCC	loc_0_B4C7
		LDA	#0
		STA	Obj_various_cnt,X
		LDA	Objects_Anim_Ptr,X ; оффсет чтения анимации

loc_0_B4C7:				; ...
		JSR	objects_Z_phys?
		LDY	gfx_buff_off
		INY
		CPY	#$4C
		BCC	loc_0_B4D3
		LDY	#0

loc_0_B4D3:				; ...
		STY	gfx_buff_off
		LDA	Objects_Zpos_L,X
		STA	gfx_buff_adr_h,Y
		RTS
; ---------------------------------------------------------------------------

loc_0_B4DC:				; ...
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

object_muhi:				; ...
		LDA	Objects_cnt2,X
		BNE	loc_0_B4F0
		LDX	#$18
		LDY	#7
		JSR	jump_from_bank0
		LDA	Objects_cnt2,X
		BEQ	loc_0_B4DC

loc_0_B4F0:				; ...
		JSR	obj_moving_by_speed
		DEC	Objects_cnt2,X
		LDA	Objects_cnt3,X
		CLC
		ADC	Objects_dir,X	; / angle
		STA	Objects_dir,X	; / angle
		JSR	obj_set_flags_by_dir
		LDA	Objects_AnimID,X ; номер движения для запуска
		JSR	objects_Z_phys?
		LDA	Objects_Life,X
		BMI	loc_0_B511
		JSR	levels_physics_bank5

loc_0_B511:				; ...
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		AND	#2
		LSR	A
		ADC	#$D
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------
byte_0_B51C:	.BYTE $15, $14,	$20, $28 ; ...
; ---------------------------------------------------------------------------

locret_0_B520:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_B521:				; ...
		LDA	upd_gfx_flag2	; what to update - attrib,pal or someelse
		CMP	#$80
		BNE	locret_0_B520
		LDA	Objects_Ypos_L,X
		AND	#7
		TAY
		LDA	byte_0_B51C,Y
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDX	#$C
		LDY	#5
		JSR	jump_from_bank0
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDY	#4
		LDA	#$30
		JSR	loc_0_B571
		LDA	#0
		STA	objects_some_anim,X ; some obj X speed
		LDA	#$30
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	Objects_TypeID,X
		CMP	#8
		BNE	locret_0_B562

create_obj_delete:			; ...
		LDA	#4
		STA	Objects_TypeID,X
		LDA	#3
		STA	Objects_cnt3,X
		LDA	#$E
		STA	Objects_cnt2,X

locret_0_B562:				; ...
		RTS
; ---------------------------------------------------------------------------

some_for_bank3:				; ...
		LDY	#6
		LDA	#$1A
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	loc_0_B571
		LDA	#3
		STA	previous_bankID
		RTS
; ---------------------------------------------------------------------------

loc_0_B571:				; ...
		STY	bkg_upd_buff_cnt ; X * 4 times
		STA	wait_after_bkg_upd_cnt
		LDA	Objects_Xpos_L,X
		CPY	#6
		BEQ	loc_0_B57E
		AND	#$E0

loc_0_B57E:				; ...
		SEC
		SBC	#8
		STA	tmp_var_19
		LDA	Objects_Ypos_L,X
		SEC
		SBC	Objects_Zpos_L,X
		SEC
		SBC	Camera_Y_pos_l	;  / level_position - on v levels
		LDX	#$F0
		JSR	sub_0_875E
		LDY	#3

loc_0_B594:				; ...
		LDA	tmp_var_9A
		STA	bkg_upd_buff2a_adr_h,Y
		LDA	tmp_var_15	;  / Object Counter / various tmp
		STA	bkg_upd_buff2a_adr_l,Y
		CPY	#1
		BNE	loc_0_B5AA
		LDY	bkg_upd_buff_cnt ; X * 4 times
		CPY	#6
		LDY	#1
		BCS	loc_0_B5C7

loc_0_B5AA:				; ...
		CLC
		ADC	#$20
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	tmp_var_9A
		ADC	#0
		STA	tmp_var_9A
		CMP	#$23
		BNE	loc_0_B5C7
		LDA	tmp_var_15	;  / Object Counter / various tmp
		CMP	#$C0
		BCC	loc_0_B5C7
		AND	#$1F
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	#$20
		STA	tmp_var_9A

loc_0_B5C7:				; ...
		DEY
		BPL	loc_0_B594
		LDA	#$85
		STA	upd_gfx_flag2	; what to update - attrib,pal or someelse
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		RTS
; ---------------------------------------------------------------------------

obj_wall_destroy:			; ...
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BNE	loc_0_B5DB
		LDA	#$A
		JSR	play_sound_ch4

loc_0_B5DB:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		CMP	#1
		BNE	loc_0_B5E5
		JMP	loc_0_B521
; ---------------------------------------------------------------------------

loc_0_B5E5:				; ...
		LDA	#0
		STA	Objects_gfx_frame,X
		STA	Objects_Z_floor,X
		LDA	FrameCounter
		ROR	A
		BCC	loc_0_B5F5
		JMP	locret_0_B562
; ---------------------------------------------------------------------------

loc_0_B5F5:				; ...
		DEC	objects_some_anim,X ; some obj X speed
		RTS
; ---------------------------------------------------------------------------

object_psyko_Pig_ambush:		; ...
		LDA	#$1E
		STA	camera_lock_cnt
		LDA	objects_some_anim,X ; some obj X speed
		BEQ	loc_0_B610
		CMP	#1
		BNE	loc_0_B5E5
		LDA	#$10
		LDX	#snd_channel1
		JSR	play_sound	; A is sound id, X - jmp_off (ch ID)
		JMP	loc_0_B521
; ---------------------------------------------------------------------------

loc_0_B610:				; ...
		LDA	FrameCounter
		AND	#3
		BNE	loc_0_B619
		INC	Objects_cnt2,X

loc_0_B619:				; ...
		LDY	Objects_cnt2,X
		LDA	byte_0_B62D,Y
		BEQ	loc_0_B625
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------

loc_0_B625:				; ...
		LDA	#$B
		STA	Objects_TypeID,X
		JMP	set_target_random
; ---------------------------------------------------------------------------
byte_0_B62D:	.BYTE $44, $45,	$46, $47, $48, $49, $49, $48, $47, $46,	$45, $44, 0 ; ...
; ---------------------------------------------------------------------------

object_fireball:			; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ORA	Objects_death_timer,X ;	undamage time
		BMI	loc_0_B698
		LDY	Level_ID
		CPY	#volkmire_inferno
		BEQ	loc_0_B655
		JSR	obj_add_Z_by_Zspd?
		LDA	Objects_dir,X	; / angle
		AND	#$80
		TAY
		BEQ	loc_0_B655
		LDY	#2

loc_0_B655:				; ...
		LDA	byte_0_B691,Y
		CLC
		ADC	Objects_Xpos_L,X
		STA	Objects_Xpos_L,X
		LDA	byte_0_B690,Y
		ADC	Objects_Xpos_H,X
		STA	Objects_Xpos_H,X
		LDA	Level_ID
		CMP	#volkmire_inferno
		BEQ	loc_0_B67F
		JSR	levels_physics_bank5
		LDA	some_lvl_flag_cnt ; 0-air,1-h_surf,2-right,3-left naklon
		BMI	loc_0_B67A
		LDA	Objects_Z_floor,X
		BNE	loc_0_B67F

loc_0_B67A:				; ...
		DEC	some_counter
		JMP	create_obj_C
; ---------------------------------------------------------------------------

loc_0_B67F:				; ...
		LDA	Level_ID
		CMP	#SurfCity
		BEQ	loc_0_B68A
		JSR	loc_0_FB04
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_0_B68A:				; ...
		LDA	#$3F
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------
byte_0_B690:	.BYTE 0			; ...
byte_0_B691:	.BYTE 5, $FF, $FB, 0, 0, 0, $10	; ...
; ---------------------------------------------------------------------------

loc_0_B698:				; ...
		DEC	some_counter
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

object_turbo_tunnel_falling_obstacle:	; ...
		LDY	#$60
		LDA	Objects_Z_floor,X
		BEQ	loc_0_B705
		JSR	obj_inc_to_X_by_
		JSR	objects_Z?
		JSR	levels_physics_bank5
		LDA	Objects_Z_floor,X
		BNE	loc_0_B6B9
		LDA	#$83
		LDX	#snd_channel1
		JSR	play_sound	; A is sound id, X - jmp_off (ch ID)

loc_0_B6B9:				; ...
		JMP	loc_0_B74B
; ---------------------------------------------------------------------------

object_checkpoint_part1:		; ...
		LDY	Objects_X_speed,X
		BEQ	loc_0_B705
		JSR	obj_moving_by_speed
		JSR	objects_Z?
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BPL	locret_0_B6CF
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

locret_0_B6CF:				; ...
		RTS
; ---------------------------------------------------------------------------

object_turbo_tunnel_obstacle_up:	; ...
		INC	tunnel_unk_p1
		INC	tunnel_unk_p2

object_turbo_tunnel_obstacle:		; ...
		LDA	Objects_cnt2,X
		CMP	objects_some_anim,X ; some obj X speed
		BCS	loc_0_B6F0
		INC	Objects_cnt2,X
		AND	#8
		EOR	#8
		STA	Objects_Z_floor,X
		BEQ	loc_0_B75D
		LDA	#$EC
		JSR	object_X_by_camera
		JMP	loc_0_B727
; ---------------------------------------------------------------------------

loc_0_B6F0:				; ...
		LDY	Objects_Zpos_L,X
		LDA	Objects_cnt2,X
		BMI	loc_0_B705
		LDA	#$8B
		JSR	play_sound_ch4
		LDA	#$FF
		STA	Objects_cnt2,X
		JSR	object_X_by_camera

loc_0_B705:				; ...
		CPY	#$3F
		BNE	loc_0_B71F
		LDA	Objects_Life,X
		AND	#$F0
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		ADC	bikes_speed
		ADC	Objects_Xpos_L,X
		STA	Objects_Xpos_L,X
		BCC	loc_0_B71F
		INC	Objects_Xpos_H,X

loc_0_B71F:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_B766
		JSR	bikes_check_point_sub

loc_0_B727:				; ...
		LDA	Level_ID
		EOR	#SurfCity
		BNE	loc_0_B73B
		STA	Objects_Z_floor,X
		LDA	#$8E
		LDY	Objects_TypeID,X
		CPY	#$26
		ADC	#0		; #$8E or #$8F
		BNE	loc_0_B75D	; jump

loc_0_B73B:				; ...
		LDA	Objects_TypeID,X
		EOR	#$2A
		BEQ	loc_0_B748
		LDA	Objects_Zpos_L,X
		SEC
		SBC	#$40

loc_0_B748:				; ...
		STA	Objects_Z_floor,X

loc_0_B74B:				; ...
		LDY	Objects_TypeID,X
		LDA	byte_0_B769 - $23,Y
		LDY	Level_ID
		CMP	#$4E
		BNE	loc_0_B75D
		CPY	#volkmire_inferno
		BNE	loc_0_B75D
		LDA	#$CF

loc_0_B75D:				; ...
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------

object_checkpoint_part2:		; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BPL	loc_0_B74B

loc_0_B766:				; ...
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------
byte_0_B769:	.BYTE $4A, $4B,	$4C, $4E, $4D, 0, $56, $57, $58	; ...
; ---------------------------------------------------------------------------

_locret_0_B88E:				; ...
		JMP	locret_0_B88E
; ---------------------------------------------------------------------------

loc_0_B775:				; ...
		JMP	loc_0_B829
; ---------------------------------------------------------------------------

bikes_check_point_sub:			; ...
		JSR	load_PL_1_or_2	; Записать в Y id игрока 0 или 1. (четн/нечет кадр)
		BEQ	_locret_0_B88E
		LDA	stop_scroll_flag
		BNE	_locret_0_B88E
		LDA	Objects_death_timer,Y ;	undamage time
		BMI	_locret_0_B88E
		LDA	Objects_TypeID,X
		CMP	#$24
		BEQ	loc_0_B775
		STY	tmp_var_15	;  / Object Counter / various tmp
		TAY
		LDA	byte_0_B8E4 - $23,Y
		STA	tmp_var_1F
		LDA	byte_0_B8ED - $23,Y
		STA	tmp_var_20
		LDA	byte_0_B8F6 - $23,Y
		STA	tmp_var_21
		LDY	tmp_var_15	;  / Object Counter / various tmp
		LDA	stop_scroll_flag
		BNE	_locret_0_B88E
		LDA	tmp_var_21
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	_locret_0_B88E
		LDA	tmp_var_20
		JSR	obj_compare_Y?
		BNE	_locret_0_B88E
		LDA	Objects_Zpos_L,Y
		SEC
		SBC	Objects_Zpos_L,X
		CMP	tmp_var_1F
		BCS	_locret_0_B88E
		LDA	Objects_TypeID,X
		CMP	#$26
		BNE	sub_0_B802
		LDA	Objects_LinkedObj_ID,Y ; флаг/id присоединённого объекта
		AND	#$40
		BEQ	_locret_0_B88E
		LDA	#$FE
		STA	Objects_X_speed,X
		LDA	#4
		STA	Objects_Z_speed,X
		LDA	bikes_speed
		CMP	#4
		BCC	loc_0_B7E0
		LDA	#2		; reduce bike speed on checkpoint
		STA	bikes_speed

loc_0_B7E0:				; ...
		LDA	LevelCfgAdr_L	; текущий адрес	рома для чтения	объектов уровня
		SEC			; current adress-$b
		SBC	#$B
		STA	Level_CfgAdr_new ; адрес конфига уровня	от чекпоинта
		LDA	LevelCfgAdr_H
		SBC	#0
		STA	Level_CfgAdr_newH
		LDA	#6
		LDY	tmp_var_15	;  / Object Counter / various tmp
		JSR	create_scores_obj ; A is score obj index

play_sound_56:				; ...
		LDA	#$56

play_sound_ch1_and_ch2:			; ...
		PHA
		LDX	#snd_channel1
		JSR	jump_to_play_sound ; A is sound	id, X -	JmpOff (channel	id)
		PLA

play_sound_ch2:				; ...
		LDX	#snd_channel2
		JMP	play_sound	; A is sound id, X - jmp_off (ch ID)
; End of function play_sound_89


; =============== S U B	R O U T	I N E =======================================


sub_0_B802:				; ...
		LDA	Objects_Xpos_L,Y
		ADC	#$13
		STA	Objects_Xpos_L,X
		LDA	Objects_Xpos_H,Y
		ADC	#0
		STA	Objects_Xpos_H,X
		LDA	Objects_TypeID,X
		TAX
		JSR	sub_0_B8D9
		LDA	#0
		STA	bikes_speed_sub

reset_bikes_speed:
		STA	bikes_speed
		LDA	Objects_TypeID,X
		CMP	#$2B
		BNE	locret_0_B88E
		JMP	create_obj_delete
; ---------------------------------------------------------------------------

loc_0_B829:				; ...
		TYA
		CLC
		ADC	#1
		AND	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BNE	locret_0_B88E
		LDA	#$18
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	locret_0_B88E
		LDA	#$E
		JSR	obj_compare_Y?
		BNE	locret_0_B88E
		LDA	#$14
		JSR	object_compare_Z
		BNE	locret_0_B88E
		LDA	Objects_Zpos_L,X
		ADC	#8
		STA	Objects_Zpos_L,Y
		TYA
		CLC
		ADC	#1
		ORA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	Objects_Life,X
		LSR	A
		LSR	A
		LSR	A
		AND	#$1E
		STA	tmp_var_15	;  / Object Counter / various tmp
		LSR	A
		ADC	tmp_var_15	;  / Object Counter / various tmp
		TAX
		LDA	Z_speed_table,X
		STA	Objects_Z_speed,Y
		LDA	byte_0_B890,X
		STA	Objects_Z_spd_sub,Y
		LDA	#$30
		STA	players_obj_un2,Y
		LDA	byte_0_B891,X
		STA	players_obj_un3,Y
		LDA	Objects_Z_floor,Y
		CLC
		ADC	#1
		STA	Objects_Z_floor,Y
		LDA	#$5A		; tramplin jump	snd
		LDX	#snd_channel1
		JSR	play_sound	; A is sound id, X - jmp_off (ch ID)

locret_0_B88E:				; ...
		RTS
; End of function sub_0_B802

; ---------------------------------------------------------------------------
Z_speed_table:	.BYTE 2			; ...
byte_0_B890:	.BYTE $80		; ...
byte_0_B891:	.BYTE 0			; ...
		.BYTE	 3, $E0,   0
		.BYTE	 1, $80, $C0
		.BYTE	 1, $C0, $C0
		.BYTE	 2, $20, $C0
		.BYTE	 2, $80, $C0
		.BYTE	 5, $80,   0
		.BYTE	 6, $80,   0
		.BYTE	 7, $80,   0
		.BYTE	 8, $80,   0

; =============== S U B	R O U T	I N E =======================================


sub_0_B8AD:				; ...
		LDA	byte_0_B8E4 - 8,X
		STA	Obj_anims_timer,Y ; timer used for gfx frames
		STA	players_obj_unk,Y
		LDA	byte_0_B8E5,X
		STA	Objects_X_speed,Y
		LDA	byte_0_B8EE,X
		STA	Objects_Z_speed,Y
		LDA	#0
		STA	Objects_dir,Y	; / angle
		STA	Objects_Life,Y
		INC	update_ui_flag
		LDA	#$C1
		STA	Objects_death_timer,Y ;	undamage time
		JSR	play_sound_89

stop_bikes_scroll:
		LDA	#$80
		STA	stop_scroll_flag
		RTS
; End of function sub_0_B8AD


; =============== S U B	R O U T	I N E =======================================


sub_0_B8D9:				; ...
		JSR	sub_0_B8AD
		LDA	#$A
		JSR	play_sound_ch4
		LDY	tmp_var_15	;  / Object Counter / various tmp
		RTS
; End of function sub_0_B8D9

; ---------------------------------------------------------------------------
byte_0_B8E4:	.BYTE $23		; ...
byte_0_B8E5:	.BYTE $FF, $16,	$FF, $23, $14, $14, $24, $14 ; ...
byte_0_B8ED:	.BYTE $C		; ...
byte_0_B8EE:	.BYTE $FF, $16,	$40, $C, $A, $C, $16, $A ; ...
byte_0_B8F6:	.BYTE	$D, $10, $10, $18, $10,	$20, $10, $10, $10, $E0,   0, $C0 ; ...
		.BYTE	 0,   0, $C1, $C0, $D0,	$E0,   0,   0, $FF,   0,   0, $FF
		.BYTE  $FF,   0,   0,	1,   0,	  4,   0,   0,	 3,   6,   0,	0
; ---------------------------------------------------------------------------

loc_0_B91A:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


obj_inc_to_X_by_:			; ...
		LDA	objects_some_anim,X ; some obj X speed
; End of function obj_inc_to_X_by_


; =============== S U B	R O U T	I N E =======================================

; A is X_low

obj_increment_to_X:			; ...
		CLC
		ADC	Objects_Xpos_L,X
		STA	Objects_Xpos_L,X
		BCC	locret_0_B92C
		INC	Objects_Xpos_H,X

locret_0_B92C:				; ...
		RTS
; End of function obj_increment_to_X


; =============== S U B	R O U T	I N E =======================================


object_turbo_tunnel_rat_rocket:		; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_B91A
		JSR	obj_inc_to_X_by_
		LDA	Objects_gfx_frame,X
		BNE	loc_0_B93F
		LDA	#$6E
		JSR	play_sound_ch4

loc_0_B93F:				; ...
		LDA	#$55
		STA	Objects_gfx_frame,X
		LDA	Objects_cnt2,X
		BNE	loc_0_B970
		LDA	Objects_Xpos_L,X
		SEC
		SBC	Camera_X_pos_l	;  / level_position - on h levels
		CMP	#$E0
		BCC	loc_0_B970
		JSR	play_sound_87
		JSR	get_free_obj_slot_IDX
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions

loc_0_B95B:
		JSR	copy_objects_XYZ
		LDA	#$29
		STA	Objects_TypeID,X
		LDA	#8
		STA	objects_some_anim,X ; some obj X speed
		LDA	Objects_Z_floor,Y
		STA	Objects_Z_floor,X
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_0_B970:				; ...
		JSR	sub_0_B976
		JMP	levels_physics_bank5
; End of function object_turbo_tunnel_rat_rocket


; =============== S U B	R O U T	I N E =======================================


sub_0_B976:				; ...
		LDY	#$E3

loc_0_B978:				; ...
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		INC	Objects_various_flags,X	; для пушек ID прицепленного объекта
		CLC
		ADC	#8
		AND	#$10
		CMP	#$10
		JMP	loc_0_AAF8
; End of function sub_0_B976


; =============== S U B	R O U T	I N E =======================================


object_turbo_tunnel_fly_obstacle:	; ...
		JSR	obj_inc_to_X_by_
		LDA	Objects_cnt3,X
		SEC
		ADC	Objects_Ypos_L,X
		STA	Objects_Ypos_L,X
		CMP	#$C0
		BEQ	loc_0_B99D
		CMP	#$E6
		BNE	loc_0_B9A5

loc_0_B99D:				; ...
		LDA	Objects_cnt3,X
		EOR	#$FE
		STA	Objects_cnt3,X

loc_0_B9A5:				; ...
		JSR	loc_0_AAF1
		JMP	loc_0_B705
; End of function object_turbo_tunnel_fly_obstacle

; ---------------------------------------------------------------------------

loc_0_B9AB:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_turbo_tunnel_balls:		; ...
		LDA	bikes_speed
		JSR	obj_increment_to_X ; A is X_low
		JSR	obj_moving_by_speed
		LDA	#$D0
		JSR	objects_Z_phys?
		DEC	Objects_cnt2,X
		BEQ	loc_0_B9AB
		RTS
; End of function object_turbo_tunnel_balls


; =============== S U B	R O U T	I N E =======================================


object_saturn_toadtrap:			; ...
		LDA	Objects_cnt2,X
		BNE	loc_0_B9DA
		LDA	Objects_Xpos_L,X
		STA	Objects_cnt2,X
		LDA	Objects_Zpos_L,X
		STA	Objects_cnt3,X
		JSR	obj_set_dir_by_Xlow
		LDA	#$E8
		JSR	objects_add_Z?	; A is Z_speed

loc_0_B9DA:				; ...
		LDA	Objects_cnt3,X
		EOR	#$FF
		SEC
		SBC	Camera_Y_pos_l	;  / level_position - on v levels
		STA	Objects_Y_shad,X
		CMP	#$40
		BCS	loc_0_B9F2
		LDA	Objects_death_timer,X ;	undamage time
		BNE	loc_0_B9F2
		LDA	#$1E
		STA	camera_lock_cnt

loc_0_B9F2:				; ...
		LDA	#$5D
		STA	Objects_gfx_frame,X
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_BA44
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_B9AB
		LDA	Objects_cnt2,X
		SBC	Objects_Xpos_L,X
		STA	tmp_var_15	;  / Object Counter / various tmp
		ADC	#$32
		CMP	#$64
		BCS	loc_0_BA1E
		DEC	Objects_cnt2,X
		ASL	tmp_var_15	;  / Object Counter / various tmp
		BCC	loc_0_BA2C
		INC	Objects_cnt2,X
		INC	Objects_cnt2,X
		BCS	loc_0_BA2C

loc_0_BA1E:				; ...
		LDA	#$30
		ASL	tmp_var_15	;  / Object Counter / various tmp
		BCC	loc_0_BA26
		LDA	#$CF

loc_0_BA26:				; ...
		ADC	Objects_Xpos_L,X
		STA	Objects_cnt2,X

loc_0_BA2C:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		CLC
		ADC	Objects_Zpos_L,X
		STA	Objects_cnt3,X

toadstrap_fall:				; ...
		LDA	#$FC
		JSR	object_inc_to_Xspeed ; A is speed
		JSR	obj_moving_by_speed
		JSR	objects_Z?

loc_0_BA41:				; ...
		JMP	loc_0_9631
; ---------------------------------------------------------------------------

loc_0_BA44:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	loc_0_BA7B
		LDA	Objects_cnt3,X
		SEC
		SBC	Objects_Zpos_L,X
		BMI	loc_0_BA5B
		CMP	#$40
		BCC	loc_0_BA5B
		LDA	#1
		STA	Objects_Z_speed,X

loc_0_BA5B:				; ...
		LDA	#$1E
		STA	camera_lock_cnt
		INC	Objects_gfx_frame,X
		DEC	Obj_anims_timer,X ; timer used for gfx frames
		LDA	Objects_cnt2,X
		SEC
		SBC	Objects_Xpos_L,X
		AND	#$80
		STA	Objects_dir,X	; / angle
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		CMP	#$24
		BCC	toadstrap_fall
		JMP	loc_0_BA41
; ---------------------------------------------------------------------------

loc_0_BA7B:				; ...
		LDY	#1

loc_0_BA7D:				; ...
		STY	tmp_var_16
		LDA	Lives_Player1,Y	; кол-во жизней	(сердечек)
		BMI	loc_0_BAC7
		LDA	#$14
		JSR	object_compare_Z
		BEQ	loc_0_BA9E
		JSR	random
		AND	#$F
		ORA	Objects_AnimID,X ; номер движения для запуска
		BNE	loc_0_BAC7
		LDA	RandomValue_2
		AND	#2
		ORA	#$54
		TAY
		BNE	loc_0_BAA5

loc_0_BA9E:				; ...
		LDA	Objects_AnimID,X ; номер движения для запуска
		BNE	loc_0_BAC7
		LDY	#$4C

loc_0_BAA5:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#3
		BNE	loc_0_BAB8
		LDA	camera_lock_cnt
		CMP	#$14
		BCC	loc_0_BAC7
		CPY	#$4C
		BNE	loc_0_BAB8
		LDY	#$42

loc_0_BAB8:				; ...
		TYA
		JSR	write_obj_Anim_ID
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$BF
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		JSR	obj_set_dir_by_Xlow

loc_0_BAC7:				; ...
		LDY	tmp_var_16
		DEY
		BPL	loc_0_BA7D
		LDA	tmp_var_1B
		SBC	#$10
		LDA	tmp_var_8d
		SBC	#0
		BPL	loc_0_BAE0
		LDA	Objects_Zpos_L,X
		SBC	Objects_cnt3,X
		LDY	#1
		BNE	loc_0_BAE9

loc_0_BAE0:				; ...
		LDY	#$FF
		LDA	Objects_cnt3,X
		SEC
		SBC	Objects_Zpos_L,X

loc_0_BAE9:				; ...
		CMP	#$70
		BCS	loc_0_BAF1
		CMP	#$1C
		BCS	loc_0_BAF6

loc_0_BAF1:				; ...
		TYA
		CLC
		JSR	objects_add_Z?	; A is Z_speed

loc_0_BAF6:				; ...
		LDA	Objects_AnimID,X ; номер движения для запуска
		BEQ	loc_0_BB17
		LDA	#1		; every	second frame
		JSR	start_read_anim	; with ptr inc by AND with frame cnt
		LDA	Objects_AnimID,X ; номер движения для запуска
		BNE	loc_0_BB0F
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		BEQ	loc_0_BB0F
		LDA	#$44
		JSR	write_obj_Anim_ID

loc_0_BB0F:				; ...
		LDA	#$FF
		JSR	object_inc_to_Xspeed ; A is speed
		JSR	obj_moving_by_speed

loc_0_BB17:				; ...
		LDA	Objects_cnt3,X
		SBC	Objects_Zpos_L,X
		STA	objects_some_anim,X ; some obj X speed
		RTS
; End of function object_saturn_toadtrap

; ---------------------------------------------------------------------------

loc_0_BB21:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_electro_trap:			; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_BB21
		LDA	#$98
		JSR	play_sound_ch2
		LDA	#$5A
		STA	Objects_gfx_frame,X
		STA	Objects_cnt3,X
		LDA	#0
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	Objects_Ypos_L,X
		AND	#7
		BNE	loc_0_BB4E
		LDA	objects_some_anim,X ; some obj X speed
		CMP	#$E0
		BEQ	loc_0_BB58
		INC	objects_some_anim,X ; some obj X speed
		BNE	loc_0_BB58

loc_0_BB4E:				; ...
		LDA	Objects_Xpos_L,X
		CMP	#$28
		BEQ	loc_0_BB58
		DEC	Objects_Xpos_L,X

loc_0_BB58:				; ...
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		ROR	A
		LDA	Objects_Life,X
		BCC	loc_0_BB74
		SBC	#$C
		STA	Objects_Life,X
		SBC	#$C
		CMP	Objects_Xpos_L,X
		BCS	loc_0_BB86
		LDA	Objects_Xpos_L,X
		ADC	#$C
		BNE	loc_0_BB80

loc_0_BB74:				; ...
		ADC	#$C
		CMP	objects_some_anim,X ; some obj X speed
		BCC	loc_0_BB83
		LDA	objects_some_anim,X ; some obj X speed
		SBC	#8

loc_0_BB80:				; ...
		INC	Objects_various_flags,X	; для пушек ID прицепленного объекта

loc_0_BB83:				; ...
		STA	Objects_Life,X

loc_0_BB86:				; ...
		LDY	#1

loc_0_BB88:				; ...
		LDA	Lives_Player1,Y	; кол-во жизней	(сердечек)
		BMI	loc_0_BBB0
		LDA	Objects_death_timer,Y ;	undamage time
		BNE	loc_0_BBB0
		LDA	Obj_anims_timer,Y ; timer used for gfx frames
		CMP	#$10
		BCS	loc_0_BBB0
		LDA	#$10
		JSR	object_compare_Z
		BNE	loc_0_BBB0
		LDA	Objects_Xpos_L,Y
		CMP	Objects_Xpos_L,X
		BCC	loc_0_BBB0
		CMP	objects_some_anim,X ; some obj X speed
		BCS	loc_0_BBB0
		JSR	electro_damage

loc_0_BBB0:				; ...
		DEY
		BPL	loc_0_BB88
		RTS
; End of function object_electro_trap


; =============== S U B	R O U T	I N E =======================================


electro_damage:				; ...
		LDA	#$38
		STA	Obj_anims_timer,Y ; timer used for gfx frames
		STA	players_shock_timer,Y
		INC	update_ui_flag
		LDA	Objects_Life,Y
		SEC
		SBC	#$18
		BCS	loc_0_BBDF
		LDA	#$81
		STA	Objects_death_timer,Y ;	undamage time
		LDA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$20
		BEQ	loc_0_BBDF
		LDA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$DF
		STA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		JSR	create_obj_ravenclaw_
		LDA	#0

loc_0_BBDF:				; ...
		STA	Objects_Life,Y
		LDA	#0
		STA	Objects_AnimID,Y ; номер движения для запуска
		STA	Objects_Anim_Ptr,Y ; оффсет чтения анимации
		INC	update_ui_flag
		LDA	Objects_death_timer,Y ;	undamage time
		BPL	play_sound_16
		LDA	Level_ID
		CMP	#rat_race
		BEQ	loc_0_BC03
		CMP	#clinger_winger
		BEQ	loc_0_BC03
		CMP	#terra_tubes
		BEQ	loc_0_BC03
		CMP	#intruder_excluder
		BNE	play_sound_16

loc_0_BC03:				; ...
		TYA
		TAX
		LDA	#$4B
		JSR	damage_from_tbl_heavy ;	A is dmg table ID*5

play_sound_16:				; ...
		LDA	#$16
		JMP	play_sound_ch1_and_ch2
; End of function electro_damage

; ---------------------------------------------------------------------------

loc_0_BC0F:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_raven_claw:			; ...
		LDA	Objects_X_speed,X
		BNE	loc_0_BC42
		LDY	#1
		STY	hit_Z_table_index ; index for Z	collision tbl
		LDA	player2_state
		AND	#$20
		BEQ	loc_0_BC23
		DEY			; check	only p1

loc_0_BC23:				; ...
		LDA	#3
		CLC
		JSR	check_hitting_
		BMI	loc_0_BC3D
		LDA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$20
		BNE	loc_0_BC3D
		LDA	#$20		; write	stick
		ORA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		STA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage

loc_0_BC3A:				; ...
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

loc_0_BC3D:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_BC0F

loc_0_BC42:				; ...
		LDA	#$F0
		JSR	objects_Z_phys?
		LDA	#$FC
		JSR	object_inc_to_Xspeed ; A is speed
		LDA	#$5F
		STA	Objects_gfx_frame,X
		JSR	obj_moving_by_speed
		JMP	levels_physics_bank5
; End of function object_raven_claw


; =============== S U B	R O U T	I N E =======================================

; A is score obj index

create_scores_obj:			; ...
		STY	tmp_var_91

create_scores_obj_:			; ...
		STX	tmp_var_15	; A is score obj index
		PHA
		JSR	get_free_obj_slot_IDX
		BNE	loc_0_BC7A
		LDY	tmp_var_15	;  / Object Counter / various tmp
		JSR	copy_objects_XYZ
		LDA	#$30
		STA	Objects_TypeID,X
		LDA	#$40
		STA	Objects_cnt2,X
		LDA	#0
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		PLA
		STA	Objects_gfx_frame,X
		PHA

loc_0_BC7A:				; ...
		LDY	tmp_var_91
		PLA
		JSR	add_scores	; Y player ID, A - scores tbl index
		LDY	tmp_var_15	;  / Object Counter / various tmp
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		RTS
; End of function create_scores_obj


; =============== S U B	R O U T	I N E =======================================


sub_0_BC85:				; ...
		INC	Objects_Zpos_L,X
		BNE	loc_0_BC8D
		INC	Objects_Zpos_H,X

loc_0_BC8D:				; ...
		DEC	Objects_cnt2,X
		BEQ	loc_0_BC3A
		RTS
; ---------------------------------------------------------------------------

objects_power_ups:			; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_BC3A
		LDA	objects_some_anim,X ; some obj X speed
		BEQ	sub_0_BC85
		STA	Objects_gfx_frame,X
		JSR	levels_physics_bank5
		LDA	#$5E
		STA	Objects_AnimID,X ; номер движения для запуска
		JSR	check_collision_Z_index_2
		BMI	locret_0_BCCC
		LDA	#0
		STA	objects_some_anim,X ; some obj X speed
		STA	Objects_Z_floor,X
		LDA	#$50
		STA	Objects_cnt2,X
		STX	tmp_var_18
		LDA	Objects_gfx_frame,X
		JMP	loc_0_BCC3
; ---------------------------------------------------------------------------

locret_0_BCC2:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_BCC3:				; ...
		STY	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	loc_0_BCCD
		LDX	tmp_var_18
		STX	Object_RamSlotID_tmp ; id saved	for objects functions

locret_0_BCCC:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_BCCD:				; ...
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
; End of function sub_0_BC85


; =============== S U B	R O U T	I N E =======================================

; Y player ID, A - scores tbl index

add_scores:				; ...
		STY	tmp_var_92
		INC	update_ui_flag
		CMP	#9
		BCC	not_one_up

one_up:					; ...
		LDY	tmp_var_92
		LDA	Lives_Player1,Y	; кол-во жизней	(сердечек)
		ADC	#0
		BMI	locret_0_BCC2
		STA	Lives_Player1,Y	; кол-во жизней	(сердечек)
		LDA	#$7B
		JMP	play_sound_ch1_and_ch2
; ---------------------------------------------------------------------------

not_one_up:				; ...
		ASL	A
		STA	tmp_var_91
		ASL	A
		ADC	tmp_var_91	; *6
		ADC	#5		; count	from off
		TAX
		LDA	#6		; score	count
		STA	tmp_var_91	; counter
		CPY	#1
		LDY	#5		; p1
		BCC	loc_0_BCFE
		CLC
		LDY	#$B		; p2

loc_0_BCFE:				; ...
		LDA	Score_Player2 -	$B,Y
		STA	tmp_var_90	; obj_dir_tmp (для спрайтов - направление объекта)

scores_adding:				; ...
		LDA	scores_table,X
		ADC	Score_Player1_100k,Y
		CMP	#$A
		BCC	loc_0_BD0F
		SBC	#$A

loc_0_BD0F:				; ...
		STA	Score_Player1_100k,Y
		DEX
		DEY
		DEC	tmp_var_91	; counter
		BNE	scores_adding
		CMP	tmp_var_90	; obj_dir_tmp (для спрайтов - направление объекта)
		BEQ	locret_0_BD35
		CMP	#1
		BCS	one_up
		INY
		LDA	#9
		STA	Score_Player1_100k,Y
		STA	Score_Player1_10k,Y
		STA	Score_Player1_1k,Y
		STA	Score_Player1_100,Y
		STA	Score_Player1_10,Y
		STA	Score_Player1_1,Y

locret_0_BD35:				; ...
		RTS
; End of function add_scores

; ---------------------------------------------------------------------------
scores_table:	.BYTE 0, 0, 0, 1, 0, 0	; ...
		.BYTE 0, 0, 0, 2, 0, 0
		.BYTE 0, 0, 0, 5, 0, 0
		.BYTE 0, 0, 0, 7, 5, 0
		.BYTE 0, 0, 1, 0, 0, 0
		.BYTE 0, 0, 2, 0, 0, 0
		.BYTE 0, 0, 5, 0, 0, 0
		.BYTE 0, 0, 7, 5, 0, 0
		.BYTE 0, 1, 0, 0, 0, 0
byte_0_BD6C:	.BYTE 2, $FE, 3, $FD	; ...

; =============== S U B	R O U T	I N E =======================================


sub_0_BD70:				; ...
		LDA	#$FE
		JSR	object_inc_to_Xspeed ; A is speed
		JSR	obj_moving_by_speed

loc_0_BD78:				; ...
		LDA	#$E8
		JSR	objects_Z_phys?
		JSR	levels_physics_bank5
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_BD8F
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BPL	locret_0_BDAD
		PLA
		PLA
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

loc_0_BD8F:				; ...
		JSR	sub_0_9E59
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BNE	locret_0_BDAD
		STA	Objects_X_speed,X
		LDY	Objects_TypeID,X
		CPY	#$33
		BEQ	locret_0_BDAD
		STA	objects_some_anim,X ; some obj X speed
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		STA	Objects_Z_speed,X
		STA	Objects_Z_spd_sub,X

locret_0_BDAD:				; ...
		RTS
; End of function sub_0_BD70


; =============== S U B	R O U T	I N E =======================================


object_retro_blaster:			; ...
		LDA	#$1E
		STA	camera_lock_cnt
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	loc_0_BDC6
		JSR	sub_0_BD70
		LDA	#$60
		LDY	Objects_X_speed,X
		BNE	loc_0_BDC3
		LDA	#$61

loc_0_BDC3:				; ...
		JMP	loc_0_BE5E
; ---------------------------------------------------------------------------

loc_0_BDC6:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		BNE	loc_0_BE0B
		JSR	set_target_random
		INC	objects_some_anim,X ; some obj X speed
		LDA	#4
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		LDA	tmp_var_8F
		EOR	#$80
		AND	#$80
		STA	Objects_dir,X	; / angle
		LDA	#1
		JSR	object_compare_Z
		LDY	#0
		LDA	tmp_var_8d
		ROL	A
		BCS	loc_0_BDEC
		INY

loc_0_BDEC:				; ...
		LDA	Objects_Life,X
		CMP	#$30
		BCC	loc_0_BDF5
		INY
		INY

loc_0_BDF5:				; ...
		LDA	byte_0_BD6C,Y
		STA	Objects_cnt2,X
		LDA	#$80
		CPY	#2
		BCC	loc_0_BE03
		LDA	#$C0

loc_0_BE03:				; ...
		STA	Objects_X_speed,X
		LDA	#0
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?

loc_0_BE0B:				; ...
		LDA	Objects_AnimID,X ; номер движения для запуска
		BEQ	loc_0_BE21
		JSR	sub_0_B976
		LDA	#3		; every	fourth frame
		JSR	start_read_anim	; with ptr inc by AND with frame cnt
		LDA	Objects_AnimID,X ; номер движения для запуска
		BNE	locret_0_BE61

loc_0_BE1D:				; ...
		DEC	objects_some_anim,X ; some obj X speed
		RTS
; ---------------------------------------------------------------------------

loc_0_BE21:				; ...
		LDA	Objects_X_speed,X
		BNE	loc_0_BE29
		JSR	sub_0_B976

loc_0_BE29:				; ...
		LDY	Objects_TargetID,X
		LDA	Objects_death_timer,Y ;	undamage time
		BMI	loc_0_BE1D
		JSR	obj_moving_by_speed
		JSR	levels_physics_bank5
		LDA	Objects_cnt2,X
		CLC
		JSR	objects_add_Z?	; A is Z_speed
		LDY	Objects_TargetID,X
		LDA	#2
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		LDA	tmp_var_8F
		AND	#$80
		LSR	A
		EOR	#$40
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	#4
		JSR	object_compare_Z
		BNE	loc_0_BE5C
		LDA	#$4A
		JSR	write_obj_Anim_ID

loc_0_BE5C:				; ...
		LDA	#$61

loc_0_BE5E:				; ...
		STA	Objects_gfx_frame,X

locret_0_BE61:				; ...
		RTS
; End of function object_retro_blaster


; =============== S U B	R O U T	I N E =======================================


sub_0_BE62:				; ...
		LDY	Objects_TargetID,X
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		LDA	tmp_var_8F
		ROR	A
		ROR	A
		AND	#$80
		EOR	#$80
		STA	Objects_dir,X	; / angle
		RTS
; End of function sub_0_BE62


; =============== S U B	R O U T	I N E =======================================


sub_0_BE74:				; ...
		JSR	obj_moving_by_speed
		JSR	sub_0_E1A7
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_BE87
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_BEC6
		INC	Obj_anims_timer,X ; timer used for gfx frames

loc_0_BE87:				; ...
		LDY	#4
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	loc_0_BEB5
		LDY	Objects_gfx_frame,X
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$40
		BEQ	loc_0_BEB5
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		CMP	#$38
		BCS	loc_0_BEB5
		LDY	#4
		CMP	#$40
		BCS	loc_0_BEB5
		LDA	#$FE
		STA	Objects_Z_speed,X
		LDA	#1
		STA	Obj_anims_timer,X ; timer used for gfx frames
		JSR	sub_0_9E59
		JMP	loc_0_BF75
; ---------------------------------------------------------------------------

loc_0_BEB5:				; ...
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		AND	#2
		LSR	A
		ADC	#$B7
		CPY	#4
		BEQ	loc_0_BEC2
		LDA	#$BB

loc_0_BEC2:				; ...
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------

loc_0_BEC6:				; ...
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

loc_0_BEC9:				; ...
		JSR	sub_0_F319
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	#$D8
		STA	Objects_Ypos_L,X
		INC	Objects_gfx_frame,X
		LDA	#0
		STA	Objects_X_speed,X
		JSR	write_obj_Anim_ID
		LDA	#$C0
		STA	Objects_cnt2,X

loc_0_BEE3:				; ...
		JMP	loc_0_BFE3
; ---------------------------------------------------------------------------

loc_0_BEE6:				; ...
		JMP	sub_0_BE74
; ---------------------------------------------------------------------------

loc_0_BEE9:				; ...
		JSR	obj_set_flags_by_dir
		LDA	#3		; every	fourth frame
		JSR	start_read_anim	; with ptr inc by AND with frame cnt
		LDA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		CMP	#8
		BCC	loc_0_BEE3
		LDA	Objects_gfx_frame,X
		EOR	#$B9
		BNE	loc_0_BEE3
		STA	hit_Z_table_index ; index for Z	collision tbl
		LDY	#1
		LDA	#3
		CLC
		JSR	check_hitting_
		BPL	loc_0_BEC9
		JMP	loc_0_BFE3
; ---------------------------------------------------------------------------

object_hordhead:			; ...
		LDA	#5
		STA	camera_lock_cnt
		LDA	Objects_Ypos_L,X
		CMP	#$D7
		BNE	loc_0_BF22
		INC	Objects_Ypos_L,X
		JSR	set_target_random
		JMP	loc_0_BF75
; ---------------------------------------------------------------------------

loc_0_BF22:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BNE	loc_0_BEE6
		LDA	Objects_gfx_frame,X
		BEQ	loc_0_BF31
		TXA
		EOR	RandomValue_1
		BNE	loc_0_BF34

loc_0_BF31:				; ...
		JSR	set_target_random

loc_0_BF34:				; ...
		TXA
		EOR	FrameCounter
		AND	#7
		ORA	Objects_AnimID,X ; номер движения для запуска
		BNE	loc_0_BF46
		LDA	Objects_X_speed,X
		BMI	loc_0_BF46
		JSR	sub_0_BE62

loc_0_BF46:				; ...
		LDA	Objects_AnimID,X ; номер движения для запуска
		BNE	loc_0_BEE9
		LDA	Objects_Ypos_L,X
		CMP	#$D6
		BEQ	loc_0_BF75
		LDA	Objects_cnt2,X
		BNE	loc_0_BFCB
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#3
		CMP	#3
		BEQ	loc_0_BF6C
		LDY	Objects_TargetID,X
		LDA	#$30
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	loc_0_BFA0
		BEQ	loc_0_BF75

loc_0_BF6C:				; ...
		LDA	RandomValue_1
		ADC	Objects_Xpos_L,X
		AND	#7
		BNE	loc_0_BFA0

loc_0_BF75:				; ...
		LDY	Objects_TargetID,X
		LDA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$40
		BEQ	loc_0_BF89
		JSR	set_target_random
		LDA	#$12
		STA	objects_some_anim,X ; some obj X speed
		BNE	loc_0_BFA0

loc_0_BF89:				; ...
		JSR	sub_0_BE62
		LDY	#$6A
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#3
		CMP	#3
		BEQ	loc_0_BF99
		LDY	#$6C

loc_0_BF99:				; ...
		TYA
		JSR	write_obj_Anim_ID
		JMP	loc_0_BEE9
; ---------------------------------------------------------------------------

loc_0_BFA0:				; ...
		LDY	objects_some_anim,X ; some obj X speed
		LDA	byte_0_BFF1,Y
		BNE	loc_0_BFAF
		LDA	byte_0_BFF2,Y
		TAY
		LDA	byte_0_BFF1,Y

loc_0_BFAF:				; ...
		STA	Objects_gfx_frame,X
		LDA	byte_0_BFF2,Y
		STA	Objects_cnt2,X
		LDA	byte_0_BFF3,Y
		STA	Objects_Z_speed,X
		LDA	byte_0_BFF4,Y
		STA	Objects_X_speed,X
		TYA
		CLC
		ADC	#4
		STA	objects_some_anim,X ; some obj X speed

loc_0_BFCB:				; ...
		DEC	Objects_cnt2,X
		LDA	Objects_X_speed,X
		CMP	#1
		BNE	loc_0_BFE3
		LDA	Objects_cnt2,X
		CMP	#$30
		BNE	loc_0_BFE3
		LDA	RandomValue_1
		AND	#$80
		STA	Objects_dir,X	; / angle

loc_0_BFE3:				; ...
		JSR	obj_moving_by_speed
		LDA	#$C0
		JSR	objects_Z_phys?
		JSR	levels_physics_bank5
		JMP	obj_set_flags_by_dir
; End of function sub_0_BE74

; ---------------------------------------------------------------------------
byte_0_BFF1:	.BYTE $B7		; ...
byte_0_BFF2:	.BYTE 6			; ...
byte_0_BFF3:	.BYTE 0			; ...
byte_0_BFF4:	.BYTE $40, $B8,	$10, 2,	$C0, $B7, 6, 0,	$40, $B6, $10, 2, $C0, 0, 0, $B7, 6, 0,	0, 0, 0	; ...

; =============== S U B	R O U T	I N E =======================================


sub_0_C009:				; ...
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BNE	loc_0_C015
		LDA	#$6A
		LDX	#snd_channel1
		JSR	play_sound	; A is sound id, X - jmp_off (ch ID)

loc_0_C015:				; ...
		LDA	#$EC
		JSR	object_X_by_camera
		INC	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDY	#$40
		LDA	Camera_X_pos_H
		CMP	#$DA
		BCC	loc_0_C027
		LDY	#$30

loc_0_C027:				; ...
		STY	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		CMP	tmp_var_15	;  / Object Counter / various tmp
		BCS	loc_0_C039
		AND	#8
		BEQ	locret_0_C043
		LDA	#0
		JMP	object_X_by_camera
; ---------------------------------------------------------------------------

loc_0_C039:				; ...
		LDA	#$FF
		JSR	object_X_by_camera
		LDA	#$CC
		STA	Objects_Ypos_L,X

locret_0_C043:				; ...
		RTS
; End of function sub_0_C009


; =============== S U B	R O U T	I N E =======================================


object_inferno_race_electricity:	; ...
		LDA	Objects_TargetID,X
		CMP	#1
		BNE	loc_0_C050
		LDA	#$8B
		JSR	play_sound_ch4

loc_0_C050:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_C0C4
		LDA	Objects_Ypos_L,X
		CMP	#$CC
		BEQ	loc_0_C097
		CMP	#$CA
		BEQ	sub_0_C009
		CMP	#$CB
		BNE	loc_0_C06F
		LDA	Objects_X_shadow,X
		CMP	#$C0
		LDA	#$FE
		BCC	loc_0_C071
		BCS	loc_0_C097

loc_0_C06F:				; ...
		LDA	#2

loc_0_C071:				; ...
		LDY	bikes_speed
		CPY	#8
		BCC	loc_0_C078
		ASL	A

loc_0_C078:				; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	objects_some_anim,X ; some obj X speed
		BEQ	loc_0_C097
		SEC
		SBC	tmp_var_15	;  / Object Counter / various tmp
		STA	objects_some_anim,X ; some obj X speed
		LDA	tmp_var_15	;  / Object Counter / various tmp
		CMP	#$80
		ROR	A
		ADC	Objects_Zpos_L,X
		STA	Objects_Zpos_L,X
		LDA	#$98
		LDX	#snd_channel2
		JSR	play_sound	; A is sound id, X - jmp_off (ch ID)

loc_0_C097:				; ...
		INC	Objects_TargetID,X
		JSR	load_PL_1_or_2	; Записать в Y id игрока 0 или 1. (четн/нечет кадр)
		BEQ	locret_0_C0C3
		LDA	stop_scroll_flag
		BNE	locret_0_C0C3
		LDA	Objects_death_timer,Y ;	undamage time
		BMI	locret_0_C0C3
		LDA	#$10
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	locret_0_C0C3
		LDA	Objects_Zpos_L,Y
		SBC	Objects_Zpos_L,X
		ADC	#$10
		BCS	loc_0_C0BE
		CMP	objects_some_anim,X ; some obj X speed
		BCC	locret_0_C0C3

loc_0_C0BE:				; ...
		LDX	#$23
		JSR	sub_0_B8D9

locret_0_C0C3:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_C0C4:				; ...
		JMP	clear_object_vars ; remove object
; End of function object_inferno_race_electricity


; =============== S U B	R O U T	I N E =======================================

; creates objects: rokets, fires, mines

object_mines_rokets_creator:		; ...
		LDA	Level_ID
		CMP	#SurfCity
		BEQ	loc_0_C0D7
		LDA	Camera_X_pos_H
		CMP	#$48
		BEQ	loc_0_C0C4
		CMP	#$80
		BEQ	loc_0_C0C4

loc_0_C0D7:				; ...
		DEC	objects_some_anim,X ; some obj X speed
		BNE	locret_0_C0C3
		LDA	Objects_Xpos_H,X
		STA	objects_some_anim,X ; some obj X speed
		INC	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	Level_ID
		CMP	#SurfCity
		BNE	loc_0_C111
		LDA	Camera_X_pos_H
		CMP	#$58
		BCS	locret_0_C16E
		CMP	#$2A
		BEQ	locret_0_C16E
		CMP	#$2C
		BEQ	locret_0_C16E
		CMP	#$2B
		BEQ	locret_0_C16E
		CMP	#$3A
		BEQ	locret_0_C16E
		CMP	#$39
		BEQ	locret_0_C16E
		CMP	#$3E
		BEQ	locret_0_C16E
		CMP	#$4E
		BEQ	locret_0_C16E
		CMP	#$4D
		BEQ	locret_0_C16E

loc_0_C111:				; ...
		JSR	get_free_obj_slot_IDX
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	#$69
		STA	Objects_TypeID,X
		LDA	#0
		STA	Objects_Ypos_H,X
		STA	Objects_Zpos_H,X
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	#$CC
		STA	Objects_Ypos_L,X
		LDA	Camera_X_pos_l	;  / level_position - on h levels
		CLC
		ADC	#$FB
		STA	Objects_Xpos_L,X
		LDA	Camera_X_pos_H
		ADC	#0
		STA	Objects_Xpos_H,X
		LDA	Objects_Ypos_H,Y
		BNE	loc_0_C14D
		STX	tmp_var_18
		LDA	#$92
		LDX	#snd_channel1
		JSR	jump_to_play_sound ; A is sound	id, X -	JmpOff (channel	id)
		LDX	tmp_var_18
		JMP	loc_0_C19C
; ---------------------------------------------------------------------------

loc_0_C14D:				; ...
		CMP	#2
		BNE	loc_0_C16F
		JSR	random
		AND	#$3F
		ADC	#$A8
		STA	Objects_Ypos_L,X
		LDA	#$50
		STA	Objects_Zpos_L,X
		LDA	#$78
		STA	Objects_TypeID,X
		LDA	RandomValue_2
		AND	#$7F
		ADC	#$30
		STA	Objects_X_speed,X

locret_0_C16E:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_C16F:				; ...
		JSR	random
		AND	#$1F		; position of rokets X
		CLC
		ADC	#1
		STA	objects_some_anim,X ; some obj X speed
		LDA	Objects_various_flags,Y	; для пушек ID прицепленного объекта
		AND	#8
		CMP	#4
		LDA	#$30		; speed
		BCC	loc_0_C187
		LDA	#$D0

loc_0_C187:				; ...
		STA	Objects_cnt2,X
		INC	Objects_TypeID,X ; $6A - rokets
		LDA	Objects_various_flags,Y	; для пушек ID прицепленного объекта
		AND	#8
		CMP	#4
		LDA	#$14		; down
		BCC	loc_0_C1AF
		LDA	#$B8		; up
		BNE	loc_0_C1AF	; jump

loc_0_C19C:				; ...
		LDA	#1
		STA	objects_some_anim,X ; some obj X speed
		JSR	random
		AND	#$7F
		STA	tmp_var_15	;  / Object Counter / various tmp
		JSR	random
		AND	#$3F
		ADC	tmp_var_15	;  / Object Counter / various tmp

loc_0_C1AF:				; ...
		STA	Objects_Zpos_L,X
		RTS
; End of function object_mines_rokets_creator

; ---------------------------------------------------------------------------

loc_0_C1B3:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_level7_fires:			; ...
		LDA	stop_scroll_flag
		BEQ	loc_0_C1BF
		LDA	#8
		STA	objects_some_anim,X ; some obj X speed

loc_0_C1BF:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_C1B3
		LDA	Objects_Xpos_L,X
		SEC
		SBC	objects_some_anim,X ; some obj X speed
		STA	Objects_Xpos_L,X
		BCS	loc_0_C1D3
		DEC	Objects_Xpos_H,X

loc_0_C1D3:				; ...
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		AND	#1
		STA	tmp_var_15	;  / Object Counter / various tmp
		ASL	A
		ORA	tmp_var_15	;  / Object Counter / various tmp
		ADC	#$CB
		STA	Objects_gfx_frame,X
		LDA	stop_scroll_flag
		BNE	locret_0_C216

compare_with_roket_and_fire_hit:	; ...
		JSR	load_PL_1_or_2	; Записать в Y id игрока 0 или 1. (четн/нечет кадр)
		BEQ	locret_0_C216
		LDA	stop_scroll_flag
		BNE	locret_0_C216
		LDA	Objects_death_timer,Y ;	undamage time
		BMI	locret_0_C216
		LDA	Objects_Xpos_L,X
		SBC	Objects_Xpos_L,Y
		ADC	#$10
		CMP	#$20
		BCS	locret_0_C216
		LDA	Objects_Zpos_L,Y
		ADC	#6
		SBC	Objects_Zpos_L,X
		ADC	#$D
		CMP	#$1A
		BCS	locret_0_C216
		LDA	#0
		STA	bikes_speed_sub
		STA	bikes_speed
		JMP	loc_0_C0BE
; ---------------------------------------------------------------------------

locret_0_C216:				; ...
		RTS
; End of function object_level7_fires

; ---------------------------------------------------------------------------

loc_0_C217:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_level7_rockets:			; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_C217
		LDA	Objects_cnt2,X
		ROL	A
		LDA	#$CC
		ADC	#0
		STA	Objects_gfx_frame,X
		LDA	objects_some_anim,X ; some obj X speed
		BEQ	loc_0_C246
		DEC	objects_some_anim,X ; some obj X speed
		BNE	locret_0_C240
		LDA	Objects_cnt2,X
		BPL	loc_0_C241
		LDX	#snd_channel2
		LDA	#$97
		JMP	play_sound	; A is sound id, X - jmp_off (ch ID)
; ---------------------------------------------------------------------------

locret_0_C240:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_C241:				; ...
		LDA	#$95
		JMP	play_sound_ch4
; ---------------------------------------------------------------------------

loc_0_C246:				; ...
		LDA	Objects_cnt2,X
		JSR	objects_Z_phys?
		LDA	bikes_speed
		JSR	obj_increment_to_X ; A is X_low
		JMP	compare_with_roket_and_fire_hit
; End of function object_level7_rockets

; ---------------------------------------------------------------------------

loc_0_C254:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_rocket_rat2_inferno:		; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	loc_0_C262
		JSR	object_giblet
		JMP	loc_0_C2DE
; ---------------------------------------------------------------------------

loc_0_C262:				; ...
		LDA	#$1E
		STA	camera_lock_cnt
		LDA	#$3A
		LDX	#snd_channel1
		JSR	play_sound	; A is sound id, X - jmp_off (ch ID)
		LDA	objects_some_anim,X ; some obj X speed
		BEQ	loc_0_C27C
		DEC	objects_some_anim,X ; some obj X speed
		BNE	locret_0_C2E3
		LDA	#$68
		JSR	play_sound_ch4

loc_0_C27C:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_C254
		LDA	Objects_gfx_frame,X
		BNE	loc_0_C296
		STA	Objects_Life,X
		JSR	set_target_random
		LDA	Objects_Ypos_L,X
		ROR	A
		ROR	A
		AND	#$80
		STA	Objects_dir,X	; / angle

loc_0_C296:				; ...
		LDY	Objects_TargetID,X
		JSR	copy_objects_Y
		LDA	Objects_Zpos_L,Y
		ADC	#8
		SBC	Objects_Zpos_L,X
		LDA	#$E0
		BCC	loc_0_C2AA
		LDA	#$20

loc_0_C2AA:				; ...
		JSR	objects_Z_phys?
		LDA	Objects_X_speed,X
		CLC
		ADC	#3
		CMP	#$C0
		BCC	loc_0_C2B9
		LDA	#$C0

loc_0_C2B9:				; ...
		STA	Objects_X_speed,X
		JSR	obj_moving_by_speed
		LDA	Objects_X_speed,X
		CMP	#$80
		BCC	loc_0_C2D8
		LDY	Objects_TargetID,X
		LDA	#$10
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	loc_0_C2D8
		LDA	#$6E
		JSR	write_obj_Anim_ID
		JSR	read_obj_anim	; without ptr inc

loc_0_C2D8:				; ...
		JSR	obj_set_flags_by_dir
		JSR	levels_physics_bank5

loc_0_C2DE:				; ...
		LDA	#$55
		STA	Objects_gfx_frame,X

locret_0_C2E3:				; ...
		RTS
; End of function object_rocket_rat2_inferno


; =============== S U B	R O U T	I N E =======================================


sub_0_C2E4:				; ...
		JSR	copy_objects_XYZ
		LDA	Objects_gfx_frame,Y
		STA	Objects_gfx_frame,X
		LDA	#$40
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		JMP	shesterenka_movement
; End of function sub_0_C2E4


; =============== S U B	R O U T	I N E =======================================


shesterenka_sub:			; ...
		INC	LevelCfgAdr_L	; текущий адрес	рома для чтения	объектов уровня
		BNE	loc_0_C2FB
		INC	LevelCfgAdr_H

loc_0_C2FB:				; ...
		LDA	#$3F
		JSR	get_obj_slot_type_by_ID
		BNE	loc_0_C307
		TYA
		TAX
		JSR	create_object_4

loc_0_C307:				; ...
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	#$6B
		JSR	search_object_6b
		TYA
		TAX
		LDA	#$10
		JSR	objects_add_Z?	; A is Z_speed
		JSR	create_object_4
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		JMP	create_object_4
; End of function shesterenka_sub


; =============== S U B	R O U T	I N E =======================================


object_shesterenka:			; ...
		LDY	Objects_TargetID,X
		BNE	sub_0_C2E4
		LDA	Objects_gfx_frame,X
		BNE	loc_0_C336
		JSR	search_obj_slot
		LDA	#$6B
		STA	Objects_TypeID,X
		LDA	Object_RamSlotID_tmp ; id saved	for objects functions
		STA	Objects_TargetID,X
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_0_C336:				; ...
		LDA	Objects_cnt2,X
		BNE	loc_0_C388
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BNE	shesterenka_started_mov
		JSR	load_PL_1_or_2	; Записать в Y id игрока 0 или 1. (четн/нечет кадр)
		LDA	FrameCounter	; ???
		BEQ	loc_0_C3BB	; ???
		LDA	#$70
		JSR	object_compare_Z
		BNE	loc_0_C3BB
		LDA	tmp_var_1B
		ADC	#$40
		CMP	#$80
		BCC	loc_0_C3BB
		LSR	tmp_var_8d
		LDA	#$54
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	loc_0_C3BB
		LDA	tmp_var_1B
		ADC	#$10
		CMP	#$20
		BCC	loc_0_C3BB
		LDA	tmp_var_8F
		AND	#$80
		ORA	tmp_var_8d
		EOR	Objects_Life,X
		AND	#$C0
		BNE	loc_0_C3BB
		INC	Objects_various_flags,X	; set movement flag

shesterenka_started_mov:		; ...
		LDX	#$2D
		LDY	#3
		JSR	jump_from_bank0
		LDA	Objects_dir,X	; / angle
		CMP	#$FF
		BNE	loc_0_C388
		JMP	shesterenka_sub
; ---------------------------------------------------------------------------

loc_0_C388:				; ...
		DEC	Objects_cnt2,X
		LDA	Objects_dir,X	; / angle
		AND	#$40
		BEQ	loc_0_C3B3
		DEC	Objects_cnt2,X
		LDA	Objects_dir,X	; / angle
		ROL	A
		LDA	#$FC
		BCS	loc_0_C39F
		LDA	#4

loc_0_C39F:				; ...
		LDY	objects_some_anim,X ; some obj X speed
		CPY	#$72
		BCC	loc_0_C3AD
		INC	Objects_cnt2,X
		CMP	#$80
		ROR	A
		CLC

loc_0_C3AD:				; ...
		JSR	objects_add_Z?	; A is Z_speed
		JMP	loc_0_C3BB
; ---------------------------------------------------------------------------

loc_0_C3B3:				; ...
		LDA	#$80
		STA	Objects_X_speed,X
		JSR	obj_moving_by_speed

loc_0_C3BB:				; ...
		JSR	shesterenka_movement
		LDA	#$1C
		JSR	compare_X_vs_player
		BNE	loc_0_C3CF
		LDA	#$24
		JSR	object_compare_Z
		BNE	loc_0_C3CF
		JSR	player_razdavlen

loc_0_C3CF:				; ...
		LDA	Objects_cnt2,X
		LSR	A
		LSR	A
		AND	#1
		ORA	#$D0
		STA	Objects_gfx_frame,X

locret_0_C3DB:				; ...
		RTS
; End of function object_shesterenka


; =============== S U B	R O U T	I N E =======================================


compare_X_vs_player:			; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		JSR	load_PL_1_or_2	; Записать в Y id игрока 0 или 1. (четн/нечет кадр)
		BEQ	loc_0_C3ED
		LDA	Objects_death_timer,Y ;	undamage time
		BNE	loc_0_C3ED
		LDA	tmp_var_15	;  / Object Counter / various tmp
		JMP	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
; ---------------------------------------------------------------------------

loc_0_C3ED:				; ...
		LDA	#1
		RTS
; End of function compare_X_vs_player


; =============== S U B	R O U T	I N E =======================================


shesterenka_movement:			; ...
		LDA	#$40
		JSR	loc_0_C3FA
		JSR	levels_physics_bank5
		LDA	#0

loc_0_C3FA:				; ...
		EOR	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$40
		TAY
		LDA	#$C
		CPY	#0
		BEQ	loc_0_C40A
		LDY	#$FF
		LDA	#$F4

loc_0_C40A:				; ...
		CLC
		ADC	Objects_Xpos_L,X
		STA	Objects_Xpos_L,X
		TYA
		ADC	Objects_Xpos_H,X
		STA	Objects_Xpos_H,X
		RTS
; End of function shesterenka_movement


; =============== S U B	R O U T	I N E =======================================


object_water_splash:			; ...
		LDA	Objects_gfx_frame,X
		BNE	loc_0_C43A
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDY	Objects_TargetID,X
		JSR	copy_objects_XYZ
		LDA	#2
		STA	Objects_Z_speed,X
		LDA	Level_ID
		EOR	#SurfCity
		BNE	loc_0_C43A
		STA	Objects_Zpos_H,X
		LDA	#$1C
		STA	Objects_cnt2,X

loc_0_C43A:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_C453
		JSR	objects_Z?
		INC	Objects_cnt2,X
		LDA	Objects_cnt2,X
		LSR	A
		LSR	A
		TAY
		LDA	byte_0_C456,Y
		STA	Objects_gfx_frame,X
		BNE	locret_0_C3DB

loc_0_C453:				; ...
		JMP	clear_object_vars ; remove object
; End of function object_water_splash

; ---------------------------------------------------------------------------
byte_0_C456:	.BYTE $D3, $D4,	$D5, $D5, $D4, $D3, 0, $8D, $8D, $8D, 0	; ...
; ---------------------------------------------------------------------------

loc_0_C461:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


sub_0_C464:				; ...
		LDA	Objects_death_timer,X ;	undamage time
		BNE	loc_0_C4AC
		DEC	Obj_various_cnt,X
		LDA	Obj_various_cnt,X
		SEC
		SBC	#4
		CMP	#$F4
		BCC	loc_0_C47B
		LDA	#$D8
		STA	Objects_gfx_frame,X

loc_0_C47B:				; ...
		LDA	Obj_various_cnt,X
		BMI	loc_0_C4A2
		BNE	loc_0_C491
		LDA	Objects_Life,X
		SEC
		SBC	#4
		STA	Objects_Life,X
		LDA	#$14
		STA	some_sound_flag	; by tables
		LDA	#1

loc_0_C491:				; ...
		CMP	#7
		BCS	loc_0_C4A2
		LDA	#4
		JSR	objects_add_Z?	; A is Z_speed
		LDA	#1
		STA	Objects_Z_speed,X
		STA	Objects_Z_spd_sub,X

loc_0_C4A2:				; ...
		JSR	objects_Z?
		JSR	levels_physics_bank5
		JSR	sub_0_9E59
		RTS
; ---------------------------------------------------------------------------

loc_0_C4AC:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_C461
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$DF
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	#$FF
		JSR	object_inc_to_Xspeed ; A is speed
		JSR	obj_moving_by_speed
		JMP	objects_Z?
; End of function sub_0_C464


; =============== S U B	R O U T	I N E =======================================


object_robot:				; ...
		LDA	Objects_gfx_frame,X
		BNE	loc_0_C4CC
		JSR	set_target_random

loc_0_C4CC:				; ...
		LDA	#$D6
		STA	Objects_gfx_frame,X
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		ORA	Objects_death_timer,X ;	undamage time
		BNE	sub_0_C464
		INC	Objects_cnt2,X
		BNE	loc_0_C4E9
		LDA	Objects_dir,X	; / angle
		EOR	#$80
		STA	Objects_dir,X	; / angle
		JSR	set_target_random

loc_0_C4E9:				; ...
		LDA	Objects_cnt2,X
		BPL	loc_0_C529
		CMP	#$E0
		BNE	loc_0_C527
		LDA	#6
		STA	tmp_var_1B
		LDA	Objects_TypeID,X
		CMP	#$72		; ? utka?
		BEQ	loc_0_C533
		LDA	#$28
		LDX	#snd_channel2
		JSR	play_sound	; A is sound id, X - jmp_off (ch ID)
		LDA	Objects_TypeID,X
		CMP	#$50		; sentry drone sub
		BNE	loc_0_C522
		LDA	#4
		STA	tmp_var_1B
		LDA	#$40
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	#$12
		JSR	sub_0_DF83
		LDA	#0
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	#$12
		BNE	loc_0_C524

loc_0_C522:				; ...
		LDA	#$E

loc_0_C524:				; ...
		JSR	sub_0_DF83

loc_0_C527:				; ...
		BNE	loc_0_C544	; jump

loc_0_C529:				; ...
		CMP	objects_some_anim,X ; some obj X speed
		BNE	loc_0_C533
		LDA	#$C0
		STA	Objects_cnt2,X

loc_0_C533:				; ...
		LDA	#$20
		LDY	Objects_TypeID,X
		CPY	#$72
		BEQ	loc_0_C53E
		LDA	#$40

loc_0_C53E:				; ...
		STA	Objects_X_speed,X
		JSR	obj_moving_by_speed

loc_0_C544:				; ...
		LDA	Objects_TypeID,X
		CMP	#$50		; sentry drone
		BEQ	locret_0_C569
		JSR	robot_explosion	; robot
		LDY	Objects_TargetID,X
		LDA	#$18
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$23
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	tmp_var_8F	; distance
		LSR	A
		AND	#$40
		EOR	#$40		; robot	swap dir
		ORA	tmp_var_15	;  / Object Counter / various tmp
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?

locret_0_C569:				; ...
		RTS
; End of function object_robot


; =============== S U B	R O U T	I N E =======================================


robot_explosion:			; ...
		JSR	levels_physics_bank5

compare_pos_vs_players:			; ...
		JSR	load_PL_1_or_2	; watermines and robots
		BEQ	locret_0_C5B0
		LDA	Objects_death_timer,Y ;	undamage time
		ORA	stop_scroll_flag
		BNE	locret_0_C5B0
		LDA	#$A
		JSR	obj_compare_Y?
		BNE	locret_0_C5B0
		LDA	#$C
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	locret_0_C5B0
		LDA	#$18
		JSR	object_compare_Z
		BNE	locret_0_C5B0
		LDA	Level_ID
		CMP	#SurfCity
		BNE	robot_explode_dmg
		JSR	death_effects_on_bikes ; mine explode effect
		LDA	#$A
		JMP	play_sound_ch4
; ---------------------------------------------------------------------------

robot_explode_dmg:			; ...
		TYA
		TAX
		LDA	#$19		; (+$5A)
		JSR	damage_from_tbl_heavy ;	A is dmg table ID*5
		LDA	#$A
		JSR	play_sound_ch4
		LDA	#$18
		JSR	objects_add_Z?	; A is Z_speed
		JMP	create_object_4
; ---------------------------------------------------------------------------

locret_0_C5B0:				; ...
		RTS
; End of function robot_explosion

; ---------------------------------------------------------------------------

loc_0_C5B1:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


sub_0_C5B4:				; ...
		LDA	Objects_TargetID,X
		CMP	#$30
		BCS	loc_0_C5C7
		AND	#4
		BEQ	loc_0_C5C7
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		EOR	#$40
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?

loc_0_C5C7:				; ...
		LDA	FrameCounter
		AND	#1
		BNE	loc_0_C5D8
		DEC	Objects_TargetID,X
		BNE	loc_0_C5D8
		STA	Objects_death_timer,X ;	undamage time
		JSR	some_state_upd

loc_0_C5D8:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_C5B1
		LDA	#$10
		STA	Objects_X_speed,X
		LDA	#$E9
		STA	Objects_gfx_frame,X
		RTS
; End of function sub_0_C5B4


; =============== S U B	R O U T	I N E =======================================


object_utka:				; ...
		LDA	Objects_gfx_frame,X
		BNE	loc_0_C5F0
		JSR	obj_swap_2_dirs

loc_0_C5F0:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	loc_0_C613
		LDA	Objects_death_timer,X ;	undamage time
		STA	Objects_TargetID,X
		LDA	#0
		STA	Obj_anims_timer,X ; timer used for gfx frames
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		STA	Objects_Z_speed,X
		STA	Objects_Z_spd_sub,X
		LDA	Objects_Zpos_L,X
		AND	#$E0
		ORA	#$18
		STA	Objects_Zpos_L,X

loc_0_C613:				; ...
		LDY	#$EE
		JSR	loc_0_B978
		LDA	Objects_dir,X	; / angle
		AND	#$80
		STA	Objects_dir,X	; / angle
		JSR	obj_moving_by_speed
		JSR	obj_set_flags_by_dir
		JSR	levels_physics_bank5
		LDA	#0
		STA	Objects_Z_floor,X
		LDA	Objects_death_timer,X ;	undamage time
		BNE	sub_0_C5B4
		LDA	Objects_AnimID,X ; номер движения для запуска
		BNE	loc_0_C653
		TXA
		EOR	FrameCounter
		ROR	A
		BCS	loc_0_C648
		JSR	check_collision_Z_index_2
		BMI	loc_0_C648
		LDA	#$80
		JSR	write_obj_Anim_ID

loc_0_C648:				; ...
		LDA	#$20
		STA	Objects_X_speed,X
		LDA	#$E7
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------

loc_0_C653:				; ...
		JMP	start_read_anim_and_clr_Zfloor
; End of function object_utka


; =============== S U B	R O U T	I N E =======================================


object_electrofish:			; ...
		LDA	Objects_X_speed,X
		BNE	loc_0_C674
		LDA	#$C0
		STA	Objects_X_speed,X
		LDA	RandomValue_1
		STA	Objects_dir,X	; / angle
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#3
		BNE	loc_0_C674
		JSR	sub_0_C7B6
		LDA	#$80
		STA	Objects_X_speed,X

loc_0_C674:				; ...
		LDA	#$FC
		JSR	object_inc_to_Xspeed ; A is speed
		JSR	sub_0_F4B5
		JSR	obj_set_flags_by_dir
		LDA	Objects_death_timer,X ;	undamage time
		BNE	loc_0_C692
		JSR	levels_physics_bank5
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	sub_0_C6AC

loc_0_C68C:				; ...
		JSR	sub_0_9E4E
		JMP	loc_0_C70C
; ---------------------------------------------------------------------------

loc_0_C692:				; ...
		JSR	sub_0_C69A
		BPL	loc_0_C68C
		JMP	clear_object_vars ; remove object
; End of function object_electrofish


; =============== S U B	R O U T	I N E =======================================


sub_0_C69A:				; ...
		LDA	#0
		STA	Objects_Z_floor,X
		INC	Obj_anims_timer,X ; timer used for gfx frames
		LDA	#$FD
		CLC
		JSR	objects_add_Z?	; A is Z_speed
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		RTS
; End of function sub_0_C69A


; =============== S U B	R O U T	I N E =======================================


sub_0_C6AC:				; ...
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_C6BC
		JSR	objects_Z?
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BPL	loc_0_C70C
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

loc_0_C6BC:				; ...
		JSR	load_PL_1_or_2	; Записать в Y id игрока 0 или 1. (четн/нечет кадр)
		BEQ	loc_0_C708
		LDA	Objects_AnimID,Y ; номер движения для запуска
		ORA	Objects_death_timer,Y ;	undamage time
		ORA	Obj_anims_timer,Y ; timer used for gfx frames
		BNE	loc_0_C708
		LDA	#$40
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	loc_0_C708
		LDA	#$40
		JSR	object_compare_Z
		BNE	loc_0_C708
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		LSR	A
		AND	#1
		ORA	#$E4
		STA	Objects_gfx_frame,X
		STY	tmp_var_18
		LDA	#$98
		JSR	play_sound_ch2
		LDY	tmp_var_18
		LDA	tmp_var_1B
		ADC	#$10
		CMP	#$20
		BCS	loc_0_C706
		LDA	Objects_Xpos_L,Y
		SBC	Objects_Xpos_L,X
		ADC	#$10
		CMP	#$20
		BCS	loc_0_C706
		JSR	damage_shock
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_0_C706:				; ...
		LDY	#1

loc_0_C708:				; ...
		CPY	#1
		BEQ	locret_0_C715

loc_0_C70C:				; ...
		JSR	obj_counter_inc_by_speed
		LDA	byte_0_C716,Y
		STA	Objects_gfx_frame,X

locret_0_C715:				; ...
		RTS
; End of function sub_0_C6AC

; ---------------------------------------------------------------------------
byte_0_C716:	.BYTE $E2, $E3,	$E2, $E3 ; ...

; =============== S U B	R O U T	I N E =======================================


object_hammerfish:			; ...
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BNE	loc_0_C754
		JSR	sub_0_C78B
		LDA	Objects_AnimID,X ; номер движения для запуска
		BEQ	loc_0_C735
		LDA	tmp_var_8F
		AND	#$80
		EOR	#$80
		STA	Objects_dir,X	; / angle
		LDA	#$7E
		JSR	write_obj_Anim_ID

loc_0_C735:				; ...
		LDA	RandomValue_1
		AND	#$3F
		ADC	#$20
		LDA	#$20
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	RandomValue_2
		AND	#1
		BNE	loc_0_C748
		LDA	#$FF

loc_0_C748:				; ...
		STA	Objects_cnt2,X
		LDA	RandomValue_3
		AND	#$3F
		ADC	#$20
		STA	Objects_X_speed,X

loc_0_C754:				; ...
		JSR	sub_0_F4AB
		LDA	Objects_death_timer,X ;	undamage time
		BNE	loc_0_C76D
		JSR	levels_physics_bank5
		JSR	obj_set_flags_by_dir
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	loc_0_C775

loc_0_C767:				; ...
		JSR	sub_0_9E4E
		JMP	loc_0_C77D
; ---------------------------------------------------------------------------

loc_0_C76D:				; ...
		JSR	sub_0_C69A
		BPL	loc_0_C767
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

loc_0_C775:				; ...
		LDA	Objects_AnimID,X ; номер движения для запуска
		BNE	start_read_anim_and_clr_Zfloor
		DEC	Objects_various_flags,X	; для пушек ID прицепленного объекта

loc_0_C77D:				; ...
		JSR	obj_counter_inc_by_speed
		LDA	byte_0_C787,Y
		STA	Objects_gfx_frame,X
		RTS
; End of function object_hammerfish

; ---------------------------------------------------------------------------
byte_0_C787:	.BYTE $D9, $DA,	$DB, $DA ; ...

; =============== S U B	R O U T	I N E =======================================


sub_0_C78B:				; ...
		JSR	set_target_random
		LDA	#$20
		JSR	object_compare_Z
		LDA	#$50
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	locret_0_C7AB
		LDA	Objects_Zpos_L,X
		SBC	Objects_Zpos_L,Y
		ADC	#$1C
		CMP	#$34
		BCS	locret_0_C7AB
		LDA	#$7C
		JMP	write_obj_Anim_ID
; ---------------------------------------------------------------------------

locret_0_C7AB:				; ...
		RTS
; End of function sub_0_C78B


; =============== S U B	R O U T	I N E =======================================


start_read_anim_and_clr_Zfloor:		; ...
		LDA	#0
		STA	Objects_Z_floor,X

start_read_anim__:			; ...
		LDA	#1		; every	second_frame
		JMP	start_read_anim_ ; + OR	$80 for	gfx frame
; End of function start_read_anim_and_clr_Zfloor


; =============== S U B	R O U T	I N E =======================================


sub_0_C7B6:				; ...
		JSR	sub_0_C78B

loc_0_C7B9:				; ...
		LDA	tmp_var_8F
		AND	#$80
		EOR	#$98
		STA	Objects_dir,X	; / angle
		EOR	tmp_var_8d
		BMI	locret_0_C7CE
		LDA	Objects_dir,X	; / angle
		SBC	#$30
		STA	Objects_dir,X	; / angle

locret_0_C7CE:				; ...
		RTS
; End of function sub_0_C7B6


; =============== S U B	R O U T	I N E =======================================


object_shark:				; ...
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BNE	loc_0_C7E1
		LDA	#$20
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	#$80
		STA	Objects_X_speed,X
		JSR	sub_0_C7B6

loc_0_C7E1:				; ...
		JSR	sub_0_F4B5
		JSR	obj_set_flags_by_dir
		LDA	Objects_death_timer,X ;	undamage time
		BNE	loc_0_C7FA
		JSR	levels_physics_bank5
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	loc_0_C802

loc_0_C7F4:				; ...
		JSR	sub_0_9E4E
		JMP	loc_0_C80A
; ---------------------------------------------------------------------------

loc_0_C7FA:				; ...
		JSR	sub_0_C69A
		BPL	loc_0_C7F4
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

loc_0_C802:				; ...
		LDA	Objects_AnimID,X ; номер движения для запуска
		BNE	start_read_anim_and_clr_Zfloor
		DEC	Objects_various_flags,X	; для пушек ID прицепленного объекта

loc_0_C80A:				; ...
		LDA	Objects_X_speed,X
		LSR	A
		LSR	A
		JSR	obj_unjk_cnt_add
		LDA	byte_0_C825,Y
		STA	Objects_gfx_frame,X
		RTS
; End of function object_shark


; =============== S U B	R O U T	I N E =======================================

; + OR $80 for gfx frame

start_read_anim_:			; ...
		JSR	start_read_anim	; with ptr inc by AND with frame cnt
		LDA	Objects_gfx_frame,X
		ORA	#$80
		STA	Objects_gfx_frame,X
		RTS
; End of function start_read_anim_

; ---------------------------------------------------------------------------
byte_0_C825:	.BYTE $DE, $DF,	$E0, $DF ; ...

; =============== S U B	R O U T	I N E =======================================


sub_0_C829:				; ...
		AND	#$1F
		TAY
		DEY
		LDA	Objects_LinkedObj_ID,Y ; флаг/id присоединённого объекта
		BNE	loc_0_C83F
		LDA	#$20
		JSR	objects_Z_phys?
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BPL	loc_0_C882
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

loc_0_C83F:				; ...
		JSR	loc_0_88F3
		LDA	Objects_cnt2,X
		BMI	loc_0_C86E
		LDY	tmp_var_15	;  / Object Counter / various tmp
		LDA	#0
		STA	Objects_TargetID,Y
		TYA
		EOR	#1
		TAY
		LDA	Objects_TypeID,Y
		BEQ	loc_0_C86B
		LDA	Objects_LinkedObj_ID,Y ; флаг/id присоединённого объекта
		CMP	#$40
		BCC	loc_0_C87C
		LDA	objects_some_anim,X ; some obj X speed
		BPL	loc_0_C86B
		LDA	Objects_Z_floor
		AND	player2_Z_floor
		BEQ	loc_0_C87C

loc_0_C86B:				; ...
		INC	Objects_cnt2,X

loc_0_C86E:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		STA	Objects_TargetID
		STA	player2_TargetID
		LDA	#$8C
		JSR	play_sound_ch4

loc_0_C87C:				; ...
		LDA	#$2C
		CLC
		JSR	objects_add_Z?	; A is Z_speed

loc_0_C882:				; ...
		JSR	levels_physics_bank5
		LDA	#0
		STA	Objects_Z_floor,X
		JMP	loc_0_C8AE
; End of function sub_0_C829


; =============== S U B	R O U T	I N E =======================================


object_verevka_s_propellerom:		; ...
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		CMP	#$40
		BCS	sub_0_C829
		JSR	sub_0_B976
		LDA	#$E8
		CLC
		JSR	objects_add_Z?	; A is Z_speed
		LDA	#4
		JSR	set_on_transport_
		LDA	#$18
		CLC
		JSR	objects_add_Z?	; A is Z_speed
		LDA	#3
		AND	FrameCounter
		BNE	loc_0_C8B1

loc_0_C8AE:				; ...
		INC	Obj_various_cnt,X

loc_0_C8B1:				; ...
		LDA	Obj_various_cnt,X

loc_0_C8B4:				; ...
		STA	Obj_various_cnt,X
		TAY
		EOR	#3
		BEQ	loc_0_C8B4
		LDA	byte_0_C8CE,Y
		STA	Objects_gfx_frame,X
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$BF
		ORA	byte_0_C8D1,Y
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		RTS
; End of function object_verevka_s_propellerom

; ---------------------------------------------------------------------------
byte_0_C8CE:	.BYTE $EA, $EB,	$EB	; ...
byte_0_C8D1:	.BYTE 0, 0, $40		; ...

; =============== S U B	R O U T	I N E =======================================


object_terra_tubes_xz:			; ...
		LDA	Objects_cnt2,X
		BNE	loc_0_C8E4
		LDA	Objects_Ypos_H,X
		STA	Objects_cnt2,X
		LDA	#$1F
		STA	Objects_Ypos_H,X

loc_0_C8E4:				; ...
		LDA	Level_ID
		CMP	#arctic_caverns
		BNE	loc_0_C925
		LDA	Objects_cnt2,X
		CMP	#$38
		BNE	loc_0_C918
		JSR	get_obj_slot_type_by_ID
		BNE	loc_0_C90F
		LDA	Objects_Zpos_H,Y
		CMP	#$1E
		BCS	loc_0_C904
		LDA	Objects_Xpos_H,Y
		CMP	#2
		BCC	locret_0_C914

loc_0_C904:				; ...
		STX	tmp_var_15	;  / Object Counter / various tmp
		STY	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	clear_object_vars ; remove object
		LDX	tmp_var_15	;  / Object Counter / various tmp
		STX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_0_C90F:				; ...
		LDA	#$38
		STA	Objects_TypeID,X

locret_0_C914:				; ...
		RTS
; ---------------------------------------------------------------------------
		JMP	clear_object_vars ; unused?
; ---------------------------------------------------------------------------

loc_0_C918:				; ...
		DEC	Objects_cnt3,X
		BPL	locret_0_C963
		LDA	objects_some_anim,X ; some obj X speed
		STA	Objects_cnt3,X
		BNE	loc_0_C949

loc_0_C925:				; ...
		LDA	#$FB
		STA	Objects_gfx_frame,X
		LDA	RandomValue_1
		EOR	Objects_Xpos_L,X
		AND	#$7F
		BNE	locret_0_C963
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDY	#2

loc_0_C937:				; ...
		LDA	Objects_TypeID,Y
		BEQ	loc_0_C93E
		INC	tmp_var_15	;  / Object Counter / various tmp

loc_0_C93E:				; ...
		INY
		CPY	#$F
		BNE	loc_0_C937
		LDA	tmp_var_15	;  / Object Counter / various tmp
		CMP	#7
		BCS	locret_0_C963

loc_0_C949:				; ...
		JSR	get_free_obj_slot_IDX
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	copy_objects_XYZ_and_dir
		LDA	Objects_cnt2,Y
		STA	Objects_TypeID,X
		LDA	Objects_Life,Y
		STA	Objects_Life,X
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?

locret_0_C963:				; ...
		RTS
; End of function object_terra_tubes_xz

; ---------------------------------------------------------------------------
		LDA	bikes_speed_sub	; unused?
		CLC
		ADC	Objects_X_sub,X
		STA	Objects_X_sub,X
		LDA	bikes_speed
		JMP	obj_increment_to_X ; A is X_low

; =============== S U B	R O U T	I N E =======================================


object_vodovorot:			; ...
		LDA	#3
		JSR	obj_increment_to_X ; A is X_low
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_C9F6
		LDA	Objects_gfx_frame,X
		BNE	loc_0_C98B
		LDA	objects_some_anim,X ; some obj X speed
		AND	#$80
		ORA	#$40
		STA	Objects_dir,X	; / angle

loc_0_C98B:				; ...
		LDA	#$9C
		LDX	#snd_channel3
		JSR	play_sound	; A is sound id, X - jmp_off (ch ID)
		JSR	sub_0_C9D5
		BEQ	locret_0_C9CF
		LDA	Objects_death_timer,Y ;	undamage time
		ORA	stop_scroll_flag
		BNE	locret_0_C9CF
		LDA	#$10
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	locret_0_C9CF
		LDA	#$C
		JSR	obj_compare_Y?
		BNE	locret_0_C9CF
		TYA
		TAX
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	copy_objects_XYZ_and_dir
		LDA	Objects_Life,X
		STA	tmp_var_15	;  / Object Counter / various tmp
		SEC
		SBC	#1		; vodovorot life reduce
		BCC	loc_0_C9D0
		BEQ	loc_0_C9D0
		STA	Objects_Life,X
		EOR	tmp_var_15	;  / Object Counter / various tmp
		AND	#$F8
		BEQ	hold_by_vodovorot_frame
		INC	update_ui_flag

hold_by_vodovorot_frame:		; ...
		LDA	#$13
		STA	player1_obj_wanted_frame,X

locret_0_C9CF:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_C9D0:				; ...
		TXA
		TAY
		JMP	death_effects_on_bikes
; End of function object_vodovorot


; =============== S U B	R O U T	I N E =======================================


sub_0_C9D5:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		CLC
		ADC	Objects_dir,X	; / angle

loc_0_C9DC:				; ...
		STA	Objects_dir,X	; / angle
		LDA	Objects_Life,X
		STA	Objects_X_speed,X
		JSR	obj_moving_by_speed
		LDA	#$ED
		STA	Objects_gfx_frame,X
; End of function sub_0_C9D5


; =============== S U B	R O U T	I N E =======================================

; Записать в Y id игрока 0 или 1. (четн/нечет кадр)

load_PL_1_or_2:				; ...
		LDA	FrameCounter
		AND	#1
		TAY
		LDA	Objects_TypeID,Y
		RTS
; End of function load_PL_1_or_2

; ---------------------------------------------------------------------------

loc_0_C9F6:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_brevno:				; ...
		LDA	#3
		JSR	obj_increment_to_X ; A is X_low
		LDY	#$F2
		JSR	loc_0_B978
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_C9F6
		LDA	Objects_Ypos_L,X
		CMP	#$B3
		BCC	loc_0_CA13
		CMP	#$D5
		BCC	loc_0_CA21

loc_0_CA13:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		CLC
		ADC	#1
		EOR	#$FF
		STA	objects_some_anim,X ; some obj X speed
		JSR	loc_0_C9DC

loc_0_CA21:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		JSR	loc_0_C9DC
		BEQ	loc_0_CA79
		LDA	Objects_death_timer,Y ;	undamage time
		ORA	stop_scroll_flag
		BNE	loc_0_CA79
		LDA	#$C
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	loc_0_CA79
		LDA	#$12
		JSR	obj_compare_Y?
		BNE	loc_0_CA79
		LDA	Objects_Zpos_L,Y
		SBC	Objects_Zpos_L,X
		CMP	#$C
		BCS	loc_0_CA79
		LDA	#8
		STA	some_sound_flag	; by tables
		INC	update_ui_flag
		LDA	#$80
		STA	Objects_dir,Y	; / angle
		LDA	#$60
		STA	Objects_X_speed,Y
		LDA	#2
		STA	Objects_Z_speed,Y
		LDA	Objects_Life,Y
		SEC

brevno_dmg:
		SBC	#$18
		BCC	death_effects_on_bikes
		STA	Objects_Life,Y
		BCS	loc_0_CA76
; End of function object_brevno


; =============== S U B	R O U T	I N E =======================================


death_effects_on_bikes:			; ...
		JSR	bike_death_effects
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	Objects_TypeID,X
		CMP	#$76
		BEQ	locret_0_CA7E

loc_0_CA76:				; ...
		JMP	create_object_4
; ---------------------------------------------------------------------------

loc_0_CA79:				; ...
		LDA	#$EC
		STA	Objects_gfx_frame,X

locret_0_CA7E:				; ...
		RTS
; End of function death_effects_on_bikes


; =============== S U B	R O U T	I N E =======================================


bike_death_effects:			; ...
		STY	tmp_var_18
		LDX	#$25
		JSR	sub_0_B8AD
		LDY	tmp_var_18
		LDA	#4
		STA	Objects_Z_speed,Y
		LDA	#0
		STA	Objects_Z_spd_sub,Y
		STA	bikes_speed_sub
		STA	bikes_speed
		LDA	#$80
		STA	Objects_X_speed,Y
		LDA	#$D0
		STA	players_obj_unk,Y
		RTS
; End of function bike_death_effects

; ---------------------------------------------------------------------------

loc_0_CAA1:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_surfcity_watermine:		; ...
		LDA	Objects_gfx_frame,X
		BNE	loc_0_CAB8
		JSR	levels_physics_bank5
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#8
		ORA	stop_scroll_flag
		BNE	loc_0_CAA1
		STA	Objects_Z_floor,X

loc_0_CAB8:				; ...
		LDA	bikes_speed
		BEQ	loc_0_CACB
		SEC
		SBC	#4
		BCC	loc_0_CAC5
		LSR	A
		JSR	obj_increment_to_X ; A is X_low

loc_0_CAC5:				; ...
		JSR	obj_moving_by_speed
		JSR	compare_pos_vs_players ; watermines and	robots

loc_0_CACB:				; ...
		JSR	sub_0_B976
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_CAA1
		LDA	#$EE
		STA	Objects_gfx_frame,X
		RTS
; End of function object_surfcity_watermine

; ---------------------------------------------------------------------------

loc_0_CAD9:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


sub_0_CADC:				; ...
		LDY	Objects_TargetID,X
		LDA	Objects_Ypos_L,Y
		SBC	Objects_Ypos_L,X
		STA	tmp_var_8d
		LDA	#$50
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		LDA	Level_ID
		CMP	#clinger_winger
		BEQ	loc_0_CAFA
		LDA	tmp_var_8d
		ADC	#6
		CMP	#$C
		BCS	loc_0_CB04

loc_0_CAFA:				; ...
		LDA	tmp_var_8F
		AND	#$80
		EOR	#$80
		STA	Objects_dir,X	; / angle
		RTS
; ---------------------------------------------------------------------------

loc_0_CB04:				; ...
		JMP	loc_0_C7B9
; End of function sub_0_CADC


; =============== S U B	R O U T	I N E =======================================


big_blag_and_ball_death:		; ...
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_CB26
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BPL	loc_0_CB26
		LDA	Level_ID
		CMP	#rat_race
		BEQ	loc_0_CB1B
		CMP	#clinger_winger
		BNE	loc_0_CAA1	; big blag?

loc_0_CB1B:				; ...
		DEC	Objects_death_timer,X ;	undamage time
		BMI	loc_0_CB6E
		LDA	#$80
		STA	timer_end_music
		BNE	loc_0_CAD9	; jump

loc_0_CB26:				; ...
		JSR	upd_state_
		JSR	sub_0_9E59
		JSR	sub_0_9E59
		LDA	#$FB
		JSR	object_inc_to_Xspeed ; A is speed
		JSR	sub_0_CB5E
		LDA	Objects_Z_floor,X
		BNE	loc_0_CB54
		LDA	Obj_Z_floor_tmp
		BEQ	loc_0_CB54
		JSR	some_state_upd
		LDA	#0
		STA	Objects_AnimID,X ; номер движения для запуска
		JSR	play_sound_62
		LDA	#$F
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	#$14
		STA	some_sound_flag	; by tables

loc_0_CB54:				; ...
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		AND	#2
		LSR	A
		ADC	#$EF
		JMP	loc_0_CCD8
; End of function big_blag_and_ball_death


; =============== S U B	R O U T	I N E =======================================


sub_0_CB5E:				; ...
		LDA	#$C0
		JSR	objects_Z_phys?
		JSR	obj_moving_by_speed
		LDA	Objects_death_timer,X ;	undamage time
		BNE	loc_0_CB6E
		JMP	levels_physics_bank5
; ---------------------------------------------------------------------------

loc_0_CB6E:				; ...
		LDA	#0
		STA	Objects_Z_floor,X
		RTS
; End of function sub_0_CB5E


; =============== S U B	R O U T	I N E =======================================


object_electroball_phase2:		; ...
		LDA	Objects_Life,X
		BMI	electroball_half_life
		JSR	big_blag_and_electroball_sub

loc_0_CB7C:				; ...
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	Electroball_set_Y_low
		JMP	electroball_set_gfx
; ---------------------------------------------------------------------------

electroball_half_life:			; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	electroball_movements
		JSR	big_blag_and_ball_death
		JMP	loc_0_CBD5
; ---------------------------------------------------------------------------

electroball_movements:			; ...
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		BPL	loc_0_CB9A
		JSR	sub_0_CBDE
		JMP	loc_0_CB7C
; ---------------------------------------------------------------------------

loc_0_CB9A:				; ...
		LDA	Objects_dir,X	; / angle
		PHA
		LDA	FrameCounter
		ASL	A
		ASL	A
		ASL	A
		STA	Objects_dir,X	; / angle
		LDA	#$C0
		STA	Objects_X_speed,X
		JSR	sub_0_F4B5
		PLA
		STA	Objects_dir,X	; / angle
		LDA	#$80
		STA	Objects_X_speed,X
		LDA	#1
		JSR	loc_0_D6DE
		LDA	FrameCounter
		AND	#3
		ORA	Objects_Zpos_H,X
		BNE	loc_0_CBC8
		DEC	Objects_Zpos_L,X

loc_0_CBC8:				; ...
		LDA	#$20
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	#$FF
		STA	Objects_Z_speed,X
		JSR	sub_0_CCE7

loc_0_CBD5:				; ...
		JSR	object_vs_camera_check ; lock obj to camera
		JSR	levels_physics_bank5
		JMP	electroball_set_gfx
; End of function object_electroball_phase2


; =============== S U B	R O U T	I N E =======================================


sub_0_CBDE:				; ...
		JSR	sub_0_E183
		JMP	loc_0_CB54
; End of function sub_0_CBDE


; =============== S U B	R O U T	I N E =======================================


object_big_blag:			; ...
		LDA	Objects_gfx_frame,X
		BNE	loc_0_CBEE
		LDA	#$80		; time of fear?
		STA	Obj_various_cnt,X

loc_0_CBEE:				; ...
		LDA	Obj_various_cnt,X
		BEQ	big_blag_and_electroball_sub
		DEC	Obj_various_cnt,X
		LDA	#$80
		STA	Objects_dir,X	; / angle
		JSR	obj_set_flags_by_dir_
		JSR	write_anim_fear
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
; End of function object_big_blag


; =============== S U B	R O U T	I N E =======================================


big_blag_and_electroball_sub:		; ...
		JSR	object_vs_camera_check ; lock obj to camera
		LDA	Level_ID
		EOR	#clinger_winger
		BEQ	loc_0_CC0E
		LDA	#$1E

loc_0_CC0E:				; ...
		STA	camera_lock_cnt
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		BMI	sub_0_CBDE
		LDA	Objects_AnimID,X ; номер движения для запуска
		ORA	Objects_death_timer,X ;	undamage time
		BNE	loc_0_CC30
		STA	bikes_speed_sub
		STA	bikes_speed
		LDA	Objects_Z_speed,X
		CMP	#$F8
		BNE	loc_0_CC2D
		LDA	#$5E
		STA	Objects_AnimID,X ; номер движения для запуска

loc_0_CC2D:				; ...
		JSR	sub_0_CCE7

loc_0_CC30:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		ORA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_CC3B
		JMP	big_blag_and_ball_death
; ---------------------------------------------------------------------------

loc_0_CC3B:				; ...
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BEQ	loc_0_CCA0
		CMP	#$30
		BCC	loc_0_CC58
		LDA	Level_ID
		CMP	#clinger_winger
		BNE	loc_0_CC54
		LDA	#1
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		JSR	play_sound_16
		BNE	loc_0_CC58

loc_0_CC54:				; ...
		LDA	#8
		STA	some_sound_flag	; by tables

loc_0_CC58:				; ...
		DEC	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BNE	loc_0_CCCD
		JSR	set_target_random
		JSR	sub_0_CADC
		JSR	obj_set_flags_by_dir_
		LDA	Level_ID
		CMP	#clinger_winger
		BEQ	loc_0_CC71
		LDA	Obj_various_cnt,X
		BNE	loc_0_CC92

loc_0_CC71:				; ...
		LDA	#$60
		STA	Objects_X_speed,X
		LDY	Objects_Life,X
		CPY	#$C0
		BCS	loc_0_CC92
		CPY	#$80
		LDA	#7
		BCS	loc_0_CC85
		LDA	#3

loc_0_CC85:				; ...
		AND	RandomValue_2
		BNE	loc_0_CC92
		LDA	#$40
		STA	Objects_cnt3,X
		LDA	#$C
		BNE	loc_0_CC9D

loc_0_CC92:				; ...
		LDA	#0
		STA	Objects_cnt3,X
		LDA	RandomValue_1
		AND	#4
		ADC	#2

loc_0_CC9D:				; ...
		STA	Objects_Z_speed,X

loc_0_CCA0:				; ...
		LDA	Objects_cnt3,X
		BEQ	loc_0_CCB8
		DEC	Objects_cnt3,X
		BNE	loc_0_CCB8
		STA	Objects_X_speed,X
		LDA	#$F8
		STA	Objects_Z_speed,X
		LDY	Objects_TargetID,X
		JSR	copy_objects_XY

loc_0_CCB8:				; ...
		JSR	sub_0_CB5E
		LDA	Objects_Z_floor,X
		BNE	loc_0_CCCD
		JSR	play_sound_62
		LDA	#$FE
		STA	Objects_Z_speed,X
		LDA	#$30
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта

loc_0_CCCD:				; ...
		LDA	Objects_Z_floor,X
		CMP	#1
		LDA	#$F1
		BCS	loc_0_CCD8
		LDA	#$EF

loc_0_CCD8:				; ...
		STA	Objects_gfx_frame,X
		LDA	Objects_AnimID,X ; номер движения для запуска
		BEQ	locret_0_CCE6
		JSR	obj_set_flags_by_dir_
		JMP	start_read_anim__ ; + OR $80 for gfx frame
; ---------------------------------------------------------------------------

locret_0_CCE6:				; ...
		RTS
; End of function big_blag_and_electroball_sub


; =============== S U B	R O U T	I N E =======================================


sub_0_CCE7:				; ...
		LDA	Objects_dir,X	; / angle
		STA	tmp_var_92
		LDY	Obj_anims_timer,X ; timer used for gfx frames
		BNE	loc_0_CCFA
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#turned_left
		ASL	A
		STA	Objects_dir,X	; / angle

loc_0_CCFA:				; ...
		JSR	check_collision_Z_index_2
		PHP
		LDA	tmp_var_92
		STA	Objects_dir,X	; / angle
		LDA	#0
		STA	Objects_AnimID,X ; номер движения для запуска
		PLP
		BMI	locret_0_CD6B
		LDA	Objects_Xpos_L,X
		SBC	Objects_Xpos_L,Y
		ADC	#$10
		CMP	#$20
		BCS	loc_0_CD3C
		LDA	Level_ID
		CMP	#clinger_winger
		BNE	loc_0_CD22
		LDA	Objects_Life,X
		BMI	loc_0_CD3C

loc_0_CD22:				; ...
		LDA	Objects_Z_speed,X
		BPL	loc_0_CD3C
		CMP	#$FE
		BCS	loc_0_CD3C
		LDA	Objects_Zpos_L,X
		SEC
		SBC	Objects_Zpos_L,Y
		SBC	#4
		BMI	loc_0_CD3C
		JSR	player_razdavlen
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		RTS
; ---------------------------------------------------------------------------

loc_0_CD3C:				; ...
		LDA	Level_ID
		CMP	#intruder_excluder
		BEQ	locret_0_CD6B
		CMP	#clinger_winger
		BNE	loc_0_CD60
		LDA	players_shock_timer,Y
		ORA	Objects_AnimID,Y ; номер движения для запуска
		BNE	locret_0_CD6B
		LDA	Objects_Z_speed,X
		BPL	locret_0_CD6B
		LDA	#$80
		STA	Objects_X_speed,Y
		LDA	#4
		STA	Objects_Z_speed,Y
		JMP	electro_damage
; ---------------------------------------------------------------------------

loc_0_CD60:				; ...
		CMP	#SurfCity
		LDA	#$84		; big blag special move
		BCS	loc_0_CD68
		LDA	#$86

loc_0_CD68:				; ...
		JMP	write_obj_Anim_ID
; ---------------------------------------------------------------------------

locret_0_CD6B:				; ...
		RTS
; End of function sub_0_CCE7

; ---------------------------------------------------------------------------
byte_0_CD6C:	.BYTE $F2, $F2,	$F6, $F6 ; ...

; =============== S U B	R O U T	I N E =======================================


sub_0_CD70:				; ...
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BEQ	locret_0_CD7C
		STA	some_sound_flag	; by tables
		LDA	#0
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта

locret_0_CD7C:				; ...
		RTS
; End of function sub_0_CD70


; =============== S U B	R O U T	I N E =======================================


sub_0_CD7D:				; ...
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_CDB3
		LDA	objects_some_anim,X ; some obj X speed
		CMP	#$F0
		BCC	loc_0_CDA5
		LDA	#$80
		STA	Objects_X_speed,X
		LDA	#$C
		STA	some_sound_flag	; by tables
		LDA	#7
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	loc_0_F530
		LDA	#$46
		STA	Objects_TypeID,X
		PLA
		PLA
		LDA	#$46
		JMP	play_sound_ch2
; ---------------------------------------------------------------------------

loc_0_CDA5:				; ...
		LDA	#0
		STA	Objects_death_timer,X ;	undamage time
		LDA	objects_some_anim,X ; some obj X speed
		CLC
		ADC	#$C
		STA	objects_some_anim,X ; some obj X speed

loc_0_CDB3:				; ...
		JMP	some_state_upd
; End of function sub_0_CD7D


; =============== S U B	R O U T	I N E =======================================


object_general_slaughter:		; ...
		LDA	Objects_gfx_frame,X
		BNE	loc_0_CDC2
		LDY	#$E
		JSR	set_music_by_level_id
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_0_CDC2:				; ...
		JSR	obj_counter_inc_by_speed
		LDA	byte_0_CD6C,Y
		STA	Objects_gfx_frame,X
		JSR	sub_0_CD70
		LDA	Objects_cnt2,X
		CMP	#$B5
		BCC	sub_0_CE1A
		JSR	sub_0_CD7D
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		BPL	loc_0_CDE6
		JSR	sub_0_E183
		LDA	#$F5
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------

loc_0_CDE6:				; ...
		LDA	Objects_AnimID,X ; номер движения для запуска
		BNE	loc_0_CDEE
		JSR	sub_0_CCE7

loc_0_CDEE:				; ...
		LDA	Objects_cnt3,X
		BEQ	loc_0_CDF8
		DEC	Objects_cnt3,X
		BNE	loc_0_CE34

loc_0_CDF8:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		STA	Objects_X_speed,X
		JSR	obj_moving_by_speed
		LDA	Objects_AnimID,X ; номер движения для запуска
		BEQ	loc_0_CE34
		JSR	start_read_anim__ ; + OR $80 for gfx frame
		JMP	loc_0_CE34
; End of function object_general_slaughter


; =============== S U B	R O U T	I N E =======================================


write_dir_and_anim_fear:		; ...
		LDA	#$80
		STA	Objects_dir,X	; / angle
		INC	Objects_cnt2,X
		JSR	write_anim_fear
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		RTS
; End of function write_dir_and_anim_fear


; =============== S U B	R O U T	I N E =======================================


sub_0_CE1A:				; ...
		JSR	write_dir_and_anim_fear
		LDA	Objects_cnt2,X
		CMP	#$20
		BCS	loc_0_CE2A
		LDA	#$C
		STA	Camera_Y_pos_l_2
		BNE	loc_0_CE70	; jump

loc_0_CE2A:				; ...
		LDA	Objects_Z_floor,X
		BNE	loc_0_CE34
		LDA	#6
		STA	Objects_Z_speed,X

loc_0_CE34:				; ...
		LDA	#$C0
		JSR	objects_Z_phys?
		LDA	Objects_dir,X	; / angle
		PHA
		JSR	levels_physics_bank5
		PLA
		EOR	Objects_dir,X	; / angle
		BEQ	loc_0_CE5F
		LDA	Objects_cnt3,X
		BNE	loc_0_CE5A
		LDA	#$20
		STA	Objects_cnt3,X
		LDA	Objects_Z_floor,X
		BNE	loc_0_CE5A
		LDA	#4
		STA	Objects_Z_speed,X

loc_0_CE5A:				; ...
		LDA	#0
		STA	Objects_AnimID,X ; номер движения для запуска

loc_0_CE5F:				; ...
		LDA	Objects_Z_floor,X
		BNE	loc_0_CE70
		LDA	Obj_Z_floor_tmp
		BEQ	loc_0_CE70
		JSR	play_sound_62
		LDA	#8
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта

loc_0_CE70:				; ...
		JSR	obj_set_flags_by_dir
		RTS
; End of function sub_0_CE1A


; =============== S U B	R O U T	I N E =======================================


object_robu_manus:			; ...
		LDA	Objects_gfx_frame,X
		BNE	loc_0_CEC7
		LDY	Camera_Y_pos_l	;  / level_position - on v levels
		CPY	#$10
		CPY	#$50
		BCC	loc_0_CEA2
		LDY	#1

loc_0_CE83:				; ...
		LDA	Objects_Zpos_H,Y
		CMP	#$1F
		BEQ	loc_0_CE9E
		LDA	Objects_Z_floor,Y
		BNE	loc_0_CE9E
		LDA	#$18
		STA	players_obj_unk16,Y
		LDA	#7
		STA	Objects_Z_speed,Y
		LDA	#$1C
		STA	Objects_death_timer,Y ;	undamage time

loc_0_CE9E:				; ...
		DEY
		BPL	loc_0_CE83
		RTS
; ---------------------------------------------------------------------------

loc_0_CEA2:				; ...
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		INC	Objects_gfx_frame,X
		LDA	#$C
		STA	Camera_Y_pos_l_2
		LDA	#$40
		STA	Objects_cnt3,X
		LDA	#$20
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDY	#4
		LDX	#3
		JSR	jump_from_bank0
		LDY	#$E
		JSR	set_music_by_level_id
		JMP	frame_end_wait_nmi
; ---------------------------------------------------------------------------

loc_0_CEC7:				; ...
		LDA	Objects_cnt2,X
		BMI	loc_0_CECF
		JSR	write_dir_and_anim_fear

loc_0_CECF:				; ...
		JSR	sub_0_CF59
		JSR	sub_0_CD7D
		JSR	sub_0_CD70
		JSR	sub_0_CB5E
		JSR	loc_0_CE5F
		LDA	Objects_AnimID,X ; номер движения для запуска
		BNE	loc_0_CEE8
		JSR	sub_0_CCE7
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_0_CEE8:				; ...
		LDY	Objects_TargetID,X
		LDA	Objects_Xpos_L,Y
		SBC	Objects_Xpos_L,X
		ROR	A
		ROR	A
		AND	#$40
		EOR	#$48
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	#$F7
		LDY	Objects_Z_floor,X
		BNE	loc_0_CF46
		TYA
		STA	Objects_X_speed,X
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BEQ	loc_0_CF14
		LDA	Objects_cnt2,X
		BPL	loc_0_CF14
		LDA	#$88
		JSR	write_obj_Anim_ID

loc_0_CF14:				; ...
		LDA	Objects_AnimID,X ; номер движения для запуска
		BEQ	loc_0_CF21
		LDA	#$70
		JSR	play_sound_ch4
		JSR	start_read_anim__ ; + OR $80 for gfx frame

loc_0_CF21:				; ...
		JSR	sub_0_CF4A
		BCS	loc_0_CF44
		LDA	#0
		STA	Obj_various_cnt,X
		LDA	RandomValue_2
		AND	#2
		ORA	#5
		STA	Objects_Z_speed,X
		LDA	RandomValue_3
		AND	#$80
		STA	Objects_dir,X	; / angle
		LDA	objects_some_anim,X ; some obj X speed
		STA	Objects_X_speed,X
		JSR	set_target_random

loc_0_CF44:				; ...
		LDA	#$F8

loc_0_CF46:				; ...
		STA	Objects_gfx_frame,X
		RTS
; End of function object_robu_manus


; =============== S U B	R O U T	I N E =======================================


sub_0_CF4A:				; ...
		INC	Obj_various_cnt,X
		LDA	objects_some_anim,X ; some obj X speed
		EOR	#$F0
		LSR	A
		ADC	#$10
		CMP	Obj_various_cnt,X
		RTS
; End of function sub_0_CF4A


; =============== S U B	R O U T	I N E =======================================


sub_0_CF59:				; ...
		LDA	Objects_X_speed,X
		AND	#$FE
		STA	Objects_X_speed,X
		LDA	#$FC
		JMP	object_inc_to_Xspeed ; A is speed
; End of function sub_0_CF59


; =============== S U B	R O U T	I N E =======================================


obj_set_flags_by_dir:			; ...
		LDA	Objects_dir,X	; / angle
		AND	#$7F
		SEC
		SBC	#$31
		CMP	#$20
		BCC	locret_0_CF8F

obj_set_flags_by_dir_:			; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$BF
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	Objects_AnimID,X ; номер движения для запуска
		CMP	#$2C
		BEQ	locret_0_CF8F

obj_set_flags_by_dir__:			; ...
		LDA	Objects_dir,X	; / angle
		ADC	#$2F
		LSR	A
		AND	#$40
		ORA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?

locret_0_CF8F:				; ...
		RTS
; End of function obj_set_flags_by_dir

; ---------------------------------------------------------------------------
rash_walk_frames:.BYTE 4, 5, 4,	8, 6, 7, 6, 3 ;	...
rash_run_frames:.BYTE 5, 5, 8, 8, 7, 7,	3, 3 ; ...
rash_with_obj_frames:.BYTE $11,	$12, $11, $10 ;	...
rash_move_UD_frames:.BYTE 1, 9,	1, $A	; ...

; =============== S U B	R O U T	I N E =======================================


muha_add_life:				; ...
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		TAX
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	Objects_X_speed,Y
		CMP	#$F8
		BNE	loc_0_CFC6
		LDA	Objects_Life,X
		CLC
		ADC	#8
		CMP	#$2F
		BCC	loc_0_CFC1
		LDA	#$2F

loc_0_CFC1:				; ...
		STA	Objects_Life,X
		INC	update_ui_flag

loc_0_CFC6:				; ...
		LDA	#0
		JSR	write_obj_Anim_ID
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_0_CFCD:				; ...
		JMP	clear_object_vars ; remove object
; End of function muha_add_life


; =============== S U B	R O U T	I N E =======================================

; язык жабы

obj_tongue:				; ...
		LDY	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		JSR	copy_objects_XYZ
		LDA	Obj_anims_timer,Y ; timer used for gfx frames
		BNE	loc_0_CFCD
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	loc_0_CFE5
		DEC	Obj_anims_timer,X ; timer used for gfx frames
		BNE	locret_0_CF8F

loc_0_CFE5:				; ...
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$40
		CMP	#$40
		LDA	#8
		BCC	loc_0_CFF2
		LDA	#$F8

loc_0_CFF2:				; ...
		STA	Objects_cnt3,X
		LDY	Objects_dir,X	; / angle
		LDA	Objects_Y_shad,Y
		SBC	Objects_Z_floor,Y
		STA	Objects_Life,X
		LDY	#2

loc_0_D003:				; ...
		LDA	Objects_TypeID,Y
		CMP	#$A
		BEQ	loc_0_D011

loc_0_D00A:				; ...
		INY
		CPY	#$F
		BNE	loc_0_D003
		BEQ	loc_0_D04D

loc_0_D011:				; ...
		LDA	Objects_Y_shad,Y
		SBC	Objects_Z_floor,Y
		SBC	Objects_Y_shad,X
		ADC	#$1A
		CMP	#$16
		BCS	loc_0_D00A
		LDA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		BMI	loc_0_D00A
		LDA	Objects_X_shadow,Y
		SBC	Objects_X_shadow,X
		ADC	#7
		CMP	#$14
		BCS	loc_0_D00A
		TYA
		TAX
		LDA	#0
		STA	tmp_var_8b
		JSR	loc_0_DD6D
		LDA	#$C
		LDX	#snd_channel1
		JSR	play_sound	; A is sound id, X - jmp_off (ch ID)
		LDA	#$C
		STA	Obj_anims_timer,X ; timer used for gfx frames
		LDA	#$F8
		STA	Objects_X_speed,X
		BNE	loc_0_D05E

loc_0_D04D:				; ...
		LDA	Objects_AnimID,X ; номер движения для запуска
		CLC
		ADC	Objects_Anim_Ptr,X ; оффсет чтения анимации
		BMI	loc_0_D067
		STA	Objects_AnimID,X ; номер движения для запуска
		CMP	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		BCC	locret_0_D066

loc_0_D05E:				; ...
		LDA	#0
		SBC	Objects_Anim_Ptr,X ; оффсет чтения анимации
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации

locret_0_D066:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_D067:				; ...
		JMP	muha_add_life
; End of function obj_tongue


; =============== S U B	R O U T	I N E =======================================

; A is speed

object_inc_to_Xspeed:			; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_X_speed,X
		CMP	#$FF
		BEQ	max_speed
		ADC	tmp_var_15	;  / Object Counter / various tmp
		BCS	loc_0_D079
		LDA	#0

loc_0_D079:				; ...
		STA	Objects_X_speed,X
		RTS
; ---------------------------------------------------------------------------

max_speed:				; ...
		JMP	obj_moving_by_speed
; End of function object_inc_to_Xspeed


; =============== S U B	R O U T	I N E =======================================

; remove object

clear_object_vars:			; ...
		LDA	#<Objects_TypeID ; $3c1
		STA	tmp_var_19
		LDA	#>Objects_TypeID
		STA	tmp_var_1A
		LDA	Object_RamSlotID_tmp ; id saved	for objects functions
		LDX	#$21

loc_0_D08C:				; ...
		TAY
		LDA	#0
		STA	(tmp_var_19),Y
		DEX
		BEQ	locret_0_D09E
		TYA
		CLC
		ADC	#$F
		BCC	loc_0_D08C
		INC	tmp_var_1A
		BNE	loc_0_D08C

locret_0_D09E:				; ...
		RTS
; End of function clear_object_vars

; ---------------------------------------------------------------------------
		JMP	clear_object_vars ; unused?

; =============== S U B	R O U T	I N E =======================================


object_last_lvl_flying:			; ...
		JSR	obj_set_flags_by_dir
		LDA	Objects_Ypos_L,X
		CMP	#$D7
		BEQ	loc_0_D0F9
		LDA	Objects_Y_shad,X
		CMP	#$B0
		BCS	loc_0_D0B8
		LDA	Objects_gfx_frame,X
		BNE	loc_0_D0C5

loc_0_D0B8:				; ...
		LDA	#1
		STA	Objects_X_speed,X
		LDA	#0
		STA	Objects_TargetID,X
		STA	objects_some_anim,X ; some obj X speed

loc_0_D0C5:				; ...
		JSR	sub_0_96BE
		LDA	#0
		STA	Objects_Z_floor,X
		CPX	players_obj_unk14
		BEQ	loc_0_D0D7
		CPX	player2_obj_unk14
		BNE	loc_0_D0E3

loc_0_D0D7:				; ...
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		AND	#4
		LSR	A
		LSR	A
		ADC	#$BC
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------

loc_0_D0E3:				; ...
		LDA	#$BD
		STA	Objects_gfx_frame,X
		LDA	Objects_X_speed,X
		CMP	#$30
		BCC	loc_0_D10E
		LDA	objects_some_anim,X ; some obj X speed
		BEQ	loc_0_D10E
		DEC	Objects_gfx_frame,X
		BNE	loc_0_D10E

loc_0_D0F9:				; ...
		LDY	#$E8
		JSR	loc_0_B978
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		CLC
		ADC	#9
		AND	#$10
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		ADC	#$BC
		STA	Objects_gfx_frame,X

loc_0_D10E:				; ...
		LDA	Objects_gfx_frame,X
		CMP	#$BC
		BNE	locret_0_D11A
		LDA	#$F
		JSR	sub_0_F10E

locret_0_D11A:				; ...
		RTS
; End of function object_last_lvl_flying

; ---------------------------------------------------------------------------

loc_0_D11B:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_palka_v_stene:			; ...
		JSR	get_object_Y_on_screen
		BCS	loc_0_D11B
		LDA	Obj_various_cnt,X
		BNE	loc_0_D11B
		JSR	load_PL_1_or_2	; Записать в Y id игрока 0 или 1. (четн/нечет кадр)
		BEQ	loc_0_D176
		LDA	Objects_death_timer,Y ;	undamage time
		AND	#$80
		ORA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		ORA	Objects_Linker_ID,Y ; флаг/id какой объект меня	прицепил
		ORA	Objects_LinkedObj_ID,Y ; флаг/id присоединённого объекта
		BNE	loc_0_D176
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BEQ	loc_0_D147
		DEC	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BNE	loc_0_D176

loc_0_D147:				; ...
		LDA	#8
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	loc_0_D176
		LDA	#8
		JSR	object_compare_Z
		BNE	loc_0_D176
		LDA	#$18
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		TYA
		CLC
		ADC	#$81
		STA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		TXA
		ADC	#$81
		STA	Objects_Linker_ID,Y ; флаг/id какой объект меня	прицепил
		LDA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$DF
		STA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		TYA
		TAX
		JSR	some_state_upd
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_0_D176:				; ...
		LDA	Objects_Xpos_L,X
		SEC
		SBC	global_var2
		TAY
		LDA	Objects_Xpos_H,X
		SBC	global_var3
		ROR	A
		ROR	A
		ROR	A
		EOR	#$40
		AND	#$40
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BEQ	loc_0_D192
		TYA
		EOR	#$FF
		TAY

loc_0_D192:				; ...
		TYA
		BPL	loc_0_D197
		EOR	#$FF

loc_0_D197:				; ...
		LSR	A
		LSR	A
		LSR	A
		STA	Objects_cnt2,X
		LDA	#$BF
		STA	Objects_gfx_frame,X
		RTS
; End of function object_palka_v_stene

; ---------------------------------------------------------------------------

loc_0_D1A3:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_last_lvl_head:			; ...
		JSR	get_object_Y_on_screen
		CMP	#16
		BCC	loc_0_D1A3
		LDA	#$A
		STA	camera_lock_cnt
		JSR	obj_set_dir_by_Xlow
		LDA	objects_some_anim,X ; some obj X speed
		BEQ	loc_0_D1C9
		DEC	objects_some_anim,X ; some obj X speed
		BNE	loc_0_D1BE

loc_0_D1BE:
		LDA	#1
		JSR	objects_add_Z?	; A is Z_speed

loc_0_D1C3:				; ...
		LDA	#$C4
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------

loc_0_D1C9:				; ...
		LDA	#7
		JSR	sub_0_F10E
		INC	Objects_cnt2,X
		BNE	loc_0_D1C3
		DEC	objects_some_anim,X ; some obj X speed
		RTS
; End of function object_last_lvl_head

; ---------------------------------------------------------------------------

loc_0_D1D7:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_swellcheeks:			; ...
		LDA	Objects_Ypos_L,X
		CMP	#$D8
		BCC	loc_0_D1E5
		LDA	#5
		STA	camera_lock_cnt

loc_0_D1E5:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	loc_0_D23C
		LDA	#0
		STA	Objects_cnt2,X
		STA	objects_some_anim,X ; some obj X speed
		LDA	#$FC
		JSR	object_inc_to_Xspeed ; A is speed
		JSR	obj_moving_by_speed
		JSR	sub_0_9E59
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$40
		BNE	loc_0_D20F
		STA	Objects_Z_speed,X
		LDA	#$40
		JSR	obj_add_Z_by_Zspd?_
		JMP	loc_0_D30A
; ---------------------------------------------------------------------------

loc_0_D20F:				; ...
		LDA	#$BD
		STA	Objects_gfx_frame,X
		JSR	objects_Z?
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_D22F
		LDA	Objects_Z_speed,X
		CMP	#$FE
		BNE	loc_0_D226
		DEC	Objects_Z_speed,X

loc_0_D226:				; ...
		INC	Obj_anims_timer,X ; timer used for gfx frames
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_D1D7
		RTS
; ---------------------------------------------------------------------------

loc_0_D22F:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		CMP	#$A0
		BCS	locret_0_D23B
		LDA	#1
		STA	Obj_anims_timer,X ; timer used for gfx frames

locret_0_D23B:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_D23C:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		BEQ	loc_0_D244
		JSR	add_to_obj_X_with_dir

loc_0_D244:				; ...
		LDA	Objects_Ypos_L,X
		CMP	#$D8
		BCS	loc_0_D26E
		JSR	get_object_Y_on_screen
		CMP	#$D8
		BCS	loc_0_D1D7
		INC	Obj_various_cnt,X
		LDA	Obj_various_cnt,X
		AND	#$3F
		CMP	#$20
		LDA	#$BC
		ADC	#0
		STA	Objects_gfx_frame,X
		JSR	loc_0_F032
		LDA	Obj_various_cnt,X
		AND	#$3F
		JMP	loc_0_F051
; ---------------------------------------------------------------------------

loc_0_D26E:				; ...
		LDA	#$80
		STA	Objects_X_speed,X
		LDA	Objects_cnt2,X
		BNE	loc_0_D2CD
		LDA	FrameCounter
		AND	#$1F
		BNE	loc_0_D286
		LDA	objects_some_anim,X ; some obj X speed
		BEQ	loc_0_D286
		DEC	objects_some_anim,X ; some obj X speed

loc_0_D286:				; ...
		LDA	FrameCounter
		AND	#4
		BNE	loc_0_D28F
		INC	Objects_gfx_frame,X

loc_0_D28F:				; ...
		LDY	#$D0
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_D29F
		JSR	get_object_Y_on_screen
		CMP	#$4C
		BCC	loc_0_D2A6
		LDY	#$30

loc_0_D29F:				; ...
		TYA
		JSR	objects_Z_phys?
		JMP	loc_0_D2FF
; ---------------------------------------------------------------------------

loc_0_D2A6:				; ...
		LDA	RandomValue_1
		ADC	Objects_Xpos_L,X
		AND	#$7F
		BNE	loc_0_D2FF
		LDA	#1
		STA	objects_some_anim,X ; some obj X speed
		JSR	set_target_random
		JSR	sub_0_BE62
		LDA	#2
		STA	Objects_Z_speed,X
		LDA	#6
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	RandomValue_1
		AND	#3
		BNE	loc_0_D2CD
		LSR	Objects_various_flags,X	; для пушек ID прицепленного объекта

loc_0_D2CD:				; ...
		INC	Objects_cnt2,X
		BNE	loc_0_D2D2

loc_0_D2D2:
		LDY	Objects_TargetID,X
		LDA	#$C
		JSR	object_compare_Z
		BEQ	loc_0_D2E7
		LDA	#$E8
		ROL	tmp_var_8F
		BCC	loc_0_D2E4
		LDA	#$18

loc_0_D2E4:				; ...
		JSR	objects_Z_phys?

loc_0_D2E7:				; ...
		LDA	Objects_cnt2,X
		CMP	#$2C
		BCC	loc_0_D2FF
		LDA	FrameCounter
		AND	#$F
		BNE	loc_0_D2FF
		LDA	objects_some_anim,X ; some obj X speed
		CMP	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BEQ	loc_0_D2FF
		INC	objects_some_anim,X ; some obj X speed

loc_0_D2FF:				; ...
		JSR	obj_hitting_index_A
		JSR	obj_set_flags_by_dir
		LDA	#0
		STA	Objects_Z_floor,X

loc_0_D30A:				; ...
		LDA	#$10
		LDY	Objects_cnt2,X
		BEQ	loc_0_D314
		LSR	A
		LDA	#0

loc_0_D314:				; ...
		AND	FrameCounter
		CMP	#1
		LDA	#$BC
		ADC	#0
		STA	Objects_gfx_frame,X
		RTS
; End of function object_swellcheeks


; =============== S U B	R O U T	I N E =======================================


object_last_lvl_end:			; ...
		LDA	Objects_cnt2,X
		BNE	loc_0_D336
		LDA	#$C
		STA	Objects_Z_speed
		STA	player2_Z_speed
		JSR	loc_0_FE26
		JSR	create_obj_screen_light	; object #$5B
		JSR	play_sound_6C

loc_0_D336:				; ...
		INC	Objects_cnt2,X
		BMI	loc_0_D33C
		RTS
; ---------------------------------------------------------------------------

loc_0_D33C:				; ...
		JMP	level_completed
; End of function object_last_lvl_end


; =============== S U B	R O U T	I N E =======================================


object_angelica_ili_pimpl:		; ...
		LDA	Objects_Life,X
		BEQ	loc_0_D348
		DEC	Objects_Life,X
		RTS
; ---------------------------------------------------------------------------

loc_0_D348:				; ...
		JSR	sub_0_CB5E
		LDA	objects_some_anim,X ; some obj X speed
		STA	Objects_gfx_frame,X
		RTS
; End of function object_angelica_ili_pimpl


; =============== S U B	R O U T	I N E =======================================


sub_0_D352:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		BEQ	loc_0_D35B
		DEC	objects_some_anim,X ; some obj X speed
		RTS
; ---------------------------------------------------------------------------

loc_0_D35B:				; ...
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		CMP	#$56
		BCS	loc_0_D36B
		LDA	#1
		CLC
		JSR	objects_add_Z?	; A is Z_speed
		JMP	sub_0_D40F
; ---------------------------------------------------------------------------

loc_0_D36B:				; ...
		INC	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		CMP	#$D0
		BEQ	loc_0_D37B
		LDA	#$81
		STA	Objects_gfx_frame,X

locret_0_D37A:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_D37B:				; ...
		LDA	game_end_caller_var
		BEQ	config?_game_end
		DEC	Objects_various_flags,X	; для пушек ID прицепленного объекта
		DEC	Objects_cnt3,X
		BNE	locret_0_D37A
		LDA	#0
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		LDA	#$18
		JMP	loc_0_D515
; ---------------------------------------------------------------------------

config?_game_end:			; ...
		INC	LevelCfgAdr_L	; текущий адрес	рома для чтения	объектов уровня
		BNE	continue_game_end_event
		INC	LevelCfgAdr_H

continue_game_end_event:		; ...
		INC	game_end_caller_var
		JMP	loc_0_DA24
; End of function sub_0_D352


; =============== S U B	R O U T	I N E =======================================


object_dark_queen:			; ...
		LDA	Objects_TargetID,X
		BMI	sub_0_D352
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_D3B9
		JSR	sub_0_CF4A
		LSR	A
		ADC	#$10
		STA	Obj_various_cnt,X
		LDA	#0
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	#5
		STA	Objects_Z_speed,X

loc_0_D3B9:				; ...
		JSR	sub_0_CD7D
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BNE	sub_0_D40F
		JSR	sub_0_CF59
		JSR	sub_0_CB5E
		JSR	obj_set_flags_by_dir
		LDA	Objects_AnimID,X ; номер движения для запуска
		BNE	loc_0_D3DB
		LDA	#$E
		JSR	check_collision_Z_index_2
		BMI	loc_0_D3DE
		LDA	#$8A
		JSR	write_obj_Anim_ID

loc_0_D3DB:				; ...
		JMP	start_read_anim__ ; + OR $80 for gfx frame
; ---------------------------------------------------------------------------

loc_0_D3DE:				; ...
		LDA	Objects_Z_floor,X
		CMP	#1
		LDA	#$81
		ADC	#0
		STA	Objects_gfx_frame,X
		JSR	sub_0_CF4A
		LSR	A
		ADC	#$30
		CMP	Obj_various_cnt,X
		BCS	locret_0_D405
		INC	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	#1
		STA	Objects_X_speed,X
		LDA	RandomValue_3
		STA	Objects_dir,X	; / angle
		JSR	sub_0_D4DA

locret_0_D405:				; ...
		RTS
; End of function object_dark_queen


; =============== S U B	R O U T	I N E =======================================


sub_0_D406:				; ...
		LDA	FrameCounter
		ROR	A
		BCC	locret_0_D40E
		INC	Objects_various_flags,X	; для пушек ID прицепленного объекта

locret_0_D40E:				; ...
		RTS
; End of function sub_0_D406


; =============== S U B	R O U T	I N E =======================================


sub_0_D40F:				; ...
		JSR	sub_0_D406
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		ROL	A
		LDA	#1
		BCC	loc_0_D445
		LDA	Objects_X_speed,X
		CMP	#$20
		LDA	#$FE
		BCS	loc_0_D445
		LDA	#0
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		STA	Obj_various_cnt,X
		STA	Objects_X_speed,X
		STA	Objects_Z_speed,X
		JSR	set_target_random
		LDY	Objects_TargetID,X
		LDA	Objects_Xpos_L,Y
		LDA	Objects_Xpos_L,X
		AND	#$80
		STA	Objects_dir,X	; / angle
		JMP	levels_physics_bank5
; ---------------------------------------------------------------------------

loc_0_D445:				; ...
		ADC	Objects_X_speed,X
		STA	Objects_X_speed,X
		LDA	Objects_dir,X	; / angle
		CLC
		ADC	Objects_cnt2,X
		STA	Objects_dir,X	; / angle
		DEC	Objects_cnt3,X
		BNE	loc_0_D45D
		JSR	sub_0_D4DA

loc_0_D45D:				; ...
		LDA	Objects_TargetID,X
		BMI	loc_0_D47F
		LDA	objects_some_anim,X ; some obj X speed
		SEC
		ROR	A
		CMP	Objects_X_speed,X
		BCC	loc_0_D46F
		LDA	Objects_X_speed,X

loc_0_D46F:				; ...
		JSR	change_obj_coord?_ ; A is speed
		LDA	#$90
		JSR	loc_0_F4BA
		LDA	#$90
		STA	Objects_Ypos_L,X
		JSR	levels_physics_bank5

loc_0_D47F:				; ...
		LDA	Objects_X_speed,X
		CMP	#$40
		BCC	loc_0_D488
		LDA	#$40

loc_0_D488:				; ...
		JSR	obj_unjk_cnt_add__
		LDA	Objects_X_speed,X
		CMP	#$70
		BCC	loc_0_D499
		CMP	#$90
		BCS	loc_0_D499
		LDA	FrameCounter
		ROR	A

loc_0_D499:				; ...
		LDA	#$82
		ADC	#0
		STA	Objects_gfx_frame,X
		LDA	byte_0_D4D6,Y
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	Objects_X_speed,X
		CMP	#$26
		BCC	locret_0_D4D5
		LDA	#$E
		JSR	check_collision_Z_index	; A= Z_index
		BMI	locret_0_D4D5
		LDA	Objects_Xpos_L,Y
		SBC	Objects_Xpos_L,X
		AND	#$80
		STA	Objects_dir,X	; / angle
		LSR	A
		ORA	#$A
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	#$82
		STA	Objects_gfx_frame,X
		TYA
		TAX
		LDA	#$A
		JSR	damage_from_tbl_heavy ;	A is dmg table ID*5
		LDA	#$C
		STA	some_sound_flag	; by tables

locret_0_D4D5:				; ...
		RTS
; End of function sub_0_D40F

; ---------------------------------------------------------------------------
byte_0_D4D6:	.BYTE $A, $A, $4A, $4A	; ...

; =============== S U B	R O U T	I N E =======================================


sub_0_D4DA:				; ...
		LDA	RandomValue_1
		AND	#7
		SBC	#3
		STA	Objects_cnt2,X
		LDA	RandomValue_2
		AND	#$3F
		ADC	#$20
		STA	Objects_cnt3,X
		LDA	Objects_Zpos_L,X
		AND	#$80
		ORA	Objects_Zpos_H,X
		BEQ	locret_0_D50B
		LDY	#2
		LDA	#$C0
		SBC	Objects_dir,X	; / angle
		BPL	loc_0_D503
		LDY	#$FE
		EOR	#$FF

loc_0_D503:				; ...
		LSR	A
		STA	Objects_cnt3,X
		TYA
		STA	Objects_cnt2,X

locret_0_D50B:				; ...
		RTS
; End of function sub_0_D4DA


; =============== S U B	R O U T	I N E =======================================


clears_between_levels?:			; ...
		LDA	Levels_passed_cnt
		BNE	loc_0_D512
		LDA	#1

loc_0_D512:				; ...
		ASL	A
		SBC	#0

loc_0_D515:				; ...
		STA	global_var3
		LDA	RandomValue_1
		AND	#3

loc_0_D51B:				; ...
		STA	timer_cont_scrn_sec
		LDA	#0
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		STA	ppu_ctrl1_val	;  > $80  кадр завершен
		TAX

clear_stack_:				; ...
		PHA
		DEX
		BNE	clear_stack_
		DEX
		TXS
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDA	#$FF
		STA	Level_ID
		LDA	#$F8
		STA	Camera_X_pos_l	;  / level_position - on h levels
		LDX	#$33
		LDY	#6
		JSR	jump_from_bank0
		LDX	#<sub_0_D54E
		LDY	#>sub_0_D54E	; $D54E
		JMP	set_nmi_func_ptr ; input X,Y
; End of function clears_between_levels?


; =============== S U B	R O U T	I N E =======================================


sub_0_D547:				; ...
		LDX	#$12
		LDY	#1
		JMP	jump_from_bank0
; End of function sub_0_D547


; =============== S U B	R O U T	I N E =======================================


sub_0_D54E:				; ...
		JSR	sub_0_D547
		LDX	#$FF
		TXS
		LDA	#$F8
		STA	Camera_X_pos_l	;  / level_position - on h levels
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		LDA	#0
		JSR	write_VScrlReg_ScreenON_UpdMusic
		LDA	global_var_cnt?
		BEQ	loc_0_D568
		DEC	global_var_cnt?
		BEQ	sub_0_D5C9

loc_0_D568:				; ...
		LDA	game_end_caller_var
		BNE	loc_0_D586
		JSR	joypads_reading
		LDA	InputTap_P1	; данные первого джойстика на нажатие
		ORA	InputTap_P2	; данные второго джойстика на нажатие
		BEQ	loc_0_D586
		LDY	global_var3
		BEQ	loc_0_D5A3
		LDX	#1

loc_0_D57B:				; ...
		LDA	Lives_Player1,X	; кол-во жизней	(сердечек)
		BMI	loc_0_D583
		LDA	InputTap_P1,X	; данные первого джойстика на нажатие
		BNE	sub_0_D5C9

loc_0_D583:				; ...
		DEX
		BPL	loc_0_D57B

loc_0_D586:				; ...
		LDX	#$36
		LDY	#6
		JSR	jump_from_bank0
		LDX	#$11

loc_0_D58F:				; ...
		LDA	scroll_tilemap_buff,X
		DEX
		INX
		INX
		CPX	#$C0
		BNE	loc_0_D58F
		LDA	Levels_passed_cnt
		BNE	loc_0_D5A0
		JSR	set_players_lifes ; continue

loc_0_D5A0:				; ...
		JMP	loc_0_E571
; ---------------------------------------------------------------------------

loc_0_D5A3:				; ...
		JMP	sub_0_E58F
; End of function sub_0_D54E

; ---------------------------------------------------------------------------
level_planA_pic:.BYTE 0, 0, 0, 0, 1, 3,	2, 2, 1, 3, 3, 2, 1, 3 ; ...
; ---------------------------------------------------------------------------

loc_0_D5B4:				; ...
		JMP	sub_0_D8C4
; ---------------------------------------------------------------------------
Level_ID_Table:	.BYTE 0, 1, 2, 3, 4, $C, 8, 6, 7, $B, 9, $A, 5,	$D, 1 ;	...
; ---------------------------------------------------------------------------

loc_0_D5C6:				; ...
		JMP	sub_0_E6C3

; =============== S U B	R O U T	I N E =======================================


sub_0_D5C9:				; ...
		LDA	game_end_caller_var
		BNE	loc_0_D5C6
		LDA	Levels_passed_cnt
		BMI	loc_0_D5B4
		LDA	cont_screen_cnt
		EOR	#$80
		BNE	loc_0_D5D9
		STA	cont_screen_cnt

loc_0_D5D9:				; ...
		JSR	sounds_stop
		LDA	#$58
		JSR	play_sound_ch1_and_ch2
		LDY	Levels_passed_cnt
		LDA	Level_ID_Table,Y
		STA	Level_ID
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDY	Level_ID
		LDA	level_planA_pic,Y
		STA	tmp_var_8d
		JSR	screen_off
		LDX	#$39
		LDY	#6
		JSR	jump_from_bank0
		LDX	#<level_plans_NMI
		LDY	#>level_plans_NMI ; $D611
		JMP	set_nmi_func_ptr ; input X,Y
; End of function sub_0_D5C9

; ---------------------------------------------------------------------------
level_name_pos:	.BYTE $FC, $FC,	$E4, $E8, $F0, $DC, $F0, 0, $FC, $E4, $DC, $F4,	$F4, $E4 ; ...
					; X pos	of "level: name:" on plan screen

; =============== S U B	R O U T	I N E =======================================


level_plans_NMI:			; ...
		JSR	Clear_Scrolls_ScreenON_UpdMusic
		JSR	joypads_reading
		LDA	#$10
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDX	#$15
		LDY	#1
		JSR	jump_from_bank0	; BANK1:8568   planA_spr_blink
		LDX	#$A0
		LDY	#$13
		JSR	wait0		; wait by X,Y
		STX	ppu_ctrl1_val	;  > $80  кадр завершен
		STX	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDY	Levels_passed_cnt
		LDA	level_name_pos,Y ; X pos of "level: name:" on plan screen
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		LDX	#1

loc_0_D639:				; ...
		LDA	Lives_Player1,X	; кол-во жизней	(сердечек)
		BMI	loc_0_D641
		LDA	InputTap_P1,X	; данные первого джойстика на нажатие
		BNE	loc_0_D650

loc_0_D641:				; ...
		DEX
		BPL	loc_0_D639
		JSR	set_players_lifes ; continue
		LDA	FrameCounter
		CMP	#$D7
		BEQ	loc_0_D650
		JMP	loc_0_E576
; ---------------------------------------------------------------------------

loc_0_D650:				; ...
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDA	Level_ID
		BNE	loc_0_D65F
		INC	Level_ID	; level	00->01
		JSR	sounds_stop
		JMP	sub_0_E6C3
; ---------------------------------------------------------------------------

loc_0_D65F:				; ...
		JMP	loc_0_8336
; End of function level_plans_NMI


; =============== S U B	R O U T	I N E =======================================


electro_ball_sub:			; ...
		LDA	Objects_LinkedObj_ID,Y ; флаг/id присоединённого объекта
		AND	#$40
		BEQ	loc_0_D699

loc_0_D669:				; ...
		LDA	Objects_Ypos_H,Y
		CMP	#5
		BNE	loc_0_D699
		LDA	Objects_Ypos_L,Y
		CMP	#$E0
		BCC	loc_0_D699
		LDA	Objects_Xpos_H,Y
		CMP	#6
		BNE	loc_0_D699
		LDA	Objects_Xpos_L,Y
		CMP	#$70
		BCC	loc_0_D699
		CPY	#2
		BCC	loc_0_D68F
		LDA	#0
		STA	objects_some_anim,Y ; some obj X speed
		RTS
; ---------------------------------------------------------------------------

loc_0_D68F:				; ...
		LDA	Objects_LinkedObj_ID,Y ; флаг/id присоединённого объекта
		AND	#$1F
		TAX
		DEX
		JSR	loc_0_B2CA

loc_0_D699:				; ...
		INY
		CPY	#2
		BCC	electro_ball_sub
		RTS
; End of function electro_ball_sub


; =============== S U B	R O U T	I N E =======================================


electroball_set_gfx:			; ...
		LDA	FrameCounter
		STA	tmp_var_15	;  / Object Counter / various tmp
		AND	#$7F
		CMP	#$40
		BCC	loc_0_D6AB
		EOR	#$7F

loc_0_D6AB:				; ...
		ADC	#8
		ROL	tmp_var_15	;  / Object Counter / various tmp
		BCC	loc_0_D6B3
		EOR	#$FF

loc_0_D6B3:				; ...
		JSR	obj_unjk_cnt_add__
		CLC
		ADC	#$7C
		STA	Objects_gfx_frame,X
		RTS
; End of function electroball_set_gfx


; =============== S U B	R O U T	I N E =======================================


object_electroball:			; ...
		LDY	#0
		JSR	electro_ball_sub
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	electroball_set_gfx
		LDA	objects_some_anim,X ; some obj X speed
		BNE	sub_0_D71D
		LDA	#$18
		STA	Camera_Y_pos_l_2
		LDA	Objects_X_speed,X
		BEQ	sub_0_D6EF
		CMP	#$90
		BCC	loc_0_D6DC
		INC	Objects_Xpos_L,X

loc_0_D6DC:				; ...
		LDA	#2

loc_0_D6DE:				; ...
		JSR	loc_0_F4AE
		LDA	#$E6
		JSR	loc_0_F4BA
		DEC	Objects_X_speed,X

Electroball_set_Y_low:			; ...
		LDA	#$E6
		STA	Objects_Ypos_L,X
		RTS
; End of function object_electroball


; =============== S U B	R O U T	I N E =======================================


sub_0_D6EF:				; ...
		INC	Objects_cnt3,X
		BMI	electroball_change_to_phase2
		LDA	FrameCounter
		AND	#4
		BNE	loc_0_D703
		STA	Objects_Z_speed,X
		STA	Objects_gfx_frame,X
		JSR	play_sound_16

loc_0_D703:				; ...
		JMP	write_anim_fear
; ---------------------------------------------------------------------------

electroball_change_to_phase2:		; ...
		LDA	#$7B
		STA	Objects_TypeID,X
		LDA	#$EE
		STA	Objects_Ypos_L
		STA	player2_Ypos_L
		LDA	#$50
		STA	Objects_dir,X	; / angle
		LDY	#$E
		JMP	set_music_by_level_id
; End of function sub_0_D6EF


; =============== S U B	R O U T	I N E =======================================


sub_0_D71D:				; ...
		LDA	Camera_Y_pos_l	;  / level_position - on v levels
		STA	Camera_Y_pos_l_2
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	loc_0_D669
		LDA	Objects_X_speed,X
		BNE	loc_0_D738
		LDA	Objects_TargetID
		ORA	player2_TargetID
		BEQ	loc_0_D781
		LDA	#$A4
		STA	Objects_X_speed,X

loc_0_D738:				; ...
		CMP	#$F0
		BNE	loc_0_D74D
		LDA	FrameCounter
		AND	#7
		BNE	loc_0_D750
		LDA	#$40
		JSR	change_obj_coord?_ ; A is speed
		JSR	loc_0_D753
		JMP	loc_0_D750
; ---------------------------------------------------------------------------

loc_0_D74D:				; ...
		INC	Objects_X_speed,X

loc_0_D750:				; ...
		JSR	obj_moving_by_speed

loc_0_D753:				; ...
		LDA	Objects_dir,X	; / angle
		PHA
		JSR	levels_physics_bank5
		PLA
		EOR	Objects_dir,X	; / angle
		BEQ	loc_0_D767
		LDA	#$D5		; speed	on turns (#$D0 in japan	ver.)
		STA	Objects_X_speed,X
		INC	music_speed

loc_0_D767:				; ...
		LDA	#$E
		JSR	compare_X_vs_player
		BNE	locret_0_D780
		LDA	#$E
		JSR	obj_compare_Y?
		BNE	locret_0_D780
		LDA	Objects_dir,X	; / angle
		EOR	Objects_dir,Y	; / angle
		BNE	locret_0_D780
		JSR	bike_death_effects

locret_0_D780:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_D781:				; ...
		LDA	Objects_Zpos_L,X
		CMP	#$2C
		BCC	locret_0_D780
		DEC	Objects_Zpos_L,X
		RTS
; End of function sub_0_D71D


; =============== S U B	R O U T	I N E =======================================


sub_0_D78C:				; ...
		LDX	#$3C
		LDY	#6
		JSR	jump_from_bank0
		LDX	#<sub_0_D79D
		LDY	#>sub_0_D79D	; $D79D
		JMP	set_nmi_func_ptr ; input X,Y
; End of function sub_0_D78C

; ---------------------------------------------------------------------------

loc_0_D79A:				; ...
		JMP	sub_0_E58F

; =============== S U B	R O U T	I N E =======================================


sub_0_D79D:				; ...
		LDX	#$27
		LDY	#6
		JSR	jump_from_bank0
		JSR	joypads_reading
		LDA	InputHold_P1	; данные первого джойстика на зажатие
		ORA	InputHold_P2	; данные второго джойстика на зажатие
		BNE	loc_0_D79A
		LDA	FrameCounter
		ROR	A
		BCC	loc_0_D7D3
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		CMP	#$60
		BCS	loc_0_D7C2
		LDA	#$3A
		LDX	#snd_channel1
		JSR	jump_to_play_sound ; A is sound	id, X -	JmpOff (channel	id)
		JMP	loc_0_D7D3
; ---------------------------------------------------------------------------

loc_0_D7C2:				; ...
		BNE	loc_0_D7D3
		LDA	#$3C
		LDX	#snd_channel1
		JSR	jump_to_play_sound ; A is sound	id, X -	JmpOff (channel	id)
		LDA	#$3E
		JSR	play_sound_ch4
		JMP	loc_0_D7D3

loc_0_D7D3:				; ...
		LDA	#0
		JSR	music_play_bank3 ; playing_music
		LDA	#0
		STA	nmi_pcm_flags
		LDA	object2_some_anim
		BMI	loc_0_D7E4
		JMP	loc_0_E576
; ---------------------------------------------------------------------------

loc_0_D7E4:				; ...
		JMP	sub_0_D860
; End of function sub_0_D79D


; =============== S U B	R O U T	I N E =======================================


sub_0_D7E7:				; ...
		LDX	#$3F
		LDY	#6
		JSR	jump_from_bank0
		LDX	#<sub_0_D7F8
		LDY	#>sub_0_D7F8	; $D7F8
		JMP	set_nmi_func_ptr ; input X,Y
; End of function sub_0_D7E7

; ---------------------------------------------------------------------------

loc_0_D7F5:				; ...
		JMP	sub_0_E58F

; =============== S U B	R O U T	I N E =======================================


sub_0_D7F8:				; ...
		LDX	#$27
		LDY	#6
		JSR	jump_from_bank0
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		CMP	#$10
		BNE	loc_0_D80A
		LDA	object_3_Zpos_L
		BMI	loc_0_D81F

loc_0_D80A:				; ...
		JSR	joypads_reading
		LDA	InputHold_P1	; данные первого джойстика на зажатие
		ORA	InputHold_P2	; данные второго джойстика на зажатие
		BNE	loc_0_D7F5
		LDA	#0
		JSR	music_play_bank3 ; playing_music
		LDA	#0
		STA	nmi_pcm_flags
		JMP	loc_0_E571
; ---------------------------------------------------------------------------

loc_0_D81F:				; ...
		LDX	#$42
		LDY	#6
		JSR	jump_from_bank0
		LDA	#$40
		JSR	play_sound_ch4
		LDX	#<sub_0_D832
		LDY	#>sub_0_D832	; $D832
		JMP	set_nmi_func_ptr ; input X,Y
; End of function sub_0_D7F8


; =============== S U B	R O U T	I N E =======================================


sub_0_D832:				; ...
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDA	#$F0
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		STA	Camera_X_pos_l	;  / level_position - on h levels
		LDA	#0
		JSR	write_VScrlReg_ScreenON_UpdMusic
		JSR	joypads_reading
		LDA	InputHold_P1	; данные первого джойстика на зажатие
		ORA	InputHold_P2	; данные второго джойстика на зажатие
		BNE	loc_0_D856
		LDA	FrameCounter
		CMP	#$64
		BCC	loc_0_D853
		JMP	sub_0_D78C
; ---------------------------------------------------------------------------

loc_0_D853:				; ...
		JMP	loc_0_E571
; ---------------------------------------------------------------------------

loc_0_D856:				; ...
		JMP	sub_0_E58F
; End of function sub_0_D832


; =============== S U B	R O U T	I N E =======================================


sub_0_D859:				; ...
		LDX	#$45
		LDY	#6
		JMP	jump_from_bank0
; End of function sub_0_D859


; =============== S U B	R O U T	I N E =======================================


sub_0_D860:				; ...
		JSR	sub_0_D859

loc_0_D863:				; ...
		LDX	#0
		TXA

loc_0_D866:				; ...
		PHA
		DEX
		BNE	loc_0_D866
		DEX
		TXS
		LDA	#1
		STA	Objects_various_flags ;	для пушек ID прицепленного объекта
		LDA	#$18
		JSR	play_sound_ch4
		LDX	#<sub_0_D87D
		LDY	#>sub_0_D87D	; $D87D
		JMP	set_nmi_func_ptr ; input X,Y
; End of function sub_0_D860


; =============== S U B	R O U T	I N E =======================================


sub_0_D87D:				; ...
		LDA	game_end_caller_var
		BEQ	loc_0_D888
		LDA	Objects_X_speed
		CMP	#$68
		BCS	loc_0_D8B2

loc_0_D888:				; ...
		LDX	#$F
		LDY	#6
		JSR	jump_from_bank0
		LDA	game_end_caller_var
		BNE	loc_0_D8A4
		JSR	joypads_reading
		LDA	InputHold_P1	; данные первого джойстика на зажатие
		ORA	InputHold_P2	; данные второго джойстика на зажатие
		BNE	loc_0_D856
		LDA	#0
		STA	nmi_pcm_flags
		LDA	jump_ptr_nmi+1	; поинтер на функцию во	время nmi
		BEQ	loc_0_D8A7	; ?

loc_0_D8A4:				; ...
		JMP	frame_end_wait_nmi
; ---------------------------------------------------------------------------

loc_0_D8A7:				; ...
		LDA	#$FF
		STA	Levels_passed_cnt
		LDA	#0
		STA	global_var3
		JMP	loc_0_D51B
; ---------------------------------------------------------------------------

loc_0_D8B2:				; ...
		JSR	Clear_Scrolls_ScreenON_UpdMusic
		JSR	joypads_reading
		LDA	InputTap_P1	; данные первого джойстика на нажатие
		ORA	InputTap_P2	; данные второго джойстика на нажатие
		BNE	loc_0_D8C1
		JMP	wait_for_nmi__
; ---------------------------------------------------------------------------

loc_0_D8C1:				; ...
		JMP	screen_off_and_reset
; End of function sub_0_D87D


; =============== S U B	R O U T	I N E =======================================


sub_0_D8C4:				; ...
		LDA	#0
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		STA	ppu_ctrl1_val	;  > $80  кадр завершен
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		TAX

loc_0_D8CF:				; ...
		PHA
		DEX
		BNE	loc_0_D8CF
		DEX
		TXS
		LDX	#$4B
		LDY	#6
		JSR	jump_from_bank0
		LDX	#<sub_0_D8E6
		LDY	#>sub_0_D8E6	; $D8E6
		JMP	set_nmi_func_ptr ; input X,Y
; End of function sub_0_D8C4

; ---------------------------------------------------------------------------

loc_0_D8E3:				; ...
		JMP	sub_0_E58F

; =============== S U B	R O U T	I N E =======================================


sub_0_D8E6:				; ...
		JSR	sub_0_D547
		LDA	#$F0
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		STA	Camera_X_pos_l	;  / level_position - on h levels
		LDA	#0
		JSR	write_VScrlReg_ScreenON_UpdMusic
		JSR	joypads_reading
		LDA	InputHold_P1	; данные первого джойстика на зажатие
		ORA	InputHold_P2	; данные второго джойстика на зажатие
		BNE	loc_0_D8E3
		LDX	#$4E
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		CMP	#$C0
		BEQ	loc_0_D90E
		LDY	#6
		JSR	jump_from_bank0
		JMP	loc_0_E571
; ---------------------------------------------------------------------------

loc_0_D90E:				; ...
		JMP	loc_0_D911

loc_0_D911:
		LDA	#0
		STA	object3_X_shadow
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		STA	ppu_ctrl1_val	;  > $80  кадр завершен
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		TAX

loc_0_D91F:				; ...
		PHA
		DEX
		BNE	loc_0_D91F
		DEX
		TXS
		LDX	#$51
		LDY	#6
		JSR	jump_from_bank0
		LDA	#$54
		JSR	play_sound_ch4
		LDA	#$40
		STA	pal_reduce_value ; dec to color	value
		LDX	#<sub_0_D946
		LDY	#>sub_0_D946	; $D946
		JMP	set_nmi_func_ptr ; input X,Y
; End of function sub_0_D8E6

; ---------------------------------------------------------------------------
byte_0_D93C:	.BYTE 0, 0, 1, 2, 4, 2,	2, 8, 9, 8 ; ...

; =============== S U B	R O U T	I N E =======================================


sub_0_D946:				; ...
		LDA	object3_X_shadow
		BEQ	loc_0_D94E
		JMP	loc_0_D9D1
; ---------------------------------------------------------------------------

loc_0_D94E:				; ...
		LDA	#$18
		STA	ppu_ctrl1_val	;  > $80  кадр завершен
		LDA	FrameCounter
		CMP	#$90
		BCC	loc_0_D95B
		STA	object3_X_shadow

loc_0_D95B:				; ...
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		TAY
		LDA	byte_0_D93C,Y
		AND	FrameCounter
		BNE	loc_0_D9D1
		STA	pal_vram_upd_off ; BKG=$00, SPR=$10
		JSR	update_pal_to_vram
		LDA	#$1F
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$D0
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDX	#$30

loc_0_D978:				; ...
		LDA	level_ram1,X
		STA	PPU_DATA	; VRAM I/O Register (RW)
		DEX
		BNE	loc_0_D978
		LDA	#$18
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		STX	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		STX	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		STX	Camera_X_pos_l	;  / level_position - on h levels
		LDA	#$10
		JSR	music_play_bank3 ; playing_music
		LDX	#$30

loc_0_D995:				; ...
		JSR	random
		STA	level_ram1,X
		DEX
		BNE	loc_0_D995
		JSR	joypads_reading
		LDA	InputHold_P1	; данные первого джойстика на зажатие
		ORA	InputHold_P2	; данные второго джойстика на зажатие
		BNE	loc_0_D9CE
		LDA	FrameCounter
		AND	#3
		BNE	loc_0_D9B6
		LDA	pal_reduce_value ; dec to color	value
		SEC
		SBC	#$10
		BCC	loc_0_D9B6
		STA	pal_reduce_value ; dec to color	value

loc_0_D9B6:				; ...
		LDA	pal_reduce_value ; dec to color	value
		BNE	loc_0_D9C7
		LDA	#$52
		LDX	#$15
		STA	snd_tmp_var_39
		LDA	#$10
		LDY	#$13
		JSR	jump_from_bank0_

loc_0_D9C7:				; ...
		LDA	#0
		STA	nmi_pcm_flags
		JMP	loc_0_E576
; ---------------------------------------------------------------------------

loc_0_D9CE:				; ...
		JMP	sub_0_E58F
; ---------------------------------------------------------------------------

loc_0_D9D1:				; ...
		JSR	sub_0_D547
		LDA	#$F0
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		STA	Camera_X_pos_l	;  / level_position - on h levels
		LDA	#0
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		LDA	#8
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDA	#$18
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		JSR	joypads_reading
		LDA	InputHold_P1	; данные первого джойстика на зажатие
		ORA	InputHold_P2	; данные второго джойстика на зажатие
		BNE	loc_0_D9CE
		LDX	#$54
		LDY	#6
		JSR	jump_from_bank0
		LDX	#$5C
		LDY	#$D
		JSR	wait0		; wait by X,Y
		LDA	#$18
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDX	#$4E
		LDY	#6
		JSR	jump_from_bank0
		LDA	global_var_cnt?
		BEQ	loc_0_DA15
		DEC	global_var_cnt?
		BEQ	loc_0_DA21

loc_0_DA15:				; ...
		LDA	#0
		JSR	music_play_bank3 ; playing_music
		LDA	#0
		STA	nmi_pcm_flags
		JMP	loc_0_E576
; ---------------------------------------------------------------------------

loc_0_DA21:				; ...
		JMP	loc_0_DA24

loc_0_DA24:				; ...
		LDA	#0
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		STA	ppu_ctrl1_val	;  > $80  кадр завершен
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		TAX

loc_0_DA2F:				; ...
		PHA
		DEX
		BNE	loc_0_DA2F
		DEX
		TXS
		LDA	game_end_caller_var
		BNE	loc_0_DA44
		LDA	Levels_passed_cnt
		CMP	#armageddon
		BNE	loc_0_DA44
		STA	Level_ID
		JMP	loc_0_8336
; ---------------------------------------------------------------------------

loc_0_DA44:				; ...
		LDX	#$57
		LDY	#6
		JSR	jump_from_bank0
		LDX	#<sub_0_DA55
		LDY	#>sub_0_DA55	; $DA55
		JMP	set_nmi_func_ptr ; input X,Y
; End of function sub_0_D946

; ---------------------------------------------------------------------------

loc_0_DA52:				; ...
		JMP	sub_0_E58F

; =============== S U B	R O U T	I N E =======================================


sub_0_DA55:				; ...
		JSR	sub_0_D547
		LDA	#$F0
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		STA	Camera_X_pos_l	;  / level_position - on h levels
		LDA	#0
		JSR	write_VScrlReg_ScreenON_UpdMusic
		LDX	#$5A
		LDY	#6
		JSR	jump_from_bank0
		JSR	joypads_reading
		LDA	global_var3
		CMP	#$1B
		BEQ	loc_0_DA90
		LDA	Levels_passed_cnt
		BEQ	loc_0_DA8A
		BMI	loc_0_DA8A
		LDA	InputTap_P1	; данные первого джойстика на нажатие
		ORA	InputTap_P2	; данные второго джойстика на нажатие
		BNE	loc_0_DAAA
		LDA	global_var_cnt?
		BEQ	loc_0_DA96
		DEC	global_var_cnt?
		BEQ	loc_0_DAAA
		BNE	loc_0_DA96

loc_0_DA8A:				; ...
		LDA	InputHold_P1	; данные первого джойстика на зажатие
		ORA	InputHold_P2	; данные второго джойстика на зажатие
		BNE	loc_0_DA52

loc_0_DA90:				; ...
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		CMP	#$F0
		BEQ	screen_off_and_reset

loc_0_DA96:				; ...
		LDX	#$4E
		LDY	#6
		JSR	jump_from_bank0
		JMP	loc_0_E571
; ---------------------------------------------------------------------------

screen_off_and_reset:			; ...
		LDA	#0
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)

game_end:				; ...
		LDA	#1
		JMP	reset_restart_game
; ---------------------------------------------------------------------------

loc_0_DAAA:				; ...
		LDA	#0
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		LDY	game_end_caller_var
		BEQ	loc_0_DABD
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDA	#armageddon
		STA	Level_ID
		JMP	loc_0_8339
; ---------------------------------------------------------------------------

loc_0_DABD:				; ...
		JMP	clears_between_levels?
; End of function sub_0_DA55


; =============== S U B	R O U T	I N E =======================================


fill_sprite_buffer:			; ...
		LDX	#0		; unused?
		LDA	#$F8

loc_0_DAC4:				; ...
		STA	Sprites_Ypos,X
		INX
		BNE	loc_0_DAC4
		RTS
; ---------------------------------------------------------------------------
		JSR	fill_sprite_buffer
		STX	PPU_SPR_ADDR	; SPR-RAM Address Register (W)
		LDA	#2
		STA	SPR_DMA		; Sprite DMA Register (W)
		RTS
; End of function fill_sprite_buffer


; =============== S U B	R O U T	I N E =======================================


wait_vblank:				; ...
		LDA	PPU_STATUS	; PPU Status Register (R)
		BPL	wait_vblank
		RTS
; End of function wait_vblank


; =============== S U B	R O U T	I N E =======================================


write_obj_Anim_ID:			; ...
		STA	Objects_AnimID,X ; номер движения для запуска
		LDA	#0
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$7F
		STA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$EB
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		RTS
; End of function write_obj_Anim_ID


; =============== S U B	R O U T	I N E =======================================

; with ptr inc by AND with frame cnt

start_read_anim:			; ...
		AND	FrameCounter
		BNE	read_obj_anim	; without ptr inc
		INC	Objects_Anim_Ptr,X ; оффсет чтения анимации

read_obj_anim:				; ...
		LDY	Objects_AnimID,X ; without ptr inc
		STY	tmp_var_15	;  / Object Counter / various tmp
		LDY	#$FF		; flag - no pointer (read ID from $15)

continue_read_anim:			; ...
		LDA	#3
		JSR	read_anims_dat
		LDA	Obj_Amindata1_tmp
		BEQ	write_obj_Anim_ID
		CMP	#$E0		; >$E0 anim is not frame, it's action code ID
		BCC	set_object_animation
		AND	#$1F		; 32 actions (really 22)
		STX	tmp_var_15	; save slot id
		ASL	A
		TAX
		LDA	obj_moves_code_ptr,X
		STA	tmp_var_1B
		LDA	obj_moves_code_ptr+1,X
		STA	tmp_var_1C
		LDX	tmp_var_15	; load slot id
		INY
		STY	tmp_var_22
		JMP	(tmp_var_1B)	; jump to action ($DB68)
; ---------------------------------------------------------------------------

set_object_animation:			; ...
		CPX	#2
		BCS	loc_0_DB32
		STA	player1_obj_wanted_frame,X
		BCC	loc_0_DB35

loc_0_DB32:				; ...
		STA	Objects_gfx_frame,X

loc_0_DB35:				; ...
		TYA
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		RTS
; End of function start_read_anim

; ---------------------------------------------------------------------------
obj_moves_code_ptr:.WORD anim_write_X_speed ; ...
					; e0
		.WORD anim_write_Z_speed_and_clear_unk1	; e1
		.WORD anim_make_hit	; 4  (E2)
		.WORD sub_0_DDAD	; e3
		.WORD sub_0_DDFB	; e4
		.WORD anim_damage_linked ; e5
		.WORD anim_set_flag_4	; flags	bit #03
		.WORD add_obj_x_speed	; E
		.WORD swap_obj_dir_	; btdd - set obj x speed
		.WORD make_tongue	; 12
		.WORD anim_write_obj_dir
		.WORD set_obj_x_speed_by_shadow
		.WORD swap_obj_dir
		.WORD anim_create_obj_C_frame_37
		.WORD anim_create_obj_C_frame_38
		.WORD anim_create_obj_32
		.WORD anim_write_in_someflag
		.WORD anim_play_sound	; 22
		.WORD anim_add_Z?	; 24
		.WORD make_weapon	; 26
		.WORD set_z_speed	; 28
		.WORD clear_state_80	; 2a
		.WORD direction_set_by_Xlow ; 2c

; =============== S U B	R O U T	I N E =======================================

; Записать X скорость персонажу

anim_write_X_speed:			; ...
		LDA	Level_ID
		CMP	#wookie_hole
		BEQ	set_x_speed_and_dir
		CMP	#revolution
		BNE	loc_0_DB76
		CPX	#2
		BCS	set_x_speed_and_dir

loc_0_DB76:				; ...
		LDA	Objects_Z_floor,X
		CMP	#8
		BCS	loc_0_DB82

set_x_speed_and_dir:			; ...
		LDA	Obj_Amindata2_tmp

write_obj_speed:			; ...
		STA	Objects_X_speed,X

loc_0_DB82:				; ...
		INY
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ASL	A
		AND	#$80

write_new_obj_dir:			; ...
		STA	Objects_dir,X	; / angle
		JMP	continue_read_anim
; End of function anim_write_X_speed


; =============== S U B	R O U T	I N E =======================================


anim_write_obj_dir:			; ...
		LDA	Obj_Amindata2_tmp
		INY
		BNE	write_new_obj_dir

swap_obj_dir:				; ...
		LDA	Objects_dir,X	; / angle
		EOR	#$80
		JMP	write_new_obj_dir
; End of function anim_write_obj_dir


; =============== S U B	R O U T	I N E =======================================


direction_set_by_Xlow:			; ...
		LDA	Objects_Xpos_L,X
		AND	#$80
		JMP	write_new_obj_dir
; End of function direction_set_by_Xlow


; =============== S U B	R O U T	I N E =======================================


add_obj_x_speed:			; ...
		LDA	Obj_Amindata2_tmp
		CLC
		ADC	Objects_X_speed,X
		BCC	write_obj_speed
		LDA	#$F0
		BNE	write_obj_speed
; End of function add_obj_x_speed


; =============== S U B	R O U T	I N E =======================================

; btdd - set obj x speed

swap_obj_dir_:				; ...
		LDA	Objects_dir,X	; / angle
		EOR	#$80
		JMP	write_new_obj_dir
; End of function swap_obj_dir_


; =============== S U B	R O U T	I N E =======================================

; язык жабы

make_tongue:				; ...
		LDA	players_tongue_dir,X
		PHA
		JSR	get_free_obj_slot_IDX
		PLA
		STA	Objects_dir,X	; / angle
		LDA	tmp_var_15	;  / Object Counter / various tmp
		STA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		LDA	#$40
		STA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		LDA	#0
		STA	Obj_anims_timer,X ; timer used for gfx frames
		STA	Objects_AnimID,X ; номер движения для запуска
		STA	Objects_Z_floor,X
		LDA	#6
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		LDA	#9
		STA	Objects_TypeID,X
		STA	Objects_Y_shad,X
		LDA	#$FF
		STA	Objects_X_speed,X
		LDX	tmp_var_15	;  / Object Counter / various tmp
		JMP	continue_read_anim
; End of function make_tongue


; =============== S U B	R O U T	I N E =======================================


anim_write_Z_speed_and_clear_unk1:	; ...
		LDA	Level_ID
		CMP	#wookie_hole
		BEQ	loc_0_DBFC
		LDA	Objects_Z_floor,X
		CMP	#8
		BCS	loc_0_DC06

loc_0_DBFC:				; ...
		LDA	Obj_Amindata2_tmp
		STA	Objects_Z_speed,X
		LDA	#0
		STA	Objects_Z_spd_sub,X

loc_0_DC06:				; ...
		INY
		JMP	continue_read_anim
; End of function anim_write_Z_speed_and_clear_unk1


; =============== S U B	R O U T	I N E =======================================


set_obj_x_speed_by_shadow:		; ...
		LDA	Objects_X_shadow,X
		BPL	loc_0_DC13
		CMP	#$88
		BCC	loc_0_DC1D

loc_0_DC13:				; ...
		AND	#$80
		STA	Objects_dir,X	; / angle
		LDA	#$30
		STA	Objects_X_speed,X

loc_0_DC1D:				; ...
		JMP	continue_read_anim
; End of function set_obj_x_speed_by_shadow


; =============== S U B	R O U T	I N E =======================================


anim_make_hit:				; ...
		INC	tmp_var_22
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		BMI	loc_0_DC3F
		LDA	Obj_Amindata2_tmp ; damage index
		ROL	A
		ROL	A
		ROL	A
		AND	#3
		STA	hit_Z_table_index ; index for Z	collision tbl
		LDA	Obj_Amindata2_tmp ; damage index
		AND	#$3F
		STA	tmp_var_8c
		ASL	A
		ASL	A
		ADC	tmp_var_8c	; *5
		STA	tmp_var_8c
		JSR	anim_damage_by_table

loc_0_DC3F:				; ...
		LDY	tmp_var_22
		INY
		JMP	continue_read_anim
; End of function anim_make_hit


; =============== S U B	R O U T	I N E =======================================


anim_damage_by_table:			; ...
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#have_stick
		ASL	A
		ORA	#3
		JSR	check_hitting	; A - hit flags
		BPL	loc_0_DC53
		RTS
; ---------------------------------------------------------------------------

loc_0_DC53:				; ...
		LDA	Level_ID
		CMP	#wookie_hole
		BEQ	loc_0_DC61
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		ORA	#making_damage
		STA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage

loc_0_DC61:				; ...
		LDA	#0
		STA	Objects_AnimID,Y ; номер движения для запуска
		STA	Objects_Anim_Ptr,Y ; оффсет чтения анимации
		LDA	Objects_Life,Y
		CMP	#$10
		BCS	loc_0_DC83
		LDA	Objects_AnimID,X ; номер движения для запуска
		CMP	#$16		; udar s razgona?
		BNE	loc_0_DC83
		LDA	#$F
		STA	tmp_var_8c	; damage effects ID (*5)
		LDA	#$36
		STA	Obj_Amindata3_tmp
		LDA	#$36
		STA	tmp_var_22

loc_0_DC83:				; ...
		LDA	tmp_var_8c	; damage effects ID (*5)
		LDY	tmp_var_21	; load target obj slot id
		CPY	#2
		BCS	loc_0_DC8D
		ADC	#$5A		; vs players

loc_0_DC8D:				; ...
		JSR	gen_damage_effects
		CMP	#$40		; anims	timer
		BCC	loc_0_DCAE
		CMP	#$AF
		BEQ	loc_0_DCAE
		LDA	#damaged_heavy
		ORA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		STA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		LDA	Objects_Linker_ID,Y ; флаг/id какой объект меня	прицепил
		BPL	loc_0_DCAE
		AND	#$1F
		TAX
		DEX
		JSR	unlink_objects
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_0_DCAE:				; ...
		LDA	tmp_var_8b	; hit sprite position
		BEQ	loc_0_DCB5
		JSR	create_obj_4_or_C

loc_0_DCB5:				; ...
		LDA	tmp_var_8c	; dmg effects id (*5)
		CMP	#$37
		BEQ	locret_0_DD1C
		LDA	#8		; ?
		STA	some_sound_flag	; ?
		LDY	tmp_var_22	; ?
		LDA	Obj_Amindata3_tmp ; sound id?
		AND	#$F0
		LSR	A
		LSR	A
		STA	some_sound_flag	; by tables
		LDY	tmp_var_21	; target slot id
		LDA	Objects_TypeID,Y
		CMP	#$38
		BEQ	locret_0_DD1C
		CMP	Objects_death_timer,Y ;	?
		BCS	loc_0_DCF1
		CMP	#$79		; final	hit in bosses
		BCC	loc_0_DCF1
		BEQ	loc_0_DCE8
		CMP	#$7B		; electro-ball?
		BEQ	loc_0_DCE8
		LDA	objects_some_anim,Y ; some obj X speed
		CMP	#$F0
		BCC	loc_0_DD0C

loc_0_DCE8:				; ...
		LDA	#$46
		JSR	play_sound_ch1_and_ch2
		LDA	#9
		BNE	loc_0_DD12	; jump

loc_0_DCF1:				; ...
		CMP	#$14
		BNE	loc_0_DD0C
		CPX	#2
		BCS	loc_0_DD0C
		LDA	Objects_various_flags,Y	; для пушек ID прицепленного объекта
		ADC	#1
		STA	Obj_Amindata3_tmp
		STA	Objects_various_flags,Y	; для пушек ID прицепленного объекта
		CMP	#$A
		BCC	loc_0_DD0C
		LDA	#$C0
		STA	Objects_death_timer,Y ;	undamage time

loc_0_DD0C:				; ...
		LDA	Obj_Amindata3_tmp
		AND	#$F
		BEQ	locret_0_DD1C

loc_0_DD12:				; ...
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		LDX	tmp_var_21
		SEC
		SBC	#1
		JSR	create_scores_obj ; A is score obj index

locret_0_DD1C:				; ...
		RTS
; End of function anim_damage_by_table

; ---------------------------------------------------------------------------

loc_0_DD1D:				; ...
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	#$FF
		RTS

; =============== S U B	R O U T	I N E =======================================


create_obj_4_or_C:			; ...
		LDA	tmp_var_8b
		AND	#7		; lower	3 bits is pos index, upper is hit type
		ASL	A

create_weapon:				; ...
		STA	tmp_var_1E	; returns -1 , if can't create
		JSR	get_free_obj_slot_IDX
		BNE	loc_0_DD1D
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	copy_objects_XYZ_and_dir
		STX	tmp_var_1D
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#turned_left
		LDY	tmp_var_1E
		CPY	#8
		BNE	loc_0_DD42
		EOR	#turned_left

loc_0_DD42:				; ...
		ASL	A
		STA	Objects_dir,X	; / angle
		BEQ	loc_0_DD55
		LDA	Objects_Xpos_L,X
		SBC	dmg_hit_X,Y
		STA	Objects_Xpos_L,X
		LDA	#$FF
		BNE	loc_0_DD60	; jump

loc_0_DD55:				; ...
		LDA	Objects_Xpos_L,X
		ADC	dmg_hit_X,Y
		STA	Objects_Xpos_L,X
		LDA	#0

loc_0_DD60:				; ...
		ADC	Objects_Xpos_H,X
		STA	Objects_Xpos_H,X
		LDA	dmg_hit_YZ,Y
		CLC
		JSR	objects_add_Z?	; A is Z_speed

loc_0_DD6D:				; ...
		LDA	#8
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	tmp_var_8b	; test bit #3
		BEQ	create_obj_C
		LDA	#8

create_obj_4:				; ...
		STA	Objects_cnt3,X
		LDA	#4
		STA	Objects_TypeID,X
		LDA	#$F
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		BNE	loc_0_DD96	; jump

create_obj_C:				; ...
		LDA	#$C
		STA	Objects_TypeID,X
		LDA	#4
		STA	Objects_cnt2,X
		LDA	#$F
		STA	Objects_gfx_frame,X

loc_0_DD96:				; ...
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		RTS
; End of function create_obj_4_or_C

; ---------------------------------------------------------------------------
dmg_hit_X:	.BYTE 0			; ...
dmg_hit_YZ:	.BYTE 0			; ...
		.BYTE  $18, $20		; 2
		.BYTE  $18, $10		; 4
		.BYTE	 0, $F0		; 6
		.BYTE  $18, $14		; 8
		.BYTE  $18,   0		; A
		.BYTE  $10,   2		; C
		.BYTE  $12, $17		; E
		.BYTE  $12,   4		; 10
		.BYTE  $14,  $C		; 12

; =============== S U B	R O U T	I N E =======================================


sub_0_DDAD:				; ...
		LDA	#1
		STA	hit_Z_table_index ; index for Z	collision tbl
		LDA	#$24
		JSR	check_hitting	; A - hit flags
		BMI	loc_0_DDF6
		LDA	tmp_var_20
		AND	#have_stick
		BEQ	loc_0_DDCB
		ORA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		STA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage

delete_stick:
		LDA	#0
		STA	Objects_TypeID,Y
		BEQ	loc_0_DDF6

loc_0_DDCB:				; ...
		LDA	#0
		STA	Objects_Z_spd_sub,Y
		LDA	#5

loc_0_DDD2:				; ...
		STA	Objects_Z_speed,Y

loc_0_DDD5:				; ...
		TYA
		CLC
		ADC	#$81
		STA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		TXA
		ADC	#$81
		STA	Objects_Linker_ID,Y ; флаг/id какой объект меня	прицепил
		LDA	tmp_var_1B
		AND	#$80
		STA	Objects_dir,Y	; / angle
		BEQ	loc_0_DDED
		LDA	#$FF

loc_0_DDED:				; ...
		EOR	tmp_var_1B
		ASL	A
		ASL	A
		ADC	#$18
		STA	Objects_X_speed,Y

loc_0_DDF6:				; ...
		LDY	tmp_var_22
		JMP	continue_read_anim
; End of function sub_0_DDAD


; =============== S U B	R O U T	I N E =======================================


sub_0_DDFB:				; ...
		LDA	#2
		STA	hit_Z_table_index ; index for Z	collision tbl
		JSR	check_hitting	; A - hit flags
		BMI	loc_0_DDF6
		LDA	#0
		STA	Objects_AnimID,Y ; номер движения для запуска
		LDA	Objects_TypeID,X
		EOR	#$17
		BNE	loc_0_DE19
		STA	objects_some_anim,X ; some obj X speed
		STA	Objects_AnimID,X ; номер движения для запуска
		JMP	loc_0_DDD5
; ---------------------------------------------------------------------------

loc_0_DE19:				; ...
		LDA	Level_ID
		EOR	#wookie_hole
		BNE	loc_0_DE22
		JMP	loc_0_DDD5
; ---------------------------------------------------------------------------

loc_0_DE22:				; ...
		LDA	Objects_Zpos_L,Y
		CLC
		ADC	#8
		STA	Objects_Zpos_L,Y
		LDA	Objects_Zpos_H,Y
		ADC	#0
		STA	Objects_Zpos_H,Y
		LDA	#$20
		STA	Objects_Z_spd_sub,Y
		LDA	#4
		JMP	loc_0_DDD2
; End of function sub_0_DDFB


; =============== S U B	R O U T	I N E =======================================


anim_damage_linked:			; ...
		JSR	damage_linked_object
		LDA	#0
		STA	some_sound_flag	; by tables
		JMP	loc_0_DDF6
; End of function anim_damage_linked


; =============== S U B	R O U T	I N E =======================================


damage_linked_object:			; ...
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		AND	#$1F
		TAY
		DEY
		LDA	Level_ID
		CMP	#wookie_hole
		BNE	loc_0_DE5C
		LDA	#$7D
		JSR	gen_damage_effects
		JMP	unlink_objects
; ---------------------------------------------------------------------------

loc_0_DE5C:				; ...
		LDA	Objects_TypeID,Y
		CMP	#5
		BEQ	loc_0_DEAA
		CMP	#$64
		BNE	loc_0_DE91
		LDA	Objects_Y_shad,X
		EOR	#$FF
		LSR	A
		STA	objects_some_anim,Y ; some obj X speed
		LDA	#$C0
		STA	Objects_dir,Y	; / angle
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		AND	#button_right|button_left
		BEQ	loc_0_DE85
		ROR	A
		LDA	#$D8
		BCS	loc_0_DE82
		LDA	#$A8

loc_0_DE82:				; ...
		STA	Objects_dir,Y	; / angle

loc_0_DE85:				; ...
		LDA	RandomValue_1
		AND	#$1F
		SBC	#$10
		ADC	Objects_dir,Y	; / angle
		JMP	loc_0_DEB0
; ---------------------------------------------------------------------------

loc_0_DE91:				; ...
		CMP	#$1B
		BEQ	loc_0_DEAA
		CMP	#3
		LDA	#$AF
		BCC	loc_0_DE9D
		LDA	#$55

loc_0_DE9D:				; ...
		JSR	gen_damage_effects
		LDA	#damaged_heavy
		ORA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		STA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		BNE	unlink_objects

loc_0_DEAA:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ASL	A
		AND	#$80

loc_0_DEB0:				; ...
		STA	Objects_dir,Y	; / angle
		LDA	#$F0
		STA	Objects_X_speed,Y
		LDA	#5
		STA	Objects_Z_speed,Y
		JSR	unlink_objects
		JMP	loc_0_DDF6
; End of function damage_linked_object


; =============== S U B	R O U T	I N E =======================================


unlink_objects:				; ...
		LDA	#0
		STA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		STA	Objects_Linker_ID,Y ; флаг/id какой объект меня	прицепил
		RTS
; End of function unlink_objects


; =============== S U B	R O U T	I N E =======================================

; flags	bit #03

anim_set_flag_4:			; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ORA	#4
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		JMP	continue_read_anim
; End of function anim_set_flag_4


; =============== S U B	R O U T	I N E =======================================


anim_create_obj_C_frame_38:		; ...
		JSR	get_free_obj_slot_IDX
		LDA	#$38
		BNE	loc_0_DEE3

anim_create_obj_C_frame_37:		; ...
		JSR	get_free_obj_slot_IDX
		LDA	#$37

loc_0_DEE3:				; ...
		STA	Objects_gfx_frame,X
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	copy_objects_XYZ
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	#4
		STA	Objects_cnt2,X
		LDA	#$C
		LDY	tmp_var_22
		STA	Objects_TypeID,X
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		JMP	continue_read_anim
; End of function anim_create_obj_C_frame_38


; =============== S U B	R O U T	I N E =======================================


anim_create_obj_32:			; ...
		JSR	anim_create_obj_32_
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		JMP	continue_read_anim
; End of function anim_create_obj_32


; =============== S U B	R O U T	I N E =======================================


anim_write_in_someflag:			; ...
		LDA	Obj_Amindata2_tmp
		STA	some_sound_flag	; by tables
		INY
		JMP	continue_read_anim
; End of function anim_write_in_someflag


; =============== S U B	R O U T	I N E =======================================


anim_play_sound:			; ...
		LDA	Obj_Amindata2_tmp
		TAX
		INY
		LDA	Obj_Amindata3_tmp ; sound id
		JSR	jump_to_play_sound ; A is sound	id, X -	JmpOff (channel	id)
		LDY	tmp_var_22
		INY
		INY
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		JMP	continue_read_anim
; End of function anim_play_sound


; =============== S U B	R O U T	I N E =======================================


anim_add_Z?:				; ...
		LDA	Objects_Zpos_L,X
		SBC	Objects_cnt3,X
		ROL	A
		LDA	#5
		BCS	loc_0_DF31
		LDA	#$FB

loc_0_DF31:				; ...
		JSR	objects_add_Z?	; A is Z_speed
		JMP	continue_read_anim
; End of function anim_add_Z?


; =============== S U B	R O U T	I N E =======================================


anim_create_obj_32_:			; ...
		JSR	get_free_obj_slot_IDX
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	copy_objects_XYZ_and_dir
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		ASL	A
		AND	#$80
		STA	Objects_dir,X	; / angle
		ROL	A
		LDA	#5
		BCS	loc_0_DF4F
		LDA	#$FB

loc_0_DF4F:				; ...
		ADC	Objects_Xpos_L,Y
		STA	Objects_Xpos_L,Y
		LDA	#0
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	#$F6
		JSR	objects_add_Z?	; A is Z_speed
		LDY	tmp_var_22
		LDA	Obj_Amindata2_tmp
		STA	Objects_X_speed,X
		INY
		LDA	#$32
		STA	Objects_TypeID,X
		RTS
; End of function anim_create_obj_32_


; =============== S U B	R O U T	I N E =======================================


make_weapon:				; ...
		LDA	Obj_Amindata2_tmp
		STA	tmp_var_1B
		AND	#$70
		BEQ	loc_0_DF79
		LDA	#$10
		BNE	loc_0_DF7B

loc_0_DF79:				; ...
		LDA	#$E

loc_0_DF7B:				; ...
		JSR	sub_0_DF83

loc_0_DF7E:				; ...
		LDY	tmp_var_22
		JMP	continue_read_anim
; End of function make_weapon


; =============== S U B	R O U T	I N E =======================================


sub_0_DF83:				; ...
		JSR	create_weapon	; returns -1 , if can't create
		BMI	locret_0_DFE5
		LDY	tmp_var_1D
		LDA	#$3A
		STA	Objects_TypeID,Y
		CPX	#2
		BCS	loc_0_DFA3
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		AND	#button_down|button_up
		BEQ	loc_0_DFA3
		CMP	#button_left|button_down
		LDA	#$FF
		BCC	loc_0_DFA5
		LDA	#3
		BNE	loc_0_DFA5	; jump

loc_0_DFA3:				; ...
		LDA	#1

loc_0_DFA5:				; ...
		STA	Objects_Z_speed,Y
		LDA	#0
		STA	Objects_Z_spd_sub,Y
		LDA	#$80
		STA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	tmp_var_1B
		AND	#$F
		STA	Objects_X_speed,Y
		TXA
		STA	Objects_TargetID,Y
		INC	tmp_var_22
		LDA	tmp_var_1B
		BPL	locret_0_DFE5
		LDA	#$FF
		STA	Objects_Z_speed,Y
		LDA	#$3D
		STA	Objects_TypeID,Y
		LDA	#$B0
		STA	Objects_X_speed,Y
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BPL	locret_0_DFE5
		LDA	#$18
		SBC	Camera_Y_pos_l	;  / level_position - on v levels
		STA	Objects_Zpos_L,Y
		LDA	#$20
		SBC	Camera_Y_pos_H
		STA	Objects_Zpos_H,Y

locret_0_DFE5:				; ...
		RTS
; End of function sub_0_DF83


; =============== S U B	R O U T	I N E =======================================

; clear	making damage

clear_state_80:				; ...
		ASL	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		LSR	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage

loc_0_DFEC:				; ...
		JMP	loc_0_DF7E
; End of function clear_state_80


; =============== S U B	R O U T	I N E =======================================


set_z_speed:				; ...
		LDA	Objects_Z_floor,X
		BNE	loc_0_DFEC
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		BPL	loc_0_DFEC
		LDA	#4
		STA	Objects_Z_speed,X
		BNE	loc_0_DFEC	; jump
; End of function set_z_speed


; =============== S U B	R O U T	I N E =======================================


gen_damage_effects:			; ...
		STY	tmp_var_21	; save target obj slot id

gen_damage_effects_:			; ...
		TAY
		LDA	dmg_Xspeed_and_pos,Y ; attacker?  lower	4 bits is pos
		AND	#$F
		STA	tmp_var_8b	; position of dmg hit
		LDA	Objects_X_speed,X
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	dmg_Xspeed_and_pos,Y ; attacker?  lower	4 bits is pos
		AND	#$F0
		BEQ	loc_0_E018
		STA	Objects_X_speed,X

loc_0_E018:				; ...
		LDA	Level_ID
		CMP	#wookie_hole
		BNE	loc_0_E02C
		LDA	Objects_dir,X	; / angle
		PHA
		TXA
		LDX	tmp_var_21	; load target slot id
		STA	Objects_TargetID,X
		PLA
		JMP	loc_0_E041
; ---------------------------------------------------------------------------

loc_0_E02C:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	loc_0_E036
		LDX	tmp_var_21	; load target slot id
		JMP	loc_0_E044
; ---------------------------------------------------------------------------

loc_0_E036:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#turned_left
		ASL	A
		STA	Objects_dir,X	; / angle
		LDX	tmp_var_21	; load target slot id

loc_0_E041:				; ...
		STA	Objects_dir,X	; / angle

loc_0_E044:				; ...
		LDA	dmg_Xspeed,Y	; target?
		CMP	#2
		BEQ	loc_0_E056
		CMP	#1
		BNE	loc_0_E053
		ADC	tmp_var_15	;  / Object Counter / various tmp
		LDA	tmp_var_15	;  / Object Counter / various tmp

loc_0_E053:				; ...
		STA	Objects_X_speed,X

loc_0_E056:				; ...
		LDA	dmg_Zspeed,Y
		STA	Objects_Z_speed,X
		LDA	#0
		STA	Objects_Z_spd_sub,X
		LDA	Objects_Life,X
		SEC
		SBC	dmg_levels,Y
		STA	tmp_var_15	; new life value
		BCC	loc_0_E07B
		EOR	Objects_Life,X
		AND	#$F0
		BEQ	loc_0_E091
		LDA	tmp_var_15	;  / Object Counter / various tmp
		ORA	#$F
		STA	tmp_var_15	;  / Object Counter / various tmp
		BNE	loc_0_E091	; jump

loc_0_E07B:				; ...
		LDA	#$C0
		STA	Objects_death_timer,X ;	undamage time
		LDA	Level_ID
		CMP	#wookie_hole
		BNE	loc_0_E08B
		LDA	#$81
		STA	Objects_death_timer,X ;	undamage time

loc_0_E08B:				; ...
		LDA	#0
		STA	tmp_var_15	;  / Object Counter / various tmp
		BEQ	zero_life

loc_0_E091:				; ...
		LDA	tmp_var_15	; mew life value
		EOR	Objects_Life,X	; old life value
		AND	#$38
		BEQ	write_new_obj_life

zero_life:				; ...
		CPX	#2
		BCS	write_new_obj_life
		INC	update_ui_flag	; if damaged player

write_new_obj_life:			; ...
		LDA	tmp_var_15	;  / Object Counter / various tmp
		STA	Objects_Life,X
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_E0C4
		LDA	dmg_anims_timer,Y
		CMP	#$40
		BCS	loc_0_E0BE
		LDA	#$78
		CPX	#2
		BCS	loc_0_E0BE
		LDA	#3
		STA	Objects_Z_speed,X
		LDA	#$D4

loc_0_E0BE:				; ...
		STA	Obj_anims_timer,X ; timer used for gfx frames
		JMP	loc_0_E0CA
; ---------------------------------------------------------------------------

loc_0_E0C4:				; ...
		LDA	dmg_anims_timer,Y
		STA	Obj_anims_timer,X ; timer used for gfx frames

loc_0_E0CA:				; ...
		LDY	tmp_var_21	; load target slot id
		LDX	Object_RamSlotID_tmp ; load attacked slot id
		RTS
; End of function gen_damage_effects

; ---------------------------------------------------------------------------
dmg_Xspeed:	.BYTE $30		; ...
					; target?
dmg_Zspeed:	.BYTE 0			; ...
dmg_Xspeed_and_pos:.BYTE 0		; ...
					; attacker?  lower 4 bits is pos
dmg_levels:	.BYTE 2			; ...
dmg_anims_timer:.BYTE $3F		; ...
		.BYTE  $C0,   4,   0,	8, $78 ; damage	tables
		.BYTE  $F0,   6,   1, $10, $78
		.BYTE  $FF,   7,   9, $FF, $40
		.BYTE  $F0,   4, $11, $10, $58
		.BYTE  $F0,  $A,   9, $FF, $40
		.BYTE  $FF,   9,   9, $FF, $40
		.BYTE	 1,   2,   0,	8, $40 ; udar po voronam
		.BYTE	 1,   0,   4, $7F, $3F
		.BYTE  $30,   6,   0, $10, $78
		.BYTE  $30, $FB,   2,	8, $70
		.BYTE  $70,   5, $E8,	8, $70
		.BYTE	 1,   0, $40, $10, $3F
		.BYTE	 1, $FE,   1, $10, $40
		.BYTE  $C0,   2, $20,	8, $40
		.BYTE	 4,   4,   0, $10, $50
		.BYTE	 4, $FF,   0, $10, $50
		.BYTE  $F1,   6,   0,	4, $80
		.BYTE  $34,   0,   0,	4, $1C
		.BYTE  $C0,   5,   0,	8, $D0
		.BYTE  $F0,   6,   1, $10, $D4
		.BYTE  $FF,   6,   9, $FF, $D4 ; udar utki
		.BYTE  $F0,   4, $12, $10, $D4
		.BYTE  $FE,   9,   9, $FF, $E0 ; robot explosion
		.BYTE  $FF,   9,   9, $FF, $E0
		.BYTE	 1,   0, $41,	8, $3F
		.BYTE	 1,   4, $11, $FF, $D4
		.BYTE  $A0,   7,   0, $10, $D5
		.BYTE  $30, $FC, $82,	8, $D4
		.BYTE  $70,   5, $C8, $20, $D4
		.BYTE	 1,   0, $45, $10, $20
		.BYTE	 1, $FE, $11, $10, $3F
		.BYTE  $40,   2, $20,	8, $D4
		.BYTE	 4,   4,   0, $10, $D4 ; robo manus bullets, ice spikes
		.BYTE	 4, $FF,   0, $10, $D4
		.BYTE  $F1,   6,   0,	4, $D4

; =============== S U B	R O U T	I N E =======================================


sub_0_E183:				; ...
		JSR	sub_0_9F8E

loc_0_E186:				; ...
		LDA	#8
		STA	Objects_gfx_frame,X
		RTS
; End of function sub_0_E183


; =============== S U B	R O U T	I N E =======================================


sub_0_E18C:				; ...
		JSR	objects_Z?
		JSR	levels_physics_bank5

loc_0_E192:				; ...
		LDA	#0
		STA	Objects_X_speed,X
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_E1A1
		DEC	Objects_death_timer,X ;	undamage time
		BMI	loc_0_E186

loc_0_E1A1:				; ...
		JMP	clear_object_vars ; remove object
; End of function sub_0_E18C

; ---------------------------------------------------------------------------
		JMP	loc_0_E267	; unused?

; =============== S U B	R O U T	I N E =======================================


sub_0_E1A7:				; ...
		LDA	#$FC
		JSR	object_inc_to_Xspeed ; A is speed
		LDA	#$C8
		JSR	objects_Z_phys?
		LDA	Level_ID
		CMP	#volkmire_inferno
		BEQ	loc_0_E1BB
		CMP	#revolution
		BNE	loc_0_E1CD

loc_0_E1BB:				; ...
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_E1CD
		LDA	#8
		STA	Objects_Z_floor,X
		ORA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BNE	loc_0_E1D0

loc_0_E1CD:				; ...
		JSR	levels_physics_bank5

loc_0_E1D0:				; ...
		LDA	#8
		STA	Objects_gfx_frame,X
		JSR	test_Z_speed_and_floor?
		BNE	loc_0_E1DD
		JSR	loc_0_B057

loc_0_E1DD:				; ...
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$40
		BNE	loc_0_E1F7
		LDA	#7
		STA	Objects_gfx_frame,X
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		CMP	#$3B
		BCS	loc_0_E203
		LDA	#4
		STA	Objects_gfx_frame,X
		BNE	loc_0_E203

loc_0_E1F7:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		CMP	#$60
		BCC	loc_0_E203
		LDA	#5
		STA	Objects_gfx_frame,X

loc_0_E203:				; ...
		JMP	sub_0_9E59
; End of function sub_0_E1A7


; =============== S U B	R O U T	I N E =======================================


object_Psyko_Pig:			; ...
		LDA	objects_some_anim,X ; some obj X speed
		BEQ	loc_0_E215
		BPL	loc_0_E215
		LDA	#0
		STA	objects_some_anim,X ; some obj X speed
		JSR	set_target_random

loc_0_E215:				; ...
		LDA	Objects_death_timer,X ;	undamage time
		BNE	loc_0_E21E
		LDA	#$1E
		STA	camera_lock_cnt

loc_0_E21E:				; ...
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		BEQ	sub_0_E226
		JMP	sub_0_E183
; End of function object_Psyko_Pig


; =============== S U B	R O U T	I N E =======================================


sub_0_E226:				; ...
		JSR	obj_moving_by_speed
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	loc_0_E231
		JMP	sub_0_E1A7
; ---------------------------------------------------------------------------

loc_0_E231:				; ...
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_E239
		JMP	sub_0_E18C
; ---------------------------------------------------------------------------

loc_0_E239:				; ...
		LDA	#$D8
		JSR	objects_Z_phys?
		JSR	levels_physics_bank5
		JSR	sub_0_E271
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$10
		BEQ	loc_0_E252
		LDA	#$A0
		STA	Objects_X_speed,X
		BNE	loc_0_E257

loc_0_E252:				; ...
		LDA	#$FD
		JSR	object_inc_to_Xspeed ; A is speed

loc_0_E257:				; ...
		LDA	Objects_AnimID,X ; номер движения для запуска
		BEQ	loc_0_E264
		JSR	obj_set_flags_by_dir
		LDA	#3		; every	fouth frame
		JMP	start_read_anim	; with ptr inc by AND with frame cnt
; ---------------------------------------------------------------------------

loc_0_E264:				; ...
		JSR	sub_0_E317

loc_0_E267:				; ...
		JSR	obj_counter_inc_by_speed
		LDA	byte_0_E46D,Y
		STA	Objects_gfx_frame,X
		RTS
; End of function sub_0_E226


; =============== S U B	R O U T	I N E =======================================


sub_0_E271:				; ...
		LDA	some_lvl_flag_cnt ; 0-air,1-h_surf,2-right,3-left naklon
		BPL	locret_0_E293
		LDA	Objects_Z_floor,X
		BNE	locret_0_E293
		LDA	some_for_Z?
		CMP	#$F0
		BEQ	locret_0_E293
		SBC	Objects_Zpos_L,X
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		TAY
		LDA	byte_0_E294,Y
		STA	Objects_Z_speed,X
		LDA	#$C0
		STA	Objects_Z_spd_sub,X

locret_0_E293:				; ...
		RTS
; End of function sub_0_E271

; ---------------------------------------------------------------------------
byte_0_E294:	.BYTE 1, 3, 3, 4, 4, 5,	5, 5, 5, 5, 5, 6, 6, 6,	6, 6 ; ...

; =============== S U B	R O U T	I N E =======================================


create_Psyko_Pig:			; ...
		LDA	#$1E
		STA	camera_lock_cnt
		LDA	Objects_Zpos_L,X
		ROR	A
		ROR	A
		AND	#$80
		STA	Objects_dir,X	; / angle
		LSR	A
		ORA	#$20
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	#$40
		STA	Objects_X_speed,X
		JSR	obj_moving_by_speed
		DEC	objects_some_anim,X ; some obj X speed
		BNE	loc_0_E267
		LDA	#$B
		STA	Objects_TypeID,X
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$DF
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		JMP	set_target_random
; End of function create_Psyko_Pig


; =============== S U B	R O U T	I N E =======================================


obj_counter_inc_by_speed:		; ...
		LDA	Objects_X_speed,X

obj_unjk_cnt_add:			; ...
		BEQ	loc_0_E2DF

obj_unjk_cnt_add_:			; ...
		LSR	A
		LSR	A

obj_unjk_cnt_add__:			; ...
		ADC	Obj_various_cnt,X

loc_0_E2DF:				; ...
		STA	Obj_various_cnt,X

loc_0_E2E2:				; ...
		ROL	A
		ROL	A
		ROL	A
		AND	#3
		TAY

locret_0_E2E8:				; ...
		RTS
; End of function obj_counter_inc_by_speed


; =============== S U B	R O U T	I N E =======================================


set_target_random:			; ...
		LDY	#0
		LDA	Lives_Player2	; кол-во жизней	(сердечек)
		BMI	loc_0_E305
		INY
		LDA	Lives_Player1	; кол-во жизней	(сердечек)
		BMI	loc_0_E305
		LDA	RandomValue_1
		AND	#1
		TAY
		LDA	Objects_death_timer,Y ;	undamage time
		ORA	Lives_Player1,Y	; кол-во жизней	(сердечек)
		BPL	loc_0_E305
		TYA
		EOR	#1
		TAY

loc_0_E305:				; ...
		TYA
		STA	Objects_TargetID,X
		RTS
; End of function set_target_random


; =============== S U B	R O U T	I N E =======================================


sub_0_E30A:				; ...
		JSR	set_target_random
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$10
		BEQ	locret_0_E2E8
		JMP	speed_limit
; End of function sub_0_E30A


; =============== S U B	R O U T	I N E =======================================


sub_0_E317:				; ...
		LDY	Objects_TargetID,X
		LDA	Objects_death_timer,Y ;	undamage time
		ORA	Lives_Player1,Y	; кол-во жизней	(сердечек)
		AND	#$80
		STA	tmp_var_1A
		LDA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$40
		ORA	Objects_Linker_ID,Y ; флаг/id какой объект меня	прицепил
		ORA	tmp_var_1A
		STA	tmp_var_1A
		BNE	sub_0_E30A

loc_0_E332:				; ...
		TXA
		EOR	FrameCounter
		AND	#7
		STA	tmp_var_19
		BNE	locret_0_E2E8
; End of function sub_0_E317


; =============== S U B	R O U T	I N E =======================================


sub_0_E33B:				; ...
		LDA	Objects_Xpos_L,Y
		SBC	Objects_Xpos_L,X
		STA	tmp_var_16
		LDA	Objects_Xpos_H,Y
		SBC	Objects_Xpos_H,X
		STA	tmp_var_15	;  / Object Counter / various tmp
		AND	#$80
		STA	tmp_var_18
		LDA	Objects_Ypos_L,Y
		SBC	Objects_Ypos_L,X
		STA	tmp_var_17
		ADC	#8
		CMP	#$10
		LDA	#0
		BCC	loc_0_E37C
		LDA	tmp_var_16
		ADC	#$40
		BMI	loc_0_E374
		LDA	tmp_var_15	;  / Object Counter / various tmp
		ADC	#0
		BNE	loc_0_E374
		LDA	Objects_dir,X	; / angle
		ADC	#$40
		AND	#$80
		STA	tmp_var_18

loc_0_E374:				; ...
		LDA	#$20
		ROL	tmp_var_17
		BCC	loc_0_E37C
		LDA	#$E0

loc_0_E37C:				; ...
		STA	tmp_var_17
		LDA	Objects_TypeID,X
		CMP	#$11
		BEQ	loc_0_E396
		CMP	#$12
		BEQ	loc_0_E396
		CMP	#$17
		BNE	loc_0_E39F
		LDA	Objects_dir,X	; / angle
		ADC	#$40
		AND	#$80
		STA	tmp_var_18

loc_0_E396:				; ...
		LDA	tmp_var_17
		CMP	#$80
		ROR	A
		STA	tmp_var_17
		LDA	#$B

loc_0_E39F:				; ...
		CMP	#$47
		BEQ	loc_0_E3AF
		CMP	#$11
		BEQ	loc_0_E3AF
		CMP	#$12
		BEQ	loc_0_E3AF
		CMP	#$B
		BNE	sub_0_E3C0

loc_0_E3AF:				; ...
		LDA	tmp_var_18
		ROL	A
		LDA	tmp_var_17
		BCS	loc_0_E3BA
		SBC	#0
		EOR	#$FF

loc_0_E3BA:				; ...
		CLC
		ADC	tmp_var_18
		STA	Objects_dir,X	; / angle
; End of function sub_0_E33B


; =============== S U B	R O U T	I N E =======================================


sub_0_E3C0:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$BF
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	Level_ID
		CMP	#revolution
		BNE	loc_0_E3D2
		ROR	tmp_var_15	;  / Object Counter / various tmp
		ROR	tmp_var_15	;  / Object Counter / various tmp

loc_0_E3D2:				; ...
		LDA	tmp_var_15	;  / Object Counter / various tmp
		LSR	A
		AND	#$40
		ORA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	Objects_TypeID,X
		CMP	#$B
		BNE	locret_0_E44E
		LDA	tmp_var_17
		BEQ	loc_0_E3F2
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$10
		BEQ	loc_0_E43B
		JMP	speed_limit
; ---------------------------------------------------------------------------

loc_0_E3F2:				; ...
		LDA	tmp_var_16
		ADC	#$40
		STA	tmp_var_16
		LDA	tmp_var_15	;  / Object Counter / various tmp
		ADC	#0
		BNE	loc_0_E452
		LDA	tmp_var_16
		SBC	#$20
		CMP	#$40
		BCS	loc_0_E452
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$10
		BEQ	loc_0_E411
		LDA	#$40
		BNE	loc_0_E438

loc_0_E411:				; ...
		LDA	tmp_var_16
		SEC
		SBC	#$2C
		CMP	#$28
		BCS	loc_0_E426
		LDA	tmp_var_15	;  / Object Counter / various tmp
		EOR	#$80
		AND	#$80
		STA	Objects_dir,X	; / angle
		JMP	loc_0_E43B
; ---------------------------------------------------------------------------

loc_0_E426:				; ...
		LDA	#$2C
		STA	Objects_X_speed,X
		LDA	Objects_Life,Y
		AND	#$F
		CMP	#4
		LDA	#$28
		BCS	loc_0_E438
		LDA	#$2A

loc_0_E438:				; ...
		JMP	write_obj_Anim_ID
; ---------------------------------------------------------------------------

loc_0_E43B:				; ...
		STY	tmp_var_8d
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#3
		CLC
		ADC	some_anim_tmp?
		TAY
		LDA	byte_0_E44F,Y
		LDY	tmp_var_8d
		STA	Objects_X_speed,X

locret_0_E44E:				; ...
		RTS
; ---------------------------------------------------------------------------
byte_0_E44F:	.BYTE $30, $40,	$80	; ...
; ---------------------------------------------------------------------------

loc_0_E452:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#3
		ORA	some_anim_tmp?
		BEQ	loc_0_E43B
		LDA	Objects_Xpos_L,X
		EOR	RandomValue_1
		AND	#$1F
		BNE	loc_0_E43B
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ORA	#$10
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		RTS
; End of function sub_0_E3C0

; ---------------------------------------------------------------------------
byte_0_E46D:	.BYTE 3, 4, 3, 2	; ...

; =============== S U B	R O U T	I N E =======================================


sub_0_E471:				; ...
		LDA	Level_ID
		CMP	#ragnarok_canyon
		BNE	levels_physics_bank5
		LDA	timer_end_music
		BNE	levels_physics_bank5
		JSR	levels_physics_bank5
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#8
		BNE	locret_0_E4AC
		LDA	Objects_Ypos_L,X
		SEC
		SBC	Objects_Zpos_L,X
		CLC
		ADC	Objects_Z_floor,X
		SEC
		SBC	Camera_Y_pos_l	;  / level_position - on v levels
		SEC
		SBC	#$D0
		BCC	locret_0_E4AC
		STA	tmp_var_15	;  / Object Counter / various tmp
		CMP	#5
		BCS	locret_0_E4AC
		SEC
		LDA	Objects_Ypos_L,X
		SBC	tmp_var_15	;  / Object Counter / various tmp
		STA	Objects_Ypos_L,X
		BCS	locret_0_E4AC
		DEC	Objects_Ypos_H,X

locret_0_E4AC:				; ...
		RTS
; End of function sub_0_E471


; =============== S U B	R O U T	I N E =======================================


levels_physics_bank5:			; ...
		LDX	#$12		; BANK5:BC39
		LDY	#5
		JMP	jump_from_bank0
; End of function levels_physics_bank5


; =============== S U B	R O U T	I N E =======================================


game_start_entry:			; ...
		LDX	#$C		; func ID
		LDY	#6		; bank ID = 6?
		JSR	jump_from_bank0	; BANK6:A16D
		LDX	#<game_start_nmi
		LDY	#>game_start_nmi ; $E4C6
		JMP	set_nmi_func_ptr ; input X,Y
; End of function game_start_entry


; =============== S U B	R O U T	I N E =======================================


sub_0_E4C2:				; ...
		LDX	#$12
		BNE	loc_0_E4C8

game_start_nmi:				; ...
		LDX	#$F

loc_0_E4C8:				; ...
		LDY	#6
		JSR	jump_from_bank0
		LDA	jump_ptr_nmi+1	; поинтер на функцию во	время nmi
		BEQ	loc_0_E4F4
		LDA	ppu_ctrl1_val	;  > $80  кадр завершен
		ORA	#$80
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		STA	ppu_ctrl1_val	;  > $80  кадр завершен
		LDA	second_load	; 0 after reset, 1 if restart
		BEQ	loc_0_E4EE
		JSR	joypads_reading
		LDA	InputHold_P1	; данные первого джойстика на зажатие
		ORA	InputHold_P2	; данные второго джойстика на зажатие
		BEQ	loc_0_E4EE
		LDA	game_end_caller_var
		BNE	loc_0_E4F1
		JMP	loc_0_8313
; ---------------------------------------------------------------------------

loc_0_E4EE:				; ...
		JMP	frame_end_wait_nmi
; ---------------------------------------------------------------------------

loc_0_E4F1:				; ...
		JMP	game_end
; ---------------------------------------------------------------------------

loc_0_E4F4:				; ...
		LDX	#<sub_0_E4C2
		LDY	#>sub_0_E4C2	; $E4C2
		JMP	set_nmi_func_ptr ; input X,Y
; End of function sub_0_E4C2


; =============== S U B	R O U T	I N E =======================================


sub_0_E4FB:				; ...
		LDA	#$28
		STA	load_flag2
		LDX	#$15
		LDY	#6
		JSR	jump_from_bank0
		LDX	#<sub_0_E50D
		LDY	#>sub_0_E50D	; $E50D
		JMP	set_nmi_func_ptr ; input X,Y
; End of function sub_0_E4FB


; =============== S U B	R O U T	I N E =======================================


sub_0_E50D:				; ...
		LDX	#$18
		LDY	#6
		JSR	jump_from_bank0
		LDA	Levels_passed_cnt
		BNE	loc_0_E535
		LDA	FrameCounter
		CMP	#$48
		BNE	loc_0_E532
		LDA	#$10		; title	screen music
		JSR	set_music_track
		JSR	playing_music_upd
		LDA	#$FF
		STA	Level_ID
		LDA	#<sub_0_E55A
		STA	jump_ptr_nmi	; поинтер на функцию во	время nmi
		LDA	#>sub_0_E55A	; $E55A
		STA	jump_ptr_nmi+1	; поинтер на функцию во	время nmi

loc_0_E532:				; ...
		JMP	frame_end_wait_nmi
; ---------------------------------------------------------------------------

loc_0_E535:				; ...
		JSR	music_play_bank3_
		LDA	FrameCounter
		CMP	#$98
		BNE	loc_0_E532
		INC	Levels_passed_cnt
		JMP	level_completed
; End of function sub_0_E50D


; =============== S U B	R O U T	I N E =======================================


Clear_Scrolls_ScreenON_UpdMusic:	; ...
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDA	#0
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		STA	Camera_X_pos_l	;  / level_position - on h levels
; End of function Clear_Scrolls_ScreenON_UpdMusic


; =============== S U B	R O U T	I N E =======================================


write_VScrlReg_ScreenON_UpdMusic:	; ...
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		LDA	#$18		; show bg+spr
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
; End of function write_VScrlReg_ScreenON_UpdMusic


; =============== S U B	R O U T	I N E =======================================


jump_to_music_play:			; ...
		LDA	#0
		JMP	music_play_bank3 ; playing_music
; End of function jump_to_music_play


; =============== S U B	R O U T	I N E =======================================


sub_0_E55A:				; ...
		JSR	Clear_Scrolls_ScreenON_UpdMusic
		JSR	joypads_reading
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		CMP	#$99
		BEQ	sub_0_E58F
		LDA	music_active_flag ; channel is used
		BEQ	sub_0_E58F
		LDA	InputHold_P1	; данные первого джойстика на зажатие
		ORA	InputHold_P2	; данные второго джойстика на зажатие
		BNE	sub_0_E58F

loc_0_E571:				; ...
		LDY	#4
		JSR	wait0		; wait by X,Y

loc_0_E576:				; ...
		LDA	nmi_pcm_flags
		BPL	loc_0_E58C

loc_0_E57A:				; ...
		LDA	ppu_ctrl1_val	;  > $80  кадр завершен
		ORA	#$80		; nmi enabled
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		AND	#$7F		; disabled
		STA	ppu_ctrl1_val	;  > $80  кадр завершен
		LDX	#$1B
		LDY	#3		; other_play_pcm
		JSR	jump_from_bank0

loc_0_E58C:				; ...
		JMP	frame_end_wait_nmi
; End of function sub_0_E55A


; =============== S U B	R O U T	I N E =======================================


sub_0_E58F:				; ...
		LDA	#$FE
		STA	Level_ID
		LDA	#0
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		LDA	ppu_ctrl1_val	;  > $80  кадр завершен
		ORA	#$80
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		AND	#$7F
		STA	ppu_ctrl1_val	;  > $80  кадр завершен
		LDA	#$FF
		STA	Lives_Player1	; кол-во жизней	(сердечек)
		STA	Lives_Player2	; кол-во жизней	(сердечек)
		LDX	#$2D
		LDY	#6
		JSR	jump_from_bank0
		LDA	#$C0
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDX	#$42
		LDY	#3
		JSR	jump_from_bank0
		INC	Level_ID
		LDX	#<sub_0_E5C4
		LDY	#>sub_0_E5C4	; $E5C4
		JMP	set_nmi_func_ptr ; input X,Y
; End of function sub_0_E58F


; =============== S U B	R O U T	I N E =======================================


sub_0_E5C4:				; ...
		JSR	Clear_Scrolls_ScreenON_UpdMusic
		JSR	joypads_reading
		LDA	InputTap_P1	; данные первого джойстика на нажатие
		ORA	InputTap_P2	; данные второго джойстика на нажатие
		AND	#button_start
		BNE	loc_0_E5DE
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		CMP	#$90
		BEQ	loc_0_E5DB
		JMP	loc_0_E571
; ---------------------------------------------------------------------------

loc_0_E5DB:				; ...
		JMP	loc_0_8316
; ---------------------------------------------------------------------------

loc_0_E5DE:				; ...
		JSR	sounds_stop
		JSR	set_players_lifes ; continue
		JMP	set_lvl_tmp_0
; End of function sub_0_E5C4


; =============== S U B	R O U T	I N E =======================================

; continue

set_players_lifes:			; ...
		LDX	#1

loc_0_E5E9:				; ...
		STX	tmp_var_8d
		LDA	InputTap_P1,X	; данные первого джойстика на нажатие
		AND	#button_start
		BEQ	loc_0_E622
		LDA	Continues_Player1,X
		BMI	loc_0_E622
		LDA	Lives_Player1,X	; кол-во жизней	(сердечек)
		BPL	loc_0_E622
		LDA	#3
		STA	Lives_Player1,X	; кол-во жизней	(сердечек)
		DEC	Continues_Player1,X
		LDA	snd_pl_appear,X
		PHA
		LDA	snd_ch_pl_appear,X
		TAX
		PLA
		JSR	jump_to_play_sound ; A is sound	id, X -	JmpOff (channel	id)
		LDA	#$60
		STA	global_var_cnt?
		LDX	tmp_var_8d
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		CMP	#button_down|button_start|button_B|button_A
		BNE	loc_0_E622
		LDA	#5		; extra	lives cheat
		STA	Lives_Player1,X	; кол-во жизней	(сердечек)
		LDA	#$B
		JSR	play_sound_ch4
		LDX	tmp_var_8d

loc_0_E622:				; ...
		DEX
		BPL	loc_0_E5E9
		RTS
; End of function set_players_lifes

; ---------------------------------------------------------------------------
snd_pl_appear:	.BYTE $30, $32		; ...
snd_ch_pl_appear:.BYTE $C, $F		; ...

; =============== S U B	R O U T	I N E =======================================


sounds_stop:				; ...
		LDY	#0
		STY	SND_MASTERCTRL_REG ; pAPU Sound/Vertical Clock Signal Register (R)

loc_0_E62F:				; ...
		LDA	#$10
		STA	SND_SQUARE1_REG,Y ; pAPU Pulse #1 Control Register (W)
		STA	sounds_r_4000,Y
		LDA	#0
		STA	music_active_flag,Y ; channel is used
		INY
		CPY	#$10
		BNE	loc_0_E62F
		DEY
		STY	SND_MASTERCTRL_REG ; pAPU Sound/Vertical Clock Signal Register (R)
		RTS
; End of function sounds_stop


; =============== S U B	R O U T	I N E =======================================


sub_0_E646:				; ...
		LDA	#$FF
		STA	Object_RamSlotID_tmp ; id saved	for objects functions
		LDX	#$1B
		LDY	#6
		JSR	jump_from_bank0
		LDX	#<sub_0_E672
		LDY	#>sub_0_E672	; $E672
		JMP	set_nmi_func_ptr ; input X,Y
; End of function sub_0_E646

; ---------------------------------------------------------------------------
		JMP	nmi_func_cont_screen2 ;	used from BANK6:9986

; =============== S U B	R O U T	I N E =======================================


sub_0_E65B:				; ...
		LDX	#$21
		LDY	#6
		JSR	jump_from_bank0
		JSR	joypads_reading
		LDA	Levels_passed_cnt
		BNE	loc_0_E688
		LDA	InputHold_P1	; данные первого джойстика на зажатие
		ORA	InputHold_P2	; данные второго джойстика на зажатие
		BNE	loc_0_E685
		JMP	loc_0_E688
; End of function sub_0_E65B


; =============== S U B	R O U T	I N E =======================================


sub_0_E672:				; ...
		LDX	#$1E
		LDY	#6
		JSR	jump_from_bank0
		JSR	joypads_reading
		LDA	InputHold_P1	; данные первого джойстика на зажатие
		ORA	InputHold_P2	; данные второго джойстика на зажатие
		BNE	loc_0_E685
		JMP	loc_0_E6B0
; ---------------------------------------------------------------------------

loc_0_E685:				; ...
		JMP	sub_0_E58F
; ---------------------------------------------------------------------------

loc_0_E688:				; ...
		LDA	FrameCounter
		CMP	#$3E
		BEQ	loc_0_E696
		CMP	#$5E
		BEQ	loc_0_E696
		CMP	#$1E
		BNE	loc_0_E69D

loc_0_E696:				; ...
		LDA	#$34
		LDX	#snd_channel1
		JSR	jump_to_play_sound ; A is sound	id, X -	JmpOff (channel	id)

loc_0_E69D:				; ...
		LDA	FrameCounter
		CMP	#$A0
		BEQ	loc_0_E6AB
		CMP	#$C0
		BEQ	loc_0_E6AB
		CMP	#$E0
		BNE	loc_0_E6B0

loc_0_E6AB:				; ...
		LDA	#$36
		JSR	play_sound_ch4

loc_0_E6B0:				; ...
		LDA	#0
		JSR	music_play_bank3 ; playing_music
		LDA	#0
		STA	nmi_pcm_flags
		JMP	frame_end_wait_nmi
; End of function sub_0_E672


; =============== S U B	R O U T	I N E =======================================


sub_0_E6BC:				; ...
		LDX	#<sub_0_E65B
		LDY	#>sub_0_E65B	; $E65B
		JMP	set_nmi_func_ptr ; input X,Y
; End of function sub_0_E6BC


; =============== S U B	R O U T	I N E =======================================


sub_0_E6C3:				; ...
		LDA	#0
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		INC	Levels_passed_cnt
		LDX	#2
		STX	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	clear_object_vars ; remove object
		LDX	#$24
		LDY	#6
		JSR	jump_from_bank0

loc_0_E6D8:				; ...
		LDA	#$38
		JSR	play_sound_ch4
		LDX	#<sub_0_E6E4
		LDY	#>sub_0_E6E4	; $E6E4
		JMP	set_nmi_func_ptr ; input X,Y
; End of function sub_0_E6C3


; =============== S U B	R O U T	I N E =======================================


sub_0_E6E4:				; ...
		LDX	#$27
		LDY	#6
		JSR	jump_from_bank0
		LDA	game_end_caller_var
		BNE	loc_0_E70D
		LDA	FrameCounter
		ROR	A
		BCC	loc_0_E707
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		CMP	#$90
		BNE	loc_0_E707
		LDX	#snd_channel1
		LDA	Lives_Player1	; кол-во жизней	(сердечек)
		BPL	loc_0_E702
		LDX	#snd_channel2

loc_0_E702:				; ...
		LDA	#$42
		JSR	jump_to_play_sound ; A is sound	id, X -	JmpOff (channel	id)

loc_0_E707:				; ...
		JSR	joypads_reading
		JSR	set_players_lifes ; continue

loc_0_E70D:				; ...
		LDA	sound_id_D
		BNE	loc_0_E717
		LDA	#$38
		JSR	play_sound_ch4

loc_0_E717:				; ...
		LDA	#0
		JSR	music_play_bank3 ; playing_music
		JMP	frame_end_wait_nmi
; End of function sub_0_E6E4


; =============== S U B	R O U T	I N E =======================================


continue_screen:			; ...
		INC	cont_screen_cnt
		LDA	#0
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		JSR	screen_off
		LDA	#0
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		STA	ppu_ctrl1_val	;  > $80  кадр завершен
		JSR	sounds_stop
		LDX	#0

loc_0_E735:				; ...
		LDA	#0
		STA	$300,X
		STA	$400,X
		CPX	#$F4
		BCS	loc_0_E744
		STA	$500,X

loc_0_E744:				; ...
		STA	$600,X
		PHA
		DEX
		BNE	loc_0_E735
		DEX
		TXS
		LDA	#$A
		JSR	set_music_track
		LDX	#$30
		LDY	#6
		JSR	jump_from_bank0
		JMP	sub_0_E6BC
; End of function continue_screen


; =============== S U B	R O U T	I N E =======================================


nmi_func_cont_screen2:			; ...
		LDA	#$23
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$50
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	timer_cont_scrn_sec
		CLC
		ADC	#$5E
		STA	PPU_DATA	; VRAM I/O Register (RW)
		JSR	Clear_Scrolls_ScreenON_UpdMusic
		LDA	#$FF
		STA	Level_ID
		LDA	global_var_cnt?
		BEQ	loc_0_E78E
		DEC	global_var_cnt?
		BNE	loc_0_E7AF
		BEQ	loc_0_E79A

loc_0_E77F:				; ...
		LDA	Levels_passed_cnt
		STA	Level_ID
		LDA	#$19
		LDY	cont_screen_cnt
		CPY	#2
		ADC	#0
		JMP	loc_0_D515
; ---------------------------------------------------------------------------

loc_0_E78E:				; ...
		DEC	timer_cont_scrn_60
		BNE	loc_0_E7A9
		LDA	#60
		STA	timer_cont_scrn_60
		DEC	timer_cont_scrn_sec
		BPL	loc_0_E7A9

loc_0_E79A:				; ...
		LDA	Lives_Player1	; кол-во жизней	(сердечек)
		BPL	loc_0_E77F
		LDA	Lives_Player2	; кол-во жизней	(сердечек)
		BPL	loc_0_E77F
		LDA	#1
		STA	Levels_passed_cnt
		JMP	loc_0_DA24
; ---------------------------------------------------------------------------

loc_0_E7A9:				; ...
		JSR	joypads_reading
		JSR	set_players_lifes ; continue

loc_0_E7AF:				; ...
		JMP	loc_0_E571
; End of function nmi_func_cont_screen2


; =============== S U B	R O U T	I N E =======================================


update_pal_to_vram:			; ...
		TSX
		STX	stackp_save
		JMP	vram_update_palette
; End of function update_pal_to_vram

; ---------------------------------------------------------------------------
prujina_Z_spd:	.BYTE 0, 0, 0, 1, $FD, $FD, $FD, $FE, $FE, $FF,	$FF, $FF, 0, 0,	1, 1, 1	; ...
		.BYTE 2, 2, 2, 3, 3, 2,	2, 1, 1, 0, 0, $FF, $FF, $FF, $FF, 0, $80
; ---------------------------------------------------------------------------

loc_0_E7DA:				; ...
		JMP	loc_0_E89F

; =============== S U B	R O U T	I N E =======================================


object_prujina:				; ...
		JSR	sub_0_E860
		JSR	sub_0_E926
		LDA	Level_ID
		CMP	#intruder_excluder
		BNE	loc_0_E7FD
		JSR	loc_0_E7FD
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	Objects_TypeID,X
		BEQ	locret_0_E7FC
		LDA	Objects_gfx_frame,X
		CLC
		ADC	#$33
		STA	Objects_gfx_frame,X

locret_0_E7FC:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_E7FD:				; ...
		LDA	#$68
		LDY	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BEQ	loc_0_E7DA
		STA	Objects_gfx_frame,X
		CPY	#$E
		BNE	loc_0_E812
		LDA	#$A9
		JSR	play_sound_ch2
		LDY	#$E

loc_0_E812:				; ...
		LDA	prujina_Z_spd -	$C,Y
		CMP	#$80
		BNE	sub_0_E832
		JSR	sub_0_E820
		LDA	#$68
		BNE	loc_0_E89F	; jump
; End of function object_prujina


; =============== S U B	R O U T	I N E =======================================


sub_0_E820:				; ...
		LDA	Objects_cnt2,X
		STA	Objects_Zpos_L,X
		LDA	Objects_cnt3,X
		STA	Objects_Zpos_H,X
		LDA	#0
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		RTS
; End of function sub_0_E820


; =============== S U B	R O U T	I N E =======================================


sub_0_E832:				; ...
		STA	Objects_Z_speed,X
		INC	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		BPL	loc_0_E840
		ASL	Objects_Z_speed,X

loc_0_E840:				; ...
		CPY	#$22
		BCS	loc_0_E84C
		JSR	sub_0_E988
		INC	Objects_gfx_frame,X
		BNE	loc_0_E850

loc_0_E84C:				; ...
		TYA
		JSR	sub_0_E98F

loc_0_E850:				; ...
		LDA	Objects_Z_speed,X
		BPL	loc_0_E85A
		LDA	#$69
		STA	Objects_gfx_frame,X

loc_0_E85A:				; ...
		LDA	Objects_gfx_frame,X
		JMP	obj_add_Z_by_Zspd?
; End of function sub_0_E832


; =============== S U B	R O U T	I N E =======================================


sub_0_E860:				; ...
		LDA	Objects_cnt2,X
		BNE	locret_0_E871
		LDA	Objects_Zpos_L,X
		STA	Objects_cnt2,X
		LDA	Objects_Zpos_H,X
		STA	Objects_cnt3,X

locret_0_E871:				; ...
		RTS
; End of function sub_0_E860


; =============== S U B	R O U T	I N E =======================================


object_level4_platform_mov_down:	; ...
		JSR	sub_0_E860
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BNE	loc_0_E89D
		LDA	Objects_Zpos_L,X
		CMP	Objects_cnt2,X
		BNE	loc_0_E88A
		LDA	Objects_Zpos_H,X
		EOR	Objects_cnt3,X
		BEQ	loc_0_E894

loc_0_E88A:				; ...
		INC	Objects_Zpos_L,X
		BNE	loc_0_E892
		INC	Objects_Zpos_H,X

loc_0_E892:				; ...
		LDA	#1

loc_0_E894:				; ...
		STA	Objects_Z_speed,X
		STA	Objects_Z_spd_sub,X
		STA	Objects_Z_sub,X

loc_0_E89D:				; ...
		LDA	#$67

loc_0_E89F:				; ...
		LDY	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BEQ	loc_0_E8AE
		DEC	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	#$E0
		JSR	objects_Z_phys?
		LDA	#$67

loc_0_E8AE:				; ...
		LDY	Level_ID
		CPY	#arctic_caverns
		BNE	loc_0_E8BF
		JSR	levels_physics_bank5
		LDA	#$80
		STA	Objects_gfx_frame,X
		JMP	loc_0_E98D
; ---------------------------------------------------------------------------

loc_0_E8BF:				; ...
		JMP	loc_0_E985
; End of function object_level4_platform_mov_down


; =============== S U B	R O U T	I N E =======================================

; ili brevno volkmire

object_level4_moving_platform:		; ...
		LDA	Objects_gfx_frame,X
		BNE	loc_0_E8D2
		LDA	Objects_Ypos_L,X
		ROR	A
		BCC	loc_0_E8D2
		LDA	#$80
		STA	Objects_dir,X	; / angle

loc_0_E8D2:				; ...
		LDA	#$80		; platform l4 frame
		LDY	Level_ID
		CPY	#volkmire_inferno
		BNE	loc_0_E8EA
		LDA	FrameCounter
		AND	#$F
		BNE	loc_0_E8E8
		LDA	Objects_Ypos_L,X ; brevno shake
		EOR	#2
		STA	Objects_Ypos_L,X

loc_0_E8E8:				; ...
		LDA	#$CA		; brevno frame

loc_0_E8EA:				; ...
		STA	Objects_gfx_frame,X
		LDA	Objects_cnt3,X
		BNE	loc_0_E900
		LDA	objects_some_anim,X ; some obj X speed
		STA	Objects_cnt3,X
		LDA	Objects_dir,X	; / angle
		EOR	#$80
		STA	Objects_dir,X	; / angle

loc_0_E900:				; ...
		DEC	Objects_cnt3,X
		JSR	add_1_to_obj_X
		JMP	loc_0_E98D
; End of function object_level4_moving_platform


; =============== S U B	R O U T	I N E =======================================


add_1_to_obj_X:				; ...
		LDA	#1

add_to_obj_X_with_dir:			; ...
		LDY	Objects_dir,X	; / angle
; End of function add_1_to_obj_X


; =============== S U B	R O U T	I N E =======================================


add_to_obj_X:				; ...
		BEQ	loc_0_E917
		LDY	#$FF		; -1
		EOR	#$FF		; negate
		CLC
		ADC	#1

loc_0_E917:				; ...
		CLC
		ADC	Objects_Xpos_L,X
		STA	Objects_Xpos_L,X
		TYA
		ADC	Objects_Xpos_H,X
		STA	Objects_Xpos_H,X
		RTS
; End of function add_to_obj_X


; =============== S U B	R O U T	I N E =======================================


sub_0_E926:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#3
		CMP	#3
		BNE	locret_0_E94E
		LDA	Objects_Ypos_L,X
		ROR	A

loc_0_E933:				; ...
		LDA	Objects_Xpos_L,X
		BCC	loc_0_E941
		ADC	#1
		STA	Objects_Xpos_L,X
		LDA	#0
		BEQ	loc_0_E948

loc_0_E941:				; ...
		SBC	#1
		STA	Objects_Xpos_L,X
		LDA	#$FF

loc_0_E948:				; ...
		ADC	Objects_Xpos_H,X
		STA	Objects_Xpos_H,X

locret_0_E94E:				; ...
		RTS
; End of function sub_0_E926


; =============== S U B	R O U T	I N E =======================================


object_platform_last_level:		; ...
		JSR	sub_0_E926
		LDA	#$65
		STA	Objects_gfx_frame,X
		LDA	objects_some_anim,X ; some obj X speed
		BEQ	sub_0_E988
		CLC
		ADC	FrameCounter
		CMP	#$28
		BCC	loc_0_E97D
		CMP	#$80
		BCS	loc_0_E96D
		LDA	#0
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------

loc_0_E96D:				; ...
		CMP	#$88
		BCS	sub_0_E988

loc_0_E971:				; ...
		LDA	#$66
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------

loc_0_E977:				; ...
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

loc_0_E97A:				; ...
		JMP	loc_0_EAF3
; ---------------------------------------------------------------------------

loc_0_E97D:				; ...
		CMP	#$25
		BCS	loc_0_E971
		AND	#2
		BNE	sub_0_E988

loc_0_E985:				; ...
		STA	Objects_gfx_frame,X
; End of function object_platform_last_level


; =============== S U B	R O U T	I N E =======================================


sub_0_E988:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_E977

loc_0_E98D:				; ...
		LDA	#0
; End of function sub_0_E988


; =============== S U B	R O U T	I N E =======================================


sub_0_E98F:				; ...
		STA	tmp_var_22
		LDY	#1

loc_0_E993:				; ...
		LDA	Lives_Player1,Y	; кол-во жизней	(сердечек)
		ORA	Objects_death_timer,Y ;	undamage time
		BMI	loc_0_E97A
		LDA	tmp_var_22
		BEQ	loc_0_E9A4
		LDA	Objects_Z_speed,Y
		BPL	loc_0_E97A

loc_0_E9A4:				; ...
		LDA	Objects_Zpos_L,Y
		SEC
		SBC	Objects_Zpos_L,X
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_Zpos_H,Y
		SBC	Objects_Zpos_H,X
		BNE	loc_0_E97A
		LDA	tmp_var_15	;  / Object Counter / various tmp
		CMP	#6
		BCS	loc_0_E97A
		LDA	Level_ID
		CMP	#arctic_caverns
		BNE	loc_0_E9C5
		LDA	#$16
		BNE	loc_0_E9C7

loc_0_E9C5:				; ...
		LDA	#$E

loc_0_E9C7:				; ...
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	loc_0_E97A
		LDA	Objects_Zpos_L,X
		CLC
		ADC	#5
		STA	Objects_Zpos_L,Y
		LDA	Objects_Zpos_H,X
		ADC	#0
		STA	Objects_Zpos_H,Y
		LDA	#0
		STA	players_obj_un3,Y
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#3
		CMP	#3
		BNE	loc_0_EA33
		STY	tmp_var_8d
		LDA	Objects_TypeID,X
		CMP	#$34
		BEQ	loc_0_EA02
		EOR	#$36
		BNE	loc_0_EA33
		LDA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		AND	#$80
		BNE	loc_0_EA18
		JSR	sub_0_E820

loc_0_EA02:				; ...
		JSR	get_object_Y_on_screen
		CMP	#$B0
		BCS	loc_0_EA18
		LDA	camera_lock_cnt
		BNE	loc_0_EA18
		LDX	#$15
		LDY	#2
		JSR	jump_from_bank0
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDY	tmp_var_8d

loc_0_EA18:				; ...
		LDA	Objects_Xpos_L,X
		SEC
		SBC	Objects_Xpos_L,Y
		CLC
		ADC	#$C
		CMP	#$18
		BCS	loc_0_EA33
		LDA	Objects_Ypos_L,X
		ROR	A
		TYA
		TAX
		JSR	loc_0_E933
		LDY	tmp_var_8d
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_0_EA33:				; ...
		LDA	Objects_TypeID,X
		CMP	#$36
		BNE	loc_0_EA77
		LDA	#$80
		STA	players_obj_un3,Y
		LDA	#$30
		STA	players_obj_un2,Y
		LDA	#3
		STA	cnt_unk_pl1,Y
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$EF
		STA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	#$20
		CMP	Objects_X_speed,Y
		BCS	loc_0_EA5B
		STA	Objects_X_speed,Y

loc_0_EA5B:				; ...
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BNE	loc_0_EA63
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации

loc_0_EA63:				; ...
		CMP	#$2A
		BCS	loc_0_EA8E
		LDA	InputTap_P1,Y	; данные первого джойстика на нажатие
		ORA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BNE	loc_0_EA8E
		BEQ	loc_0_EA89

loc_0_EA77:				; ...
		EOR	#$3E
		BNE	loc_0_EA89
		STA	player1_updown_slide_cnt,Y
		LDA	Objects_X_speed,Y
		SEC
		SBC	#2
		BCC	loc_0_EA89
		STA	Objects_X_speed,Y

loc_0_EA89:				; ...
		LDA	#$C
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта

loc_0_EA8E:				; ...
		LDA	Objects_Z_spd_sub,X
		STA	Objects_Z_spd_sub,Y
		LDA	Objects_Z_speed,X
		STA	Objects_Z_speed,Y
		LDA	Objects_Z_sub,X
		STA	Objects_Z_sub,Y
		LDA	Objects_TypeID,X
		CMP	#$36
		BNE	loc_0_EAD2
		LDA	Objects_Z_speed,X
		BMI	loc_0_EAD2
		CMP	#5
		BCC	loc_0_EAD2
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#3
		CMP	#3
		LDA	#$60
		BCC	loc_0_EABD
		LDA	#$C0

loc_0_EABD:				; ...
		STA	Objects_Z_spd_sub,Y
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#3
		CMP	#1
		BNE	loc_0_EACD
		LDA	#7
		BNE	loc_0_EACF

loc_0_EACD:				; ...
		LDA	#5

loc_0_EACF:				; ...
		STA	Objects_Z_speed,Y

loc_0_EAD2:				; ...
		LDA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		ORA	#$10
		STA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		LDA	Objects_TypeID,X
		CMP	#$3E
		BNE	loc_0_EAF3
		STY	tmp_var_8d
		LDA	#1
		LDY	Objects_dir,X	; / angle
		LDX	tmp_var_8d
		CPY	#0
		JSR	add_to_obj_X
		LDY	tmp_var_8d
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_0_EAF3:				; ...
		DEY
		BMI	locret_0_EAF9
		JMP	loc_0_E993
; ---------------------------------------------------------------------------

locret_0_EAF9:				; ...
		RTS
; End of function sub_0_E98F

; ---------------------------------------------------------------------------

loc_0_EAFA:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_rotating_spike:			; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_EAFA
		JSR	loc_0_FAB7
		LDA	Objects_X_shadow,X
		CMP	#$70
		BCC	loc_0_EB1C
		CMP	#$90
		BCS	loc_0_EB1C
		EOR	Objects_TargetID,X
		BPL	loc_0_EB1C
		LDA	#$A7
		LDX	#snd_channel1
		JSR	play_sound	; A is sound id, X - jmp_off (ch ID)

loc_0_EB1C:				; ...
		LDA	Objects_X_shadow,X
		STA	Objects_TargetID,X
		LDA	objects_some_anim,X ; some obj X speed
		AND	#$40
		BEQ	loc_0_EB40
		LDA	#$C0
		JSR	objects_Z_phys?
		JSR	levels_physics_bank5
		LDA	Objects_Z_floor,X
		BNE	loc_0_EB40
		LDA	#5
		STA	Objects_Z_speed,X
		LDA	#$83
		JSR	play_sound_ch2

loc_0_EB40:				; ...
		JSR	obj_hitting_index_A
		LDA	#$6A
		STA	Objects_gfx_frame,X

locret_0_EB48:				; ...
		RTS
; End of function object_rotating_spike


; =============== S U B	R O U T	I N E =======================================


rat_sub:				; ...
		CMP	#$F0
		BCC	locret_0_EB48
		PHA			; save target
		LDA	#0
		STA	Objects_Z_floor,X
		LDA	Level_ID
		CMP	#armageddon
		LDA	#$84
		BCS	loc_0_EB6E
		LDA	Objects_death_timer,X ;	undamage time
		CMP	#1
		LDA	#$B4		; rat falling frame id
		BCC	loc_0_EB6E
		LDA	Camera_Y_pos_H
		CMP	#1
		LDA	#$F7
		BCC	loc_0_EB6E
		LDA	#$F5

loc_0_EB6E:				; ...
		STA	Objects_gfx_frame,X
		JSR	objects_Z?
		LDA	Objects_TargetID,X
		CMP	#$F1
		BCS	loc_0_EBD2
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_EBCD
		LDA	Objects_Y_shad,X
		BPL	loc_0_EBCD
		LDA	#0
		STA	Objects_TargetID,X
		JSR	levels_physics_bank5
		LDA	Objects_Z_floor,X
		BNE	loc_0_EBCD
		LDA	#3
		STA	Objects_Z_speed,X
		JSR	get_free_obj_slot_IDX
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	copy_objects_XYZ
		JSR	create_object_4
		LDA	#$A
		JSR	play_sound_ch4
		LDA	#$24
		JSR	play_sound_ch1_and_ch2
		JSR	set_level_music
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	#5
		STA	Objects_Z_speed
		STA	player2_Z_speed
		LDA	Camera_Y_pos_H
		BEQ	loc_0_EBC9
		CMP	#$34
		BCS	loc_0_EBC9
		LDA	#$40
		STA	players_obj_unk16
		STA	player2_obj_unk16

loc_0_EBC9:				; ...
		PLA
		LDA	#$F1		; change target?
		PHA

loc_0_EBCD:				; ...
		PLA
		STA	Objects_TargetID,X
		RTS
; ---------------------------------------------------------------------------

loc_0_EBD2:				; ...
		LDA	FrameCounter
		AND	#3
		BNE	loc_0_EBDE
		LDA	Camera_X_pos_l	;  / level_position - on h levels
		EOR	#4
		STA	Camera_X_pos_l	;  / level_position - on h levels

loc_0_EBDE:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BPL	loc_0_EBCD
		PLA
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_EC10
		LDA	Level_ID
		CMP	#armageddon
		BNE	loc_0_EC0C
		LDA	#$80
		STA	Objects_Xpos_L,X
		LDA	#0
		STA	Objects_X_speed,X
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		STA	Objects_Z_floor,X
		STA	Camera_X_pos_l	;  / level_position - on h levels
		LDA	#$CF
		STA	objects_some_anim,X ; some obj X speed
		LDA	#$7E
		STA	Objects_TypeID,X
		RTS
; ---------------------------------------------------------------------------

loc_0_EC0C:				; ...
		LDA	#$80
		STA	timer_end_music

loc_0_EC10:				; ...
		JMP	clear_object_vars ; remove object
; End of function rat_sub

; ---------------------------------------------------------------------------

loc_0_EC13:				; ...
		JMP	rat_sub

; =============== S U B	R O U T	I N E =======================================


object_dead_robo_manus_ili_begushaya_krisa: ; ...
		LDA	Objects_TargetID,X
		BEQ	loc_0_EC20
		BMI	loc_0_EC13
		DEC	Objects_TargetID,X

loc_0_EC20:				; ...
		STX	rat_slot_id
		LDA	#0
		STA	Objects_death_timer,X ;	undamage time
		STA	Obj_anims_timer,X ; timer used for gfx frames
		STA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		LDA	Objects_Life,X
		ORA	#$F0
		STA	Objects_Life,X
		LDA	FrameCounter
		AND	#$F
		BNE	loc_0_EC41
		INC	music_speed
		BNE	loc_0_EC41
		DEC	music_speed	; max music speed if $FF

loc_0_EC41:				; ...
		LDA	Objects_dir,X	; / angle
		LSR	A
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	FrameCounter
		AND	#$C0
		CMP	#$C0
		BEQ	loc_0_EC52
		LDA	#$40		; ???

loc_0_EC52:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		CMP	#$F5		; rat X	speed
		BCC	loc_0_EC68
		LDY	Objects_Z_floor,X
		BNE	loc_0_EC68
		JSR	loc_0_FABD
		LDA	#$FF
		STA	Objects_X_speed,X
		BNE	loc_0_EC6E

loc_0_EC68:				; ...
		STA	Objects_X_speed,X
		JSR	obj_moving_by_speed

loc_0_EC6E:				; ...
		LDA	#$C0
		JSR	objects_Z_phys?
		JSR	levels_physics_bank5
		LDA	Objects_Z_floor,X
		BNE	loc_0_EC83
		STA	Objects_Z_spd_sub,X
		LDA	#$FE
		STA	Objects_Z_speed,X

loc_0_EC83:				; ...
		LDA	Objects_X_speed,X
		LSR	A
		JSR	obj_unjk_cnt_add
		LDA	rat_frame_ids,Y
		STA	Objects_gfx_frame,X
		RTS
; End of function object_dead_robo_manus_ili_begushaya_krisa

; ---------------------------------------------------------------------------
rat_frame_ids:	.BYTE $82, $83,	$84, $83 ; ...

; =============== S U B	R O U T	I N E =======================================


object_giblet:				; ...
		LDA	Objects_death_timer,X ;	undamage time
		BNE	loc_0_EC9E
		LDA	#$1E
		STA	camera_lock_cnt

loc_0_EC9E:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	loc_0_ED18
		JSR	obj_moving_by_speed
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_ECB3
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BPL	loc_0_ECBA
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

loc_0_ECB3:				; ...
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#damaged_heavy
		BNE	loc_0_ECC0	; go into ground?

loc_0_ECBA:				; ...
		JSR	sub_0_E1A7
		JMP	loc_0_ECEC
; ---------------------------------------------------------------------------

loc_0_ECC0:				; ...
		LDA	#$FC
		STA	Objects_Z_speed,X
		JSR	objects_Z?
		JSR	levels_physics_bank5
		LSR	Objects_X_speed,X
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		CMP	#$30
		BCS	loc_0_ECD8
		JSR	loc_0_FCE0

loc_0_ECD8:				; ...
		JSR	sub_0_9E59
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BNE	loc_0_ECE8
		LDA	#1
		STA	Objects_Z_speed,X
		JMP	loc_0_ED9F
; ---------------------------------------------------------------------------

loc_0_ECE8:				; ...
		LDA	#$88
		BNE	loc_0_ED14	; jump

loc_0_ECEC:				; ...
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_ED09
		JSR	obj_set_flags_by_dir
		LDA	Objects_X_speed,X
		CMP	#$FF
		BEQ	loc_0_ED05
		LSR	Objects_X_speed,X
		LDA	#$FC
		STA	Objects_Z_speed,X
		BNE	loc_0_ECE8	; jump

loc_0_ED05:				; ...
		LDA	#$87
		BNE	loc_0_ED14	; jump

loc_0_ED09:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		CMP	#$3B
		LDA	#$89
		BCS	loc_0_ED14
		LDA	#$85

loc_0_ED14:				; ...
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------

loc_0_ED18:				; ...
		LDA	Level_ID
		EOR	#volkmire_inferno
		BNE	loc_0_ED23
		LDA	#0		; no life on volkmire
		STA	Objects_Life,X

loc_0_ED23:				; ...
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_ED2F
		JSR	loc_0_E192
		LDA	#$88
		BNE	loc_0_ED14	; jump

loc_0_ED2F:				; ...
		LDA	Objects_gfx_frame,X
		BNE	loc_0_ED37
		JSR	set_target_random

loc_0_ED37:				; ...
		LDA	Objects_AnimID,X ; номер движения для запуска
		BEQ	loc_0_ED49
		LDA	#$FE
		JSR	object_inc_to_Xspeed ; A is speed
		JSR	loc_0_ED9F
		LDA	#3		; every	fouth frame
		JMP	start_read_anim	; with ptr inc by AND with frame cnt
; ---------------------------------------------------------------------------

loc_0_ED49:				; ...
		TXA
		EOR	FrameCounter
		AND	#$F
		ORA	Objects_Z_floor,X
		BNE	loc_0_ED98
		JSR	sub_0_E317
		LDA	tmp_var_1A
		BEQ	loc_0_ED5E
		LDA	#1
		BNE	loc_0_ED8A	; jump

loc_0_ED5E:				; ...
		LDA	#$A
		JSR	obj_compare_Y?
		BNE	loc_0_ED7B
		LDA	#$30
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	loc_0_ED7B
		LDA	tmp_var_1B
		ADC	#$20
		CMP	#$40
		LDA	#$66
		BCS	loc_0_ED78
		LDA	#$68

loc_0_ED78:				; ...
		JSR	write_obj_Anim_ID

loc_0_ED7B:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		BNE	loc_0_ED8A
		LDY	Objects_Zpos_L,X
		BMI	loc_0_ED8A
		LDA	#$40
		STA	objects_some_anim,X ; some obj X speed

loc_0_ED8A:				; ...
		STA	Objects_X_speed,X
		LDA	#1
		STA	Objects_Z_speed,X
		STA	Objects_Z_spd_sub,X
		STA	Objects_Z_floor,X

loc_0_ED98:				; ...
		LDA	#$85
		LDY	Objects_Z_floor,X
		BEQ	loc_0_EDB9

loc_0_ED9F:				; ...
		LDA	#$D0
		JSR	objects_Z_phys?
		JSR	obj_moving_by_speed
		JSR	levels_physics_bank5
		LDA	#$86
		LDY	Objects_X_speed,X
		BNE	loc_0_EDB9
		LDY	Objects_Z_speed,X
		BMI	loc_0_EDB9
		JMP	loc_0_ECE8
; ---------------------------------------------------------------------------

loc_0_EDB9:				; ...
		STA	Objects_gfx_frame,X
		RTS
; End of function object_giblet


; =============== S U B	R O U T	I N E =======================================


object_inferno_race_create:		; ...
		LDA	Objects_cnt3,X	; cleared when init?
		BNE	loc_0_EDC7
		LDA	#$40
		JSR	play_sound_ch4

loc_0_EDC7:				; ...
		LDA	Objects_cnt3,X
		CMP	#8
		BCC	loc_0_EDD5
		LDX	#$F		; inferno_race_start_anim
		LDY	#1		; BANK1:8EF9
		JSR	jump_from_bank0

loc_0_EDD5:				; ...
		LDA	#$1E
		STA	camera_lock_cnt
		LDA	#1		; ?
		INC	Objects_cnt3,X
		BEQ	loc_0_EDE7
		LDA	#1
		STA	inferno_race_create_flg	; 2=created
		JMP	write_anim_fear
; ---------------------------------------------------------------------------

loc_0_EDE7:				; ...
		LDA	#0
		STA	Objects_AnimID	; номер	движения для запуска
		STA	player2_AnimID
		STA	Objects_dir	; / angle
		STA	player2_dir
		LDA	#$A0
		STA	music_speed
		INC	inferno_race_create_flg	; 2=created
		JMP	clear_object_vars ; remove object
; End of function object_inferno_race_create


; =============== S U B	R O U T	I N E =======================================


object_turbo_tunnel_warning_sprite:	; ...
		LDA	FrameCounter
		AND	#1
		BEQ	loc_0_EE09
		DEC	objects_some_anim,X ; some obj X speed
		BEQ	loc_0_EE1B

loc_0_EE09:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		AND	#2
		BEQ	loc_0_EE17
		LDA	#$E8
		JSR	object_X_by_camera
		LDA	#$8A

loc_0_EE17:				; ...
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------

loc_0_EE1B:				; ...
		JMP	clear_object_vars ; remove object
; End of function object_turbo_tunnel_warning_sprite


; =============== S U B	R O U T	I N E =======================================


get_object_Y_on_screen:			; ...
		LDA	Objects_Ypos_L,X
		SEC
		SBC	Objects_Zpos_L,X
		SEC
		SBC	Camera_Y_pos_l	;  / level_position - on v levels
		CMP	#$E8
		RTS
; End of function get_object_Y_on_screen


; =============== S U B	R O U T	I N E =======================================


object_elevator_platform:		; ...
		JSR	get_object_Y_on_screen
		LDY	Level_ID
		CPY	#intruder_excluder
		BEQ	loc_0_EE39
		CMP	#$28
		BCC	loc_0_EE1B
		TXA

loc_0_EE39:				; ...
		CMP	#$E8		; Y on screen
		BCS	loc_0_EE1B
		LDX	#$33
		LDY	#3
		JSR	jump_from_bank0
		JSR	load_PL_1_or_2	; Записать в Y id игрока 0 или 1. (четн/нечет кадр)
		BEQ	loc_0_EE4C
		JSR	sub_0_EE61

loc_0_EE4C:				; ...
		LDA	Level_ID
		CMP	#rat_race
		BNE	locret_0_EEB6
		LDY	rat_slot_id
		BEQ	locret_0_EEB6
		LDA	Objects_Zpos_L,X
		SBC	Objects_Zpos_L,Y
		CMP	#6
		JMP	loc_0_EE6B
; End of function object_elevator_platform


; =============== S U B	R O U T	I N E =======================================


sub_0_EE61:				; ...
		LDA	Objects_Zpos_L,X
		ADC	#5
		SBC	Objects_Zpos_L,Y
		CMP	#$2E

loc_0_EE6B:				; ...
		BCS	locret_0_EEB6
		LDA	Objects_Xpos_L,X
		CLC
		ADC	#$23
		SEC
		SBC	Objects_Xpos_L,Y
		CMP	#$20
		BCS	locret_0_EEB6
		CPY	#2
		BCC	loc_0_EE8A
		LDA	Objects_TargetID,Y
		BMI	locret_0_EEB6
		LDA	#2
		STA	Objects_TargetID,Y
		RTS
; ---------------------------------------------------------------------------

loc_0_EE8A:				; ...
		LDA	#3
		CMP	players_obj_unk16,Y
		BCC	loc_0_EE94
		STA	players_obj_unk16,Y

loc_0_EE94:				; ...
		LDA	Objects_death_timer,Y ;	undamage time
		BNE	locret_0_EEB6
		LDA	Objects_gfx_frame,X
		CMP	#$AC
		BNE	locret_0_EEB6
; End of function sub_0_EE61


; =============== S U B	R O U T	I N E =======================================


damage_shock:				; ...
		LDA	players_shock_timer,Y
		BNE	locret_0_EEB6
		STY	tmp_var_8d
		TYA
		TAX
		JSR	drop_and_remove_stick
		LDY	tmp_var_8d
		LDA	#1
		STA	Objects_Z_speed,Y
		JMP	electro_damage
; ---------------------------------------------------------------------------

locret_0_EEB6:				; ...
		RTS
; End of function damage_shock


; =============== S U B	R O U T	I N E =======================================


sub_0_EEB7:				; ...
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	clear_object_vars ; remove object
		LDA	#$4E
		JSR	get_obj_slot_type_by_ID
		LDA	#0
		STA	Objects_Zpos_H,Y
		RTS
; End of function sub_0_EEB7


; =============== S U B	R O U T	I N E =======================================


object_snake:				; ...
		LDX	#9
		BNE	loc_0_EECD	; jump

object_snake_animation:			; ...
		LDX	#$C

loc_0_EECD:				; ...
		LDY	#2		; BANK2:8000
		JMP	jump_from_bank0
; End of function object_snake


; =============== S U B	R O U T	I N E =======================================


object_snake_hide_head:			; ...
		LDA	Objects_Zpos_H,X
		BEQ	loc_0_EEDB
		LDX	#$F
		BNE	loc_0_EECD	; jump

loc_0_EEDB:				; ...
		JMP	clear_object_vars ; remove object
; End of function object_snake_hide_head


; =============== S U B	R O U T	I N E =======================================


object_snake_pit_hole?:			; ...
		LDA	#$C0
		STA	Objects_gfx_frame,X
; End of function object_snake_pit_hole?


; =============== S U B	R O U T	I N E =======================================


warp_sub:				; ...
		JSR	load_PL_1_or_2	; Записать в Y id игрока 0 или 1. (четн/нечет кадр)
		BEQ	locret_0_EF31
		LDA	player1_endLvL_timer,Y
		ORA	Objects_Linker_ID,Y ; флаг/id какой объект меня	прицепил
		BNE	locret_0_EF31
		LDA	#$10
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	locret_0_EF31
		LDA	#$10
		JSR	object_compare_Z
		BNE	locret_0_EF31
		LDA	#8
		JSR	obj_compare_Y?
		BNE	locret_0_EF31
		STA	Objects_Z_floor,Y
		LDA	Objects_TypeID,X
		CMP	#$22
		BEQ	warp_end
		LDA	Objects_LinkedObj_ID,Y ; флаг/id присоединённого объекта
		BEQ	loc_0_EF24
		LDA	#0
		STA	Objects_Z_floor
		STA	player2_Z_floor
		LDA	#$80
		STA	player1_endLvL_timer
		STA	player2_endLvL_timer

loc_0_EF24:				; ...
		LDA	#$80
		STA	player1_endLvL_timer,Y
		LDA	#6
		JSR	create_scores_obj ; A is score obj index
		JMP	play_sound_56
; ---------------------------------------------------------------------------

locret_0_EF31:				; ...
		RTS
; ---------------------------------------------------------------------------

warp_end:				; ...
		JSR	sounds_stop
		LDA	#$A4
		JSR	play_sound_ch1_and_ch2
		LDA	#$40
		JSR	play_sound_ch4
		JMP	sub_0_E4FB
; End of function warp_sub

; ---------------------------------------------------------------------------

loc_0_EF42:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_sentry_drone:			; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_EF42
		LDY	#$E0
		JSR	loc_0_B978
		JSR	object_robot
		LDA	#1
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	Objects_cnt2,X
		CMP	#$C0
		BNE	loc_0_EF64
		LDA	#$A1
		JSR	play_sound_ch2
		SEC

loc_0_EF64:				; ...
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		BCC	loc_0_EF6F
		LDA	#0
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	FrameCounter

loc_0_EF6F:				; ...
		AND	#2
		LSR	A
		ADC	#$9D
		STA	Objects_gfx_frame,X
		RTS
; End of function object_sentry_drone

; ---------------------------------------------------------------------------

loc_0_EF78:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_slizen:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_EF78
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		BEQ	loc_0_EFA2
		JSR	objects_Z?
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		JSR	loc_0_B075
		LDA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#damaged_heavy
		ORA	Objects_death_timer,Y ;	undamage time
		BEQ	loc_0_EF9D
		LDA	#0
		STA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил

loc_0_EF9D:				; ...
		LDA	#$A1
		JMP	slizen_gfx_frame
; ---------------------------------------------------------------------------

loc_0_EFA2:				; ...
		LDA	Objects_cnt2,X
		BEQ	loc_0_EFE7
		JSR	loc_0_FCE0
		LDA	Objects_cnt3,X
		CMP	#$A
		BNE	loc_0_EFC4
		LDA	#8
		STA	Objects_X_speed,X
		ORA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		DEC	Objects_cnt2,X
		LDA	#$A2
		JMP	slizen_gfx_frame
; ---------------------------------------------------------------------------

loc_0_EFC4:				; ...
		JSR	objects_Z?
		JSR	levels_physics_bank5
		LDA	#$9F
		DEC	Objects_cnt2,X
		BNE	slizen_gfx_frame
		LDA	RandomValue_1
		AND	#$80
		STA	Objects_dir,X	; / angle
		LDA	#$40
		STA	Objects_X_speed,X
		LDA	#4
		STA	Objects_Z_speed,X
		LDA	#$A0
		STA	Objects_Z_spd_sub,X

loc_0_EFE7:				; ...
		JSR	objects_Z?
		JSR	obj_moving_by_speed
		JSR	levels_physics_bank5
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BPL	loc_0_EFFD
		LDA	#$FC
		JSR	object_inc_to_Xspeed ; A is speed
		JMP	loc_0_F014
; ---------------------------------------------------------------------------

loc_0_EFFD:				; ...
		LDA	some_lvl_flag_cnt ; 0-air,1-h_surf,2-right,3-left naklon
		CMP	#1
		BEQ	loc_0_F00C
		CMP	#$A
		BNE	loc_0_F014
		LDY	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BMI	loc_0_F014

loc_0_F00C:				; ...
		STA	Objects_cnt3,X
		LDA	#$10
		STA	Objects_cnt2,X

loc_0_F014:				; ...
		LDA	#$A0

slizen_gfx_frame:			; ...
		STA	Objects_gfx_frame,X
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		BPL	loc_0_F022
		INC	Objects_various_flags,X	; для пушек ID прицепленного объекта
		RTS
; ---------------------------------------------------------------------------

loc_0_F022:				; ...
		JMP	obj_hitting_index_A
; End of function object_slizen


; =============== S U B	R O U T	I N E =======================================


sub_0_F025:				; ...
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		AND	#1
		CLC
		ADC	#$A3

loc_0_F02C:				; ...
		STA	Objects_gfx_frame,X
		INC	objects_some_anim,X ; some obj X speed

loc_0_F032:				; ...
		LDA	Objects_Zpos_L,X
		ROR	A
		ROR	A
		AND	#$80
		STA	Objects_dir,X	; / angle
		JMP	obj_set_flags_by_dir
; End of function sub_0_F025

; ---------------------------------------------------------------------------

loc_0_F03F:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_gas_turret:			; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_F03F
		LDA	#$A5
		JSR	loc_0_F02C
		LDA	objects_some_anim,X ; some obj X speed
		AND	#$7F

loc_0_F051:				; ...
		BNE	locret_0_F07B
		JSR	get_free_obj_slot_IDX
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	copy_objects_XYZ_and_dir
		LDA	#$53
		STA	Objects_TypeID,X
		LDA	#0
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	#$60
		STA	Objects_X_speed,X
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#3
		CMP	#1
		BNE	loc_0_F076
		ASL	Objects_X_speed,X

loc_0_F076:				; ...
		LDA	#$26
		JSR	play_sound_ch4

locret_0_F07B:				; ...
		RTS
; End of function object_gas_turret


; =============== S U B	R O U T	I N E =======================================


object_gas:				; ...
		JSR	obj_set_flags_by_dir
		LDA	Level_ID
		CMP	#revolution
		BNE	loc_0_F0AB
		LDA	Objects_Ypos_L,X
		ROR	A
		BCS	loc_0_F091
		JSR	objects_Z?
		JMP	loc_0_F09D
; ---------------------------------------------------------------------------

loc_0_F091:				; ...
		LDA	#$A0
		LDY	Objects_dir,X	; / angle
		BMI	loc_0_F09A
		LDA	#$F0

loc_0_F09A:				; ...
		JSR	change_obj_coord?_ ; A is speed

loc_0_F09D:				; ...
		INC	Obj_various_cnt,X
		LDA	Obj_various_cnt,X
		CMP	#$30
		BCS	loc_0_F0BE
		LDA	#$C5
		BNE	loc_0_F0C1

loc_0_F0AB:				; ...
		JSR	obj_moving_by_speed
		LDA	#4
		JSR	obj_unjk_cnt_add_
		LDA	Obj_various_cnt,X
		LSR	A
		LSR	A
		TAY
		LDA	byte_0_F0D9,Y
		BNE	loc_0_F0C1

loc_0_F0BE:				; ...
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

loc_0_F0C1:				; ...
		STA	Objects_gfx_frame,X
		CMP	#$A9
		BCC	loc_0_F0D6
		LDA	FrameCounter
		AND	#4
		BEQ	loc_0_F0D6
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		EOR	#$40
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?

loc_0_F0D6:				; ...
		JMP	obj_hitting_index_A
; End of function object_gas

; ---------------------------------------------------------------------------
byte_0_F0D9:	.BYTE $A6, $A6,	$A7, $A7, $A8, $A8, $A9, $A9, $A9, $A9,	$AA, $AA, 0 ; ...
; ---------------------------------------------------------------------------

loc_0_F0E6:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_ventilyator:			; ...
		JSR	sub_0_F025
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_F0E6
		LDA	FrameCounter
		LDY	Level_ID
		CPY	#intruder_excluder
		BEQ	loc_0_F0FC
		LDA	objects_some_anim,X ; some obj X speed

loc_0_F0FC:				; ...
		CMP	#$80
		BCC	loc_0_F10C
		AND	#8
		CMP	#4
		LDA	#$A3
		ADC	#0
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------

loc_0_F10C:				; ...
		LDA	#$F
; End of function object_ventilyator


; =============== S U B	R O U T	I N E =======================================


sub_0_F10E:				; ...
		AND	FrameCounter
		BEQ	loc_0_F115
		JMP	loc_0_F1B8
; ---------------------------------------------------------------------------

loc_0_F115:				; ...
		LDA	#$A3
		JSR	play_sound_ch4
		JSR	get_free_obj_slot_IDX
		BNE	loc_0_F19D
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	copy_objects_XYZ_and_dir
		LDA	Objects_TypeID,Y
		STA	Objects_TargetID,X
		CMP	#$60
		LDA	#$61
		BCS	loc_0_F132
		LDA	#$56

loc_0_F132:				; ...
		STA	Objects_TypeID,X
		LDA	#$F0
		STA	Objects_X_speed,X
		LDA	#$FC
		STA	objects_some_anim,X ; some obj X speed
		LDA	Level_ID
		CMP	#volkmire_inferno
		LDA	RandomValue_1
		AND	#$F
		BCS	loc_0_F14C
		LSR	A
		ADC	#4

loc_0_F14C:				; ...
		ORA	#$D0
		STA	Objects_Ypos_L,X
		LDA	Objects_TypeID,Y
		CMP	#$54
		BEQ	loc_0_F198
		CMP	#$60
		BEQ	loc_0_F198
		CMP	#$5D
		BEQ	loc_0_F198
		BCC	loc_0_F167
		LDA	#$E0
		JSR	objects_add_Z?	; A is Z_speed

loc_0_F167:				; ...
		LDY	#$FF
		LDA	Objects_dir,X	; / angle
		EOR	#$80
		STA	Objects_dir,X	; / angle
		ROL	A
		LDA	#$9C
		BCC	loc_0_F179
		INY
		LDA	#$64

loc_0_F179:				; ...
		ADC	Objects_Xpos_L,X
		STA	Objects_Xpos_L,X
		TYA
		ADC	Objects_Xpos_H,X
		STA	Objects_Xpos_H,X
		LDA	#7
		LDY	Level_ID
		CPY	#revolution
		BEQ	loc_0_F190
		LDA	#4

loc_0_F190:				; ...
		STA	objects_some_anim,X ; some obj X speed
		LDA	#$60
		STA	Objects_X_speed,X

loc_0_F198:				; ...
		LDA	Objects_TypeID,X
		CMP	#$61

loc_0_F19D:				; ...
		BNE	loc_0_F1B6
		LDA	objects_some_anim,X ; some obj X speed
		CMP	#$80
		ROR	objects_some_anim,X ; some obj X speed
		LDA	RandomValue_3
		STA	Objects_Z_spd_sub,X
		LDA	RandomValue_2
		AND	#7
		SEC
		SBC	#3
		STA	Objects_Z_speed,X

loc_0_F1B6:				; ...
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_0_F1B8:				; ...
		LDY	#1

loc_0_F1BA:				; ...
		LDA	Objects_TypeID,Y
		BEQ	loc_0_F228
		LDA	Objects_death_timer,Y ;	undamage time
		BNE	loc_0_F228
		LDA	Level_ID
		CMP	#revolution
		BEQ	loc_0_F1CD
		JMP	loc_0_F260
; ---------------------------------------------------------------------------

loc_0_F1CD:				; ...
		LDA	Objects_TypeID,X
		EOR	#$60
		BEQ	loc_0_F1D7
		JMP	loc_0_F257
; ---------------------------------------------------------------------------

loc_0_F1D7:				; ...
		STA	tmp_var_16
		LDA	Objects_cnt2,X
		CLC
		ADC	#$50
		BCC	loc_0_F1E3
		LDA	#$FF

loc_0_F1E3:				; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		ASL	tmp_var_15	;  / Object Counter / various tmp
		ROL	tmp_var_16
		ASL	tmp_var_15	;  / Object Counter / various tmp
		ROL	tmp_var_16
		ASL	tmp_var_15	;  / Object Counter / various tmp
		ROL	tmp_var_16
		LDA	Objects_Linker_ID,Y ; флаг/id какой объект меня	прицепил
		BPL	moved_by_wind
		CMP	#$83
		BCC	moved_by_wind
		LDA	Objects_Xpos_L,X
		AND	#$80
		EOR	#$80
		STA	Objects_dir,Y	; / angle
		LSR	A
		ORA	#8
		STA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	tmp_var_16
		AND	RandomValue_1
		LSR	A
		LSR	A
		EOR	Objects_Y_shad,Y
		STA	Objects_Y_shad,Y
		LDA	Objects_cnt2,X
		CMP	#$28
		BCC	loc_0_F225
		ADC	#$30
		CMP	#$A0
		LDA	#$5F
		ADC	#0

loc_0_F225:				; ...
		STA	Obj_various_cnt,Y

loc_0_F228:				; ...
		JMP	loc_0_F312
; ---------------------------------------------------------------------------

moved_by_wind:				; ...
		LDA	#$13
		STA	player1_obj_wanted_frame,Y
		LDA	Objects_cnt2,X
		CMP	#$60
		BCC	loc_0_F250
		LDA	Objects_dir,X	; / angle
		STA	Objects_dir,Y	; / angle
		TYA
		TAX
		JSR	sub_0_F5CA
		LDA	#$FF
		STA	Objects_X_speed,X
		LDA	#6
		STA	Objects_Z_speed,X
		TXA
		TAY
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_0_F250:				; ...
		CLC
		JMP	loc_0_F2DA
; ---------------------------------------------------------------------------

loc_0_F254:				; ...
		JMP	loc_0_F312
; ---------------------------------------------------------------------------

loc_0_F257:				; ...
		LDA	#$68
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	loc_0_F254
		BEQ	loc_0_F267

loc_0_F260:				; ...
		LDA	#$18
		JSR	object_compare_Z
		BNE	loc_0_F254

loc_0_F267:				; ...
		LDA	Objects_Xpos_L,Y
		SEC
		SBC	Objects_Xpos_L,X
		STA	tmp_var_15	;  / Object Counter / various tmp
		EOR	Objects_dir,X	; / angle
		BMI	loc_0_F254
		LDA	#0
		STA	tmp_var_16
		LDA	tmp_var_15	;  / Object Counter / various tmp
		BPL	loc_0_F284
		SEC
		SBC	#1
		EOR	#$FF
		STA	tmp_var_15	;  / Object Counter / various tmp

loc_0_F284:				; ...
		LSR	A
		ADC	tmp_var_15	;  / Object Counter / various tmp
		STA	tmp_var_15	;  / Object Counter / various tmp
		STA	tmp_var_17
		CMP	#$C
		BCS	loc_0_F2A1
		LDA	Level_ID
		CMP	#revolution
		BEQ	loc_0_F2A1
		LDA	Objects_TypeID,X
		CMP	#$54
		BEQ	loc_0_F2A1
		JSR	sub_0_F319
		LDY	tmp_var_21

loc_0_F2A1:				; ...
		LDA	#$C0
		SEC
		SBC	tmp_var_15	;  / Object Counter / various tmp
		ASL	A
		ROL	tmp_var_16
		ASL	A
		ROL	tmp_var_16
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_TypeID,X
		CMP	#$58
		BCC	loc_0_F2D8
		STY	tmp_var_18
		STX	tmp_var_21
		LDX	tmp_var_18
		LDY	#2
		LDA	tmp_var_17
		LSR	A
		JSR	loc_0_8A99
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDY	tmp_var_18
		BCC	loc_0_F312
		LDA	Objects_TypeID,X
		CMP	#$5E
		BCC	loc_0_F2DA
		LDA	tmp_var_17
		CMP	#6
		BCC	sub_0_F319
		BCS	loc_0_F2DA

loc_0_F2D8:				; ...
		CMP	#$55

loc_0_F2DA:				; ...
		ROR	A
		EOR	Objects_dir,X	; / angle
		BMI	loc_0_F2F9
		LDA	tmp_var_15	;  / Object Counter / various tmp
		CLC
		ADC	Objects_X_sub,Y
		STA	Objects_X_sub,Y
		LDA	tmp_var_16
		ADC	Objects_Xpos_L,Y
		STA	Objects_Xpos_L,Y
		LDA	Objects_Xpos_H,Y
		ADC	#0
		JMP	loc_0_F30F
; ---------------------------------------------------------------------------

loc_0_F2F9:				; ...
		LDA	Objects_X_sub,Y
		SEC
		SBC	tmp_var_15	;  / Object Counter / various tmp
		STA	Objects_X_sub,Y
		LDA	Objects_Xpos_L,Y
		SBC	tmp_var_16
		STA	Objects_Xpos_L,Y
		LDA	Objects_Xpos_H,Y
		SBC	#0

loc_0_F30F:				; ...
		STA	Objects_Xpos_H,Y

loc_0_F312:				; ...
		DEY
		BMI	locret_0_F318
		JMP	loc_0_F1BA
; ---------------------------------------------------------------------------

locret_0_F318:				; ...
		RTS
; End of function sub_0_F10E


; =============== S U B	R O U T	I N E =======================================


sub_0_F319:				; ...
		LDA	#$20
		STA	some_sound_flag	; by tables
		TXA
		STA	players_obj_unk14,Y
		LDA	#$5C
		STA	Objects_gfx_frame,Y
		STA	player1_obj_wanted_frame,Y
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		ORA	#$80
		STA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	Objects_Linker_ID,Y ; флаг/id какой объект меня	прицепил
		BPL	loc_0_F343
		STY	tmp_var_15	;  / Object Counter / various tmp
		AND	#$1F
		TAY
		DEY
		LDA	#0
		STA	Objects_LinkedObj_ID,Y ; флаг/id присоединённого объекта
		LDY	tmp_var_15	;  / Object Counter / various tmp

loc_0_F343:				; ...
		TYA
		TAX
		LDA	#$28
		JSR	damage_from_tbl_heavy ;	A is dmg table ID*5
		LDA	#$81
		STA	Objects_death_timer,Y ;	undamage time
		RTS
; End of function sub_0_F319


; =============== S U B	R O U T	I N E =======================================


object_veter2?:				; ...
		LDA	#$C5
		BNE	loc_0_F356

object_veter:				; ...
		LDA	#$AB

loc_0_F356:				; ...
		STA	Objects_gfx_frame,X
		LDA	Objects_Xpos_L,X
		STA	tmp_var_8d
		JSR	obj_moving_by_speed
		LDA	Objects_AnimID,X ; номер движения для запуска
		BEQ	loc_0_F397
		LDA	Objects_dir,X	; / angle
		PHA
		LDA	Objects_X_speed,X
		PHA
		LDA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		STA	Objects_dir,X	; / angle
		LDA	Objects_TypeID,X
		CMP	#$61
		LDA	#$FF
		BCS	loc_0_F37F
		LDA	#$C0

loc_0_F37F:				; ...
		STA	Objects_X_speed,X
		JSR	obj_moving_by_speed
		LDA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		CLC
		ADC	Objects_AnimID,X ; номер движения для запуска
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		PLA
		STA	Objects_X_speed,X
		PLA
		STA	Objects_dir,X	; / angle

loc_0_F397:				; ...
		TXA
		ADC	RandomValue_1
		ADC	Objects_Xpos_L,X
		LDY	Objects_TypeID,X
		CPY	#$61
		BNE	loc_0_F3A6
		AND	#$1F

loc_0_F3A6:				; ...
		AND	#$3F
		BNE	loc_0_F3B6
		LDA	RandomValue_2
		ROL	A
		LDA	#$10
		BCC	loc_0_F3B3
		LDA	#$F0

loc_0_F3B3:				; ...
		STA	Objects_AnimID,X ; номер движения для запуска

loc_0_F3B6:				; ...
		LDA	Level_ID
		CMP	#revolution
		BNE	loc_0_F3F2
		LDA	Objects_TypeID,X
		CMP	#$61
		BEQ	loc_0_F3EF
		LDA	#$BE
		STA	Objects_gfx_frame,X
		LDA	#0
		STA	Objects_Z_spd_sub,X
		LDA	Objects_Xpos_L,X
		SEC
		SBC	tmp_var_8d
		CMP	#$80
		BCC	loc_0_F3DB
		SBC	#1
		EOR	#$FF

loc_0_F3DB:				; ...
		LDY	Objects_TargetID,X
		CPY	#$5E
		BEQ	loc_0_F3E6
		SBC	#0
		EOR	#$FF

loc_0_F3E6:				; ...
		CMP	#$80
		ROR	A
		STA	Objects_Z_speed,X
		ROR	Objects_Z_spd_sub,X

loc_0_F3EF:				; ...
		JSR	obj_add_Z_by_Zspd?

loc_0_F3F2:				; ...
		LDA	Objects_X_speed,X
		CLC
		ADC	objects_some_anim,X ; some obj X speed
		STA	Objects_X_speed,X
		BEQ	loc_0_F402
		CMP	#$60
		BCS	locret_0_F405

loc_0_F402:				; ...
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

locret_0_F405:				; ...
		RTS
; End of function object_veter2?


; =============== S U B	R O U T	I N E =======================================


object_ball_laucnh_hole:		; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_F402
		LDA	Objects_cnt2,X
		BEQ	loc_0_F419
		DEC	Objects_cnt2,X
		LDA	#$B5
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------

loc_0_F419:				; ...
		JSR	get_free_obj_slot_IDX
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	Objects_Life,Y
		AND	#$80
		JSR	set_obj_dir_and_copy_obj_XYZ
		LDA	#$60
		STA	Objects_cnt2,Y
		LDA	#$57
		STA	Objects_TypeID,X
		LDA	objects_some_anim,Y ; some obj X speed
		STA	objects_some_anim,X ; some obj X speed
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#3
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		RTS
; End of function object_ball_laucnh_hole

; ---------------------------------------------------------------------------

loc_0_F43F:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_ball:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_F43F
		LDA	objects_some_anim,X ; some obj X speed
		STA	Objects_X_speed,X
		LDA	#$81
		JSR	objects_Z_phys?
		JSR	obj_moving_by_speed
		JSR	levels_physics_bank5
		JSR	obj_set_flags_by_dir
		LDA	Obj_Z_floor_tmp
		BEQ	loc_0_F46B
		LDA	Objects_Z_floor,X
		BNE	loc_0_F46B
		INC	Objects_cnt2,X
		LDA	#$AF
		BNE	loc_0_F48A	; jump

loc_0_F46B:				; ...
		JSR	obj_hitting_index_A
		LDY	Objects_cnt2,X
		CPY	#4
		BCS	loc_0_F47F
		LDA	Level_ID
		CMP	#rat_race
		BEQ	loc_0_F487
		CPY	#3
		BCC	loc_0_F487

loc_0_F47F:				; ...
		LDA	#0
		STA	objects_some_anim,X ; some obj X speed
		INC	Objects_cnt2,X

loc_0_F487:				; ...
		LDA	ball_frames_id,Y

loc_0_F48A:				; ...
		STA	Objects_gfx_frame,X
		BNE	locret_0_F492
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

locret_0_F492:				; ...
		RTS
; End of function object_ball

; ---------------------------------------------------------------------------
ball_frames_id:	.BYTE  $AE, $AE, $AE, $AE, $AF,	$AF, $AF, $AF, $AF, $B0, $B0, $B0 ; ...
		.BYTE  $B0, $B0, $B1, $B1, $B1,	$B1, $B1,   0,	 0, $4C, $80, $D0

; =============== S U B	R O U T	I N E =======================================


sub_0_F4AB:				; ...
		LDA	Objects_cnt2,X

loc_0_F4AE:				; ...
		CLC
		ADC	Objects_dir,X	; / angle
		STA	Objects_dir,X	; / angle
; End of function sub_0_F4AB


; =============== S U B	R O U T	I N E =======================================


sub_0_F4B5:				; ...
		JSR	obj_moving_by_speed
		LDA	#$D8

loc_0_F4BA:				; ...
		SEC
		SBC	Objects_Ypos_L,X
		CLC
		STA	Objects_Z_speed,X
		JSR	objects_add_Z?	; A is Z_speed
		LDA	#$D8
		STA	Objects_Ypos_L,X
		RTS
; End of function sub_0_F4B5


; =============== S U B	R O U T	I N E =======================================


obj_ratbomb_sub?:			; ...
		LDA	Objects_X_speed,X
		BPL	loc_0_F4DB
		JSR	obj_moving_by_speed
		JSR	objects_Z?
		LDA	global_var_cnt?
		BMI	loc_0_F53D
		RTS
; ---------------------------------------------------------------------------

loc_0_F4DB:				; ...
		LDA	#0
		STA	Obj_anims_timer,X ; timer used for gfx frames
		STA	Objects_death_timer,X ;	undamage time

object_ratrace_bomb:			; ...
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		AND	#3
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BNE	obj_ratbomb_sub?
		LDA	global_var_cnt?
		BMI	loc_0_F4FF
		LDA	Objects_gfx_frame,X
		BEQ	loc_0_F4FF
		LDA	#$2C
		LDX	#snd_channel1
		JSR	play_sound	; A is sound id, X - jmp_off (ch ID)

loc_0_F4FF:				; ...
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		ORA	#$40
		STA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		LDA	#1
		STA	Objects_Life,X
		LDA	#$B3
		STA	Objects_gfx_frame,X
		LDA	Objects_TargetID,X
		BNE	loc_0_F54B
		LDY	rat_slot_id
		BEQ	locret_0_F52D
		LDA	Objects_Xpos_L,X
		SBC	Objects_Xpos_L,Y
		ADC	#$10
		CMP	#$20
		BCS	locret_0_F52D
		LDA	#$10
		JSR	object_compare_Z
		BEQ	loc_0_F552

locret_0_F52D:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_F52E:				; ...
		LDA	#4

loc_0_F530:				; ...
		STA	Objects_Z_speed,Y
		LDA	#$F0
		STA	Objects_TargetID,Y
		LDA	#$12
		JMP	play_sound_ch1_and_ch2
; ---------------------------------------------------------------------------

loc_0_F53D:				; ...
		LDA	#$FC
		STA	cnt_unk_pl1
		STA	cnt_unk_pl2
		LDA	#$46
		JSR	get_obj_slot_type_by_ID
		JSR	loc_0_F52E

loc_0_F54B:				; ...
		LDA	#0
		STA	rat_slot_id
		JMP	create_object_4
; ---------------------------------------------------------------------------

loc_0_F552:				; ...
		LDA	#$C0
		STA	Objects_TargetID,X
		LDX	#0
		JSR	sub_0_F5CA
		INX
		JSR	sub_0_F5CA
; End of function obj_ratbomb_sub?


; =============== S U B	R O U T	I N E =======================================

; object #$5B

create_obj_screen_light:		; ...
		LDA	#$5B
		JSR	get_obj_slot_type_by_ID
		BEQ	locret_0_F5DC
		JSR	get_free_obj_slot_IDX
		LDA	#$5B
		STA	Objects_TypeID,X
		LDA	#0
		STA	Objects_cnt2,X
		STA	Objects_Life,X
		LDY	#$1F

fill_pal_with_white_color:		; ...
		LDA	palette_ram,Y
		STA	level_ram2+$10,Y
		LDA	#$30
		STA	palette_ram,Y
		DEY
		BPL	fill_pal_with_white_color
		LDA	Level_ID
		CMP	#ragnarok_canyon
		BEQ	locret_0_F5DC
		LDY	#0

create_on_screen_explosions:		; ...
		JSR	get_free_obj_slot_IDX
		BNE	play_sound_A
		JSR	create_object_4
		LDA	#4
		STA	Objects_cnt3,X
		LDA	#$3F
		STA	Objects_Ypos_H,X
		LDA	#$D8
		STA	Objects_Ypos_L,X
		LDA	lvl_explode_posXl,Y
		STA	Objects_Xpos_L,X
		LDA	lvl_explode_posZl,Y
		SBC	Camera_Y_pos_l	;  / level_position - on v levels
		STA	Objects_Zpos_L,X
		LDA	lvl_explode_posZh,Y
		SBC	Camera_Y_pos_H
		STA	Objects_Zpos_H,X
		INY
		INY
		INY
		CPY	#$1B		; /3 = 9
		BNE	create_on_screen_explosions

play_sound_A:				; ...
		LDA	#$A
		LDX	#snd_channel4
		JMP	jump_to_play_sound ; A is sound	id, X -	JmpOff (channel	id)
; End of function create_obj_screen_light


; =============== S U B	R O U T	I N E =======================================


sub_0_F5CA:				; ...
		JSR	loc_0_8F1B
		LDA	#$D4
		STA	Obj_anims_timer,X ; timer used for gfx frames
		LDA	#$FF
		STA	players_obj_unk16,X
		LDA	#3
		STA	Objects_Z_speed,X

locret_0_F5DC:				; ...
		RTS
; End of function sub_0_F5CA

; ---------------------------------------------------------------------------
lvl_explode_posXl:.BYTE	$30		; ...
lvl_explode_posZh:.BYTE	$3F		; ...
lvl_explode_posZl:.BYTE	$C0		; ...
		.BYTE  $E0, $3F, $D0
		.BYTE  $80, $3F, $B0
		.BYTE  $F0, $3F, $A8
		.BYTE  $50, $3F, $80
		.BYTE  $B0, $3F, $60
		.BYTE  $1F, $3F, $40
		.BYTE  $A0, $3F, $10
		.BYTE  $FF, $3F, $20

; =============== S U B	R O U T	I N E =======================================


call_game_end_2:			; ...
		LDX	#$FF
		TXS
		JSR	sub_0_D859
		LDX	#$63
		LDY	#6
		JSR	jump_from_bank0
		JMP	loc_0_D863
; End of function call_game_end_2

; ---------------------------------------------------------------------------

loc_0_F608:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_retro_blaster_shoot:		; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_F608
		JSR	obj_moving_by_speed
		LDA	FrameCounter
		AND	#3
		BEQ	loc_0_F621
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		EOR	#$40
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?

loc_0_F621:				; ...
		LDA	#$5B
		STA	Objects_gfx_frame,X
		LDY	#1
		STY	hit_Z_table_index ; index for Z	collision tbl
		LDA	#3
		CLC
		JSR	check_hitting_
		BMI	locret_0_F638
		JSR	electro_damage
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

locret_0_F638:				; ...
		RTS
; End of function object_retro_blaster_shoot


; =============== S U B	R O U T	I N E =======================================


sub_0_F639:				; ...
		LDA	Objects_Z_speed,X
		BPL	loc_0_F646
		CMP	#$FC
		BCS	locret_0_F650
		LDA	#$FC
		BNE	loc_0_F64D

loc_0_F646:				; ...
		LDA	#2
		CMP	Objects_Z_speed,X
		BCS	locret_0_F650

loc_0_F64D:				; ...
		STA	Objects_Z_speed,X

locret_0_F650:				; ...
		RTS
; End of function sub_0_F639


; =============== S U B	R O U T	I N E =======================================


object_snowman:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	loc_0_F6CB
		LDA	Objects_Ypos_H,X
		CMP	#$1F
		BNE	loc_0_F663
		DEC	Objects_Ypos_H,X
		DEC	Objects_Zpos_H,X

loc_0_F663:				; ...
		JSR	sub_0_F639
		JSR	loc_0_BD78
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_F687
		LDA	Objects_Z_floor,X
		BNE	loc_0_F69B
		STA	Objects_death_timer,X ;	undamage time
		LDA	#$DE
		STA	Objects_Ypos_L,X
		LDA	#$3B
		STA	Objects_TypeID,X
		INC	Objects_Ypos_H,X
		INC	Objects_Zpos_H,X
		RTS
; ---------------------------------------------------------------------------

loc_0_F687:				; ...
		LDA	Objects_Life,X
		AND	#$F0
		STA	Objects_Life,X
		BNE	loc_0_F69B
		LDA	#$40
		STA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		LDA	#$E0
		STA	Objects_death_timer,X ;	undamage time

loc_0_F69B:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		CMP	#8
		BNE	loc_0_F6B5
		LDA	#1
		STA	Objects_cnt2,X
		LDA	Obj_various_cnt,X
		STA	objects_some_anim,X ; some obj X speed
		LDA	#$5E
		JSR	write_obj_Anim_ID
		JMP	read_obj_anim	; without ptr inc
; ---------------------------------------------------------------------------

loc_0_F6B5:				; ...
		CMP	#$2C
		BCS	loc_0_F6C5
		AND	#3
		BNE	loc_0_F6C5
		LDA	Objects_Xpos_L,X
		EOR	#2
		STA	Objects_Xpos_L,X

loc_0_F6C5:				; ...
		LDA	#$6B
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------

loc_0_F6CB:				; ...
		LDA	Objects_Ypos_H,X
		CMP	#$1E
		BNE	loc_0_F6D8
		INC	Objects_Ypos_H,X
		INC	Objects_Zpos_H,X

loc_0_F6D8:				; ...
		JSR	obj_swap_2_dirs
		JSR	objects_Z?
		JSR	levels_physics_bank5
		LDA	Objects_cnt2,X
		BNE	loc_0_F6FA
		LDA	objects_some_anim,X ; some obj X speed
		STA	Obj_various_cnt,X
		LDA	Objects_Ypos_L,X
		CMP	#$D8
		LDA	#$10
		BCC	loc_0_F6F7
		LDA	#$80

loc_0_F6F7:				; ...
		STA	Objects_cnt2,X

loc_0_F6FA:				; ...
		LDA	Objects_AnimID,X ; номер движения для запуска
		BNE	loc_0_F72E
		DEC	Objects_cnt2,X
		BNE	loc_0_F733
		LDY	objects_some_anim,X ; some obj X speed

loc_0_F707:				; ...
		LDA	byte_0_F772,Y
		STA	tmp_var_22
		LDA	byte_0_F75B,Y
		STA	Objects_cnt2,X
		BNE	loc_0_F71B
		LDA	byte_0_F75C,Y
		TAY
		JMP	loc_0_F707
; ---------------------------------------------------------------------------

loc_0_F71B:				; ...
		INY
		TYA
		STA	objects_some_anim,X ; some obj X speed
		JSR	check_collision_Z_index_2
		BMI	loc_0_F729
		LDA	#$5C
		BNE	loc_0_F72B	; jump

loc_0_F729:				; ...
		LDA	tmp_var_22

loc_0_F72B:				; ...
		JSR	write_obj_Anim_ID

loc_0_F72E:				; ...
		LDA	#3		; every	fouth frame
		JMP	start_read_anim	; with ptr inc by AND with frame cnt
; ---------------------------------------------------------------------------

loc_0_F733:				; ...
		LDA	#$64
		STA	Objects_gfx_frame,X
		RTS
; End of function object_snowman


; =============== S U B	R O U T	I N E =======================================


check_collision_Z_index_2:		; ...
		LDA	#2

check_collision_Z_index:		; ...
		STA	hit_Z_table_index ; A= Z_index
		LDY	#1
		LDA	#3
		CLC
		JMP	check_hitting_
; End of function check_collision_Z_index_2


; =============== S U B	R O U T	I N E =======================================


obj_swap_2_dirs:			; ...
		LDA	Objects_Ypos_L,X
		AND	#1
		BEQ	locret_0_F75A
		LDA	#$40
		ORA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ASL	A
		AND	#$80
		STA	Objects_dir,X	; / angle

locret_0_F75A:				; ...
		RTS
; End of function obj_swap_2_dirs

; ---------------------------------------------------------------------------
byte_0_F75B:	.BYTE 1			; ...
byte_0_F75C:	.BYTE 8, $48, 0, 0, $60, 0, 5, $28, 1, $48, 0, 8, $40, $40, 0, $D, 1, 1, $30, $30, 0, $11 ; ...
byte_0_F772:	.BYTE $58, $58,	$60, 0,	0, $62,	0, 0, $60, $60,	$60, 0,	0, $58,	$60, 0,	0, $58,	$58, $58, $60, 0, 0 ; ...

; =============== S U B	R O U T	I N E =======================================


obj_upd_some_flags:			; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$3F
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		JMP	obj_set_flags_by_dir__
; End of function obj_upd_some_flags


; =============== S U B	R O U T	I N E =======================================


object_ice_cube:			; ...
		JSR	sub_0_F79F
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		BEQ	locret_0_F75A
		JMP	levels_physics_bank5
; End of function object_ice_cube


; =============== S U B	R O U T	I N E =======================================


sub_0_F79F:				; ...
		LDA	Objects_Xpos_H,X
		BNE	loc_0_F7B3
		LDA	#$18
		CMP	Objects_Xpos_L,X
		BCC	loc_0_F7B3
		STA	Objects_Xpos_L,X
		LDA	#0
		STA	Objects_dir,X	; / angle

loc_0_F7B3:				; ...
		LDA	Objects_Zpos_H,X
		CMP	#$20
		BCC	loc_0_F7C4
		LDA	#0
		STA	Objects_X_speed,X
		LDA	#$FE
		STA	Objects_Z_speed,X

loc_0_F7C4:				; ...
		LDA	Objects_Ypos_L,X
		CMP	#$D7
		BNE	loc_0_F7F2
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_F7E7
		DEC	Objects_Anim_Ptr,X ; оффсет чтения анимации
		BEQ	loc_0_F7E2
		LDA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		CMP	#$20
		BCS	loc_0_F7F2
		JSR	loc_0_FCE0
		JMP	loc_0_F7F2
; ---------------------------------------------------------------------------

loc_0_F7E2:				; ...
		LDA	#3
		STA	Objects_Z_speed,X

loc_0_F7E7:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		CMP	Objects_X_speed,X
		BCC	loc_0_F7F2
		STA	Objects_X_speed,X

loc_0_F7F2:				; ...
		LDA	#0
		STA	Objects_death_timer,X ;	undamage time
		LSR	Obj_anims_timer,X ; timer used for gfx frames
		LDA	#$40
		ORA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		STA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		LDA	Objects_X_speed,X
		ORA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		ORA	Objects_Z_floor,X
		BNE	loc_0_F818
		LDA	#$B0
		JSR	objects_Z_phys?
		JSR	levels_physics_bank5

loc_0_F815:				; ...
		JMP	loc_0_F9BC
; ---------------------------------------------------------------------------

loc_0_F818:				; ...
		LDA	#$C0
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		LDA	Objects_Ypos_L,X
		PHA
		JSR	loc_0_AF70
		PLA
		STA	Objects_Ypos_L,X
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		ORA	Obj_anims_timer,X ; timer used for gfx frames
		BNE	loc_0_F815
		JSR	obj_upd_some_flags
; End of function sub_0_F79F


; =============== S U B	R O U T	I N E =======================================


obj_hitting_index_A:			; ...
		LDA	#$A
		STA	hit_Z_table_index ; index for Z	collision tbl
		LDA	Objects_TypeID,X
		CMP	#$38
		BEQ	loc_0_F8AC
		CMP	#$45
		BEQ	loc_0_F8AC
		LDY	#1
		LDA	#$40
		CLC
		JSR	check_hitting_
		JMP	loc_0_F8B1
; ---------------------------------------------------------------------------

loc_0_F84D:				; ...
		LDA	Objects_dir,X	; / angle
		LSR	A
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		TXA
		STA	players_gas_slot?,Y
		TYA
		TAX
		LDA	#$28
		JSR	damage_from_tbl_heavy ;	A is dmg table ID*5
		LDX	tmp_var_21
		LDA	#0
		STA	Objects_Z_speed,X

locret_0_F866:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_F867:				; ...
		JSR	damage_shock
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

slizen_link:				; ...
		LDA	Obj_anims_timer,Y ; timer used for gfx frames
		CMP	#4		; time to update damage
		BCS	locret_0_F866
		LDA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#damaged_heavy
		ORA	Objects_death_timer,Y ;	undamage time
		BNE	locret_0_F866
		STA	Objects_cnt2,X
		LDA	#4
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	#$FE
		STA	Objects_Z_speed,X
		TXA
		STA	players_slizen_id,Y
		CLC
		ADC	#$81
		STA	Objects_LinkedObj_ID,Y ; флаг/id присоединённого объекта
		LDA	#0
		STA	tmp_var_15	;  / Object Counter / various tmp
		TYA
		ADC	#$81
		STA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		TYA
		TAX
		JMP	damage_from_table
; ---------------------------------------------------------------------------

loc_0_F8A6:				; ...
		JMP	loc_0_F96A
; ---------------------------------------------------------------------------

loc_0_F8A9:				; ...
		JMP	loc_0_F9BC
; ---------------------------------------------------------------------------

loc_0_F8AC:				; ...
		LDA	#$40
		JSR	check_hitting	; A - hit flags

loc_0_F8B1:				; ...
		BMI	loc_0_F8A9
		CPY	#2
		BCS	loc_0_F8A6
		LDA	Objects_TypeID,X
		CMP	#$53
		BEQ	loc_0_F84D
		CMP	#$58
		BEQ	loc_0_F867
		CMP	#$51
		BEQ	slizen_link
		CMP	#$62
		BEQ	loc_0_F8E6
		CMP	#$3D
		BEQ	loc_0_F91F
		CMP	#$40
		BEQ	loc_0_F91F
		CMP	#$45
		BEQ	loc_0_F91F
		CMP	#$57
		BEQ	loc_0_F91F
		CMP	#$37
		BNE	loc_0_F8E2
		STA	tmp_var_DF
		BEQ	loc_0_F928

loc_0_F8E2:				; ...
		CMP	#$50
		BNE	loc_0_F8F1

loc_0_F8E6:				; ...
		LDA	Objects_AnimID,Y ; номер движения для запуска
		BNE	locret_0_F8F0
		STA	tmp_var_DF
		JMP	loc_0_F928
; ---------------------------------------------------------------------------

locret_0_F8F0:				; ...
		RTS
; ---------------------------------------------------------------------------

loc_0_F8F1:				; ...
		LDA	Objects_AnimID,Y ; номер движения для запуска
		BEQ	loc_0_F921
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		ASL	A
		EOR	Objects_dir,X	; / angle
		BPL	loc_0_F921
		LDA	Objects_dir,X	; / angle
		EOR	#$80
		STA	Objects_dir,X	; / angle
		LDA	#$80
		STA	Obj_anims_timer,X ; timer used for gfx frames
		LDA	#0
		STA	Objects_X_speed,X
		STA	Objects_X_speed,Y
		LDA	#3
		STA	Objects_Z_speed,X
		LDA	#4
		STA	some_sound_flag	; by tables
		BNE	loc_0_F967	; jump

loc_0_F91F:				; ...
		STA	tmp_var_DF

loc_0_F921:				; ...
		LDA	Objects_X_speed,X
		CMP	#$40
		BCC	loc_0_F967

loc_0_F928:				; ...
		LDA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$40
		BNE	loc_0_F967
		LDA	Obj_anims_timer,Y ; timer used for gfx frames
		CMP	#$C0
		BCS	loc_0_F967
		LDA	tmp_var_DF
		ADC	#4
		BPL	loc_0_F948
		LDA	#0
		STA	Objects_X_speed,X
		LDA	#2
		STA	Objects_Z_speed,Y
		BNE	loc_0_F9BC	; jump

loc_0_F948:				; ...
		TYA
		TAX
		LDA	#$4B
		JSR	damage_from_tbl_heavy ;	A is dmg table ID*5
		LDA	#$10
		STA	some_sound_flag	; by tables
		LDA	Objects_TypeID,X
		EOR	#$62
		BNE	loc_0_F967
		STA	Objects_Z_speed,X
		STA	objects_some_anim,X ; some obj X speed
		STA	Objects_cnt2,X
		LDA	#$34
		STA	some_sound_flag	; by tables

loc_0_F967:				; ...
		JMP	loc_0_F9BC
; ---------------------------------------------------------------------------

loc_0_F96A:				; ...
		LDA	tmp_var_8F
		AND	#$80
		STA	Objects_dir,X	; / angle
		JSR	obj_upd_some_flags
		LDA	Objects_TypeID,Y
		CMP	#$3C
		BNE	loc_0_F9A9
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BNE	loc_0_F9BC
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ORA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_F9BC
		LDA	#$80
		STA	Obj_anims_timer,X ; timer used for gfx frames
		LDA	objects_some_anim,X ; some obj X speed
		CMP	#$C1
		BNE	loc_0_F99D
		LDA	Objects_X_speed,X
		ADC	#$10
		BCS	loc_0_F948
		BCC	loc_0_F9A4

loc_0_F99D:				; ...
		LDA	#2
		STA	Objects_Z_speed,X
		LDA	#$70

loc_0_F9A4:				; ...
		STA	Objects_X_speed,X
		BNE	loc_0_F948

loc_0_F9A9:				; ...
		CMP	#$3F
		BNE	loc_0_F9BC
		LDA	#3
		STA	Objects_Z_speed,Y
		STA	Objects_Z_spd_sub,Y
		LDA	#$82
		LDX	#snd_channel2
		JSR	play_sound	; A is sound id, X - jmp_off (ch ID)

loc_0_F9BC:				; ...
		LDA	Objects_TypeID,X
		CMP	#$40
		BEQ	locret_0_FA0E
		CMP	#$37
		BEQ	locret_0_FA0E
		CMP	#$45
		BEQ	locret_0_FA0E
		CMP	#$57
		BEQ	locret_0_FA0E
		CMP	#$50
		BEQ	locret_0_FA0E
		CMP	#$53
		BEQ	locret_0_FA0E
		CMP	#$58
		BEQ	locret_0_FA0E
		CMP	#$51
		BEQ	locret_0_FA0E
		CMP	#$61
		BEQ	locret_0_FA0E
		CMP	#$3D
		BNE	loc_0_F9F2
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LSR	A
		LSR	A
		LSR	A
		CLC
		ADC	#4
		BNE	loc_0_FA01

loc_0_F9F2:				; ...
		LDY	#0
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		BNE	loc_0_FA02
		LDA	Objects_X_speed,X
		LSR	A
		LSR	A
		JSR	obj_unjk_cnt_add

loc_0_FA01:				; ...
		TAY

loc_0_FA02:				; ...
		LDA	byte_0_FA0F,Y
		STA	Objects_gfx_frame,X
		LDA	byte_0_FA1B,Y
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?

locret_0_FA0E:				; ...
		RTS
; End of function obj_hitting_index_A

; ---------------------------------------------------------------------------
byte_0_FA0F:	.BYTE  $6F, $70, $71, $70, $78,	$79, $7A, $75, $7B, $7C, $7D, $7D ; ...
byte_0_FA1B:	.BYTE	 8,   8,   8, $48,   8,	  8,   8,   8,	 8,   8,   8,	8 ; ...

; =============== S U B	R O U T	I N E =======================================


play_sound_87:				; ...
		INC	Objects_cnt2,X
		LDA	#$87
		LDX	#snd_channel2
		JMP	play_sound	; A is sound id, X - jmp_off (ch ID)
; End of function play_sound_87


; =============== S U B	R O U T	I N E =======================================


object_sosulka:				; ...
		LDA	Objects_cnt2,X
		BNE	loc_0_FA45
		JSR	load_PL_1_or_2	; Записать в Y id игрока 0 или 1. (четн/нечет кадр)
		BEQ	loc_0_FA8D
		LDA	#$30
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	loc_0_FA8D
		JSR	play_sound_87

loc_0_FA45:				; ...
		LDA	#$E0
		JSR	objects_Z_phys?
		JSR	levels_physics_bank5
		LDA	FrameCounter
		AND	#1
		TAX
		LDA	Lives_Player1,X	; кол-во жизней	(сердечек)
		BMI	loc_0_FA78
		LDA	Objects_death_timer,X ;	undamage time
		BNE	loc_0_FA78
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		STY	tmp_var_21
		LDA	#$A
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	loc_0_FA78
		LDA	#$20
		JSR	object_compare_Z
		BNE	loc_0_FA78
		LDA	#$4B
		JSR	damage_from_tbl_heavy ;	A is dmg table ID*5
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	#$14
		BNE	loc_0_FA88

loc_0_FA78:				; ...
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	Objects_Z_floor,X
		BNE	loc_0_FA8D
		LDA	#$85
		LDX	#snd_channel2
		JSR	play_sound	; A is sound id, X - jmp_off (ch ID)
		LDA	#4

loc_0_FA88:				; ...
		STA	some_sound_flag	; by tables
		JSR	create_object_4

loc_0_FA8D:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		STA	Objects_gfx_frame,X
		RTS
; End of function object_sosulka


; =============== S U B	R O U T	I N E =======================================


create_object_4:			; ...
		LDA	#2
		STA	Objects_cnt2,X
		STA	Objects_cnt3,X
		LDA	#4
		STA	Objects_TypeID,X
		LDA	#0
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		STA	Objects_Z_floor,X
		RTS
; End of function create_object_4

; ---------------------------------------------------------------------------

loc_0_FAAA:				; ...
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


snowball_speed:				; ...
		LDA	Objects_X_speed,X
		BNE	loc_0_FAC2
		LDA	#3
		STA	Objects_TargetID,X

loc_0_FAB7:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		STA	Objects_dir,X	; / angle

loc_0_FABD:				; ...
		AND	#$F
		STA	Objects_X_speed,X

loc_0_FAC2:				; ...
		LDA	Objects_dir,X	; / angle
		AND	#$80
		TAY
		LDA	Objects_X_speed,X
		CPY	#1
		BCC	loc_0_FAD3
		LDY	#$FF
		EOR	#$FF

loc_0_FAD3:				; ...
		ADC	Objects_Xpos_L,X
		STA	Objects_Xpos_L,X
		TYA
		ADC	Objects_Xpos_H,X
		STA	Objects_Xpos_H,X
		RTS
; End of function snowball_speed


; =============== S U B	R O U T	I N E =======================================


object_snowball:			; ...
		JSR	snowball_speed
		LDA	Objects_TargetID,X
		CMP	#2
		BCS	loc_0_FAF0
		LDA	#$F0
		JSR	objects_Z_phys?

loc_0_FAF0:				; ...
		LDA	#$20
		LDY	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BPL	loc_0_FB01
		LDA	Objects_cnt2,X
		CLC
		ADC	#1
		CMP	#$28
		BCS	loc_0_FAAA

loc_0_FB01:				; ...
		STA	Objects_cnt2,X

loc_0_FB04:				; ...
		JSR	electro_or_snow_gfx
		TXA
		EOR	FrameCounter
		AND	#3
		BEQ	sub_0_FB0F	; check	collision
		RTS
; End of function object_snowball


; =============== S U B	R O U T	I N E =======================================


sub_0_FB0F:				; ...
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		STY	tmp_var_21
		LDX	#$E		; obj counter
		LDA	Level_ID
		CMP	#terra_tubes
		BNE	loc_0_FB24
		LDA	Objects_TypeID,Y
		CMP	#$3A
		BNE	loc_0_FB24
		LDX	#2

loc_0_FB24:				; ...
		LDA	Objects_death_timer,X ;	undamage time
		BNE	loc_0_FB36
		LDA	Level_ID
		CMP	#intruder_excluder
		BEQ	check_collision_snowbal
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#damaged_heavy
		BEQ	check_collision_snowbal

loc_0_FB36:				; ...
		JMP	next_collision_for_snowballs
; ---------------------------------------------------------------------------

check_collision_snowbal:		; ...
		LDA	#8
		STA	hit_Z_table_index ; index for Z	collision tbl
		LDA	Objects_TypeID,X
		BEQ	loc_0_FB36
		CMP	#3
		BCC	loc_0_FB5A
		CMP	#$B
		BEQ	loc_0_FB5A
		CMP	#$17
		BEQ	loc_0_FB5A
		CMP	#$3C
		BEQ	loc_0_FB56
		CMP	#$33
		BNE	next_collision_for_snowballs

loc_0_FB56:				; ...
		LDA	#$C
		STA	hit_Z_table_index ; index for Z	collision tbl

loc_0_FB5A:				; ...
		CPX	tmp_var_21
		BEQ	next_collision_for_snowballs
		LDA	#$10
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	next_collision_for_snowballs
		LDA	Level_ID
		CMP	#wookie_hole
		BCS	loc_0_FB72
		LDA	#$10
		JSR	obj_compare_Y?
		BNE	next_collision_for_snowballs

loc_0_FB72:				; ...
		CPX	#2
		BCS	loc_0_FB7F
		LDA	Objects_gfx_frame,X
		CMP	#$4B		; rash sitting_frame
		BNE	loc_0_FB7F
		INC	hit_Z_table_index ; index for Z	collision tbl

loc_0_FB7F:				; ...
		JSR	compare_for_hit_Z?
		BCC	next_collision_for_snowballs
		LDA	Objects_dir,Y	; / angle
		LSR	A
		STA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	Objects_gfx_frame,Y
		CMP	#$DC
		BEQ	loc_0_FBF2
		CMP	#$B2
		BEQ	loc_0_FBF2
		LDA	#$1C
		STA	some_sound_flag	; by tables
		LDA	Level_ID
		CMP	#intruder_excluder
		BNE	loc_0_FBA4
		LDA	#$4B
		BCS	loc_0_FBB2

loc_0_FBA4:				; ...
		CMP	#wookie_hole
		LDA	#$46
		BCS	loc_0_FBB2
		DEC	some_counter
		LDA	#$24
		STA	some_sound_flag	; by tables
		LDA	#$14

loc_0_FBB2:				; ...
		JSR	damage_from_tbl_heavy ;	A is dmg table ID*5
		LDA	#$C
		STA	Objects_TypeID,X
		LDA	#8
		STA	Objects_cnt2,X
		LDA	#$F
		LDY	Level_ID
		CPY	#intruder_excluder
		BEQ	write_gfx_frame_
		LDA	#$76
		BNE	write_gfx_frame_ ; jump

next_collision_for_snowballs:		; ...
		DEX
		BMI	locret_0_FBD1
		JMP	loc_0_FB24
; ---------------------------------------------------------------------------

locret_0_FBD1:				; ...
		RTS
; End of function sub_0_FB0F


; =============== S U B	R O U T	I N E =======================================


electro_or_snow_gfx:			; ...
		LDA	#$B2
		LDY	Level_ID
		CPY	#rat_race
		BEQ	write_gfx_frame_
		CPY	#intruder_excluder
		BNE	loc_0_FBE6
		LDY	Camera_Y_pos_H
		BNE	write_gfx_frame_
		LDA	#$F9
		BNE	write_gfx_frame_

loc_0_FBE6:				; ...
		LDA	#$75
		CPY	#terra_tubes
		BNE	write_gfx_frame_
		LDA	#$DC

write_gfx_frame_:			; ...
		STA	Objects_gfx_frame,X
		RTS
; End of function electro_or_snow_gfx

; ---------------------------------------------------------------------------

loc_0_FBF2:				; ...
		TXA
		TAY
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		JMP	loc_0_F867

; =============== S U B	R O U T	I N E =======================================

; A is dmg table ID*5

damage_from_tbl_heavy:			; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		ORA	#damaged_heavy
		STA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage

damage_from_table:			; ...
		LDA	#0
		STA	Objects_AnimID,X ; номер движения для запуска
		STX	tmp_var_21
		LDA	tmp_var_15	;  / Object Counter / various tmp
		CPX	#2
		BCS	loc_0_FC12
		ADC	#$5A		; object vs player dmg tab

loc_0_FC12:				; ...
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		JMP	gen_damage_effects_
; End of function damage_from_tbl_heavy


; =============== S U B	R O U T	I N E =======================================


object_snow:				; ...
		LDA	#$77
		STA	Objects_gfx_frame,X
		RTS
; End of function object_snow


; =============== S U B	R O U T	I N E =======================================


object_level4_sosulka_kamennaya:	; ...
		LDA	FrameCounter
		AND	#1
		STA	tmp_var_8d
		TAY
		LDA	InputHold_P1,Y	; данные первого джойстика на зажатие
		AND	#button_down
		BNE	loc_0_FC30
		LDA	#button_left|button_down
		JSR	sub_0_FC6C

loc_0_FC30:				; ...
		LDA	#$73
		STA	Objects_gfx_frame,X
		RTS
; End of function object_level4_sosulka_kamennaya


; =============== S U B	R O U T	I N E =======================================


object_level4_wall_moving:		; ...
		LDA	Objects_Life,X
		ROL	A
		LDA	#$EA
		BCC	loc_0_FC40
		LDA	#$E2

loc_0_FC40:				; ...
		JSR	objects_Z_phys?
		LDA	objects_some_anim,X ; some obj X speed
		SEC
		SBC	Objects_Zpos_L,X
		BMI	object_leve4_wall
		LDA	objects_some_anim,X ; some obj X speed
		STA	Objects_Zpos_L,X
		LDA	#0
		STA	Objects_Z_speed,X
		STA	Objects_Z_spd_sub,X

object_leve4_wall:			; ...
		JSR	load_PL_1_or_2	; Записать в Y id игрока 0 или 1. (четн/нечет кадр)
		BEQ	loc_0_FCAA
		LDA	#$28
		JSR	object_compare_Z
		BNE	loc_0_FCAA
		LDA	tmp_var_1B
		STA	tmp_var_8d
		LDA	#$E
; End of function object_level4_wall_moving


; =============== S U B	R O U T	I N E =======================================


sub_0_FC6C:				; ...
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	loc_0_FCAA
		STA	Objects_X_speed,Y
		STA	Obj_various_cnt,Y
		LDA	Objects_Z_speed,X
		BPL	loc_0_FC85
		LDA	tmp_var_8d
		SBC	#$20
		BMI	loc_0_FC85
		JSR	player_razdavlen

loc_0_FC85:				; ...
		LDA	#$20
		ASL	tmp_var_8F
		BCS	loc_0_FC8D
		LDA	#$E0

loc_0_FC8D:				; ...
		STA	player1_updown_slide_cnt,Y
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$EF
		STA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		TYA
		TAX
		LDA	player1_updown_slide_cnt,X
		AND	#$80
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	#2
		LDY	tmp_var_15	;  / Object Counter / various tmp
		JSR	add_to_obj_X
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_0_FCAA:				; ...
		LDA	Objects_death_timer,X ;	undamage time
		BEQ	loc_0_FCC3
		JSR	get_free_obj_slot_IDX
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		JSR	copy_objects_XYZ
		LDA	#$41
		STA	Objects_TypeID,X
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	#4
		JSR	create_obj_4

loc_0_FCC3:				; ...
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	loc_0_FCD8
		JSR	sub_0_9E59
		LDA	#0
		STA	Obj_anims_timer,X ; timer used for gfx frames
		JSR	loc_0_9E8B
		LDA	#$20
		STA	Objects_cnt2,X

loc_0_FCD8:				; ...
		LDA	Objects_cnt2,X
		BEQ	loc_0_FCED
		DEC	Objects_cnt2,X

loc_0_FCE0:				; ...
		LDY	#2
		AND	#3
		BNE	loc_0_FCED
		TYA
		EOR	Objects_Xpos_L,X
		STA	Objects_Xpos_L,X

loc_0_FCED:				; ...
		LDA	#$7E
		LDY	Level_ID
		CPY	#terra_tubes
		BNE	loc_0_FCF7
		LDA	#$E6

loc_0_FCF7:				; ...
		STA	Objects_gfx_frame,X
		RTS
; End of function sub_0_FC6C


; =============== S U B	R O U T	I N E =======================================


player_razdavlen:			; ...
		LDA	#$56
		STA	player1_razdvalen_flag?,Y ; frame 56
		LDA	#$FD
		STA	Objects_Z_speed,Y
		LDA	Objects_Z_spd_sub,X
		STA	Objects_Z_spd_sub,Y
		LDA	#0
		STA	Objects_AnimID,Y ; номер движения для запуска
		STA	Objects_X_speed,Y
		STA	Objects_Life,Y
		INC	update_ui_flag
		LDA	#$81
		STA	Objects_death_timer,Y ;	undamage time
		LDA	#$C0
		STA	Obj_anims_timer,Y ; timer used for gfx frames
		STY	tmp_var_15	;  / Object Counter / various tmp
		LDA	#$1E
		JSR	play_sound_ch1_and_ch2
		LDY	tmp_var_15	;  / Object Counter / various tmp
		RTS
; End of function player_razdavlen


; =============== S U B	R O U T	I N E =======================================


object_large_snowball:			; ...
		LDA	objects_some_anim,X ; some obj X speed
		BEQ	loc_0_FD47
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BNE	loc_0_FD44
		JSR	levels_physics_bank5
		LDA	FrameCounter
		JSR	loc_0_FCE0
		LDA	#$78
		STA	Objects_gfx_frame,X
		RTS
; ---------------------------------------------------------------------------

loc_0_FD44:				; ...
		DEC	objects_some_anim,X ; some obj X speed

loc_0_FD47:				; ...
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		CMP	#$38
		BCC	loc_0_FD56
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BPL	loc_0_FD56

loc_0_FD53:				; ...
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

loc_0_FD56:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	loc_0_FD7C
		LDA	Objects_gfx_frame,X
		BEQ	loc_0_FD7C
		LDA	Objects_X_speed,X
		SEC
		SBC	#2
		BCS	loc_0_FD79
		LDA	Objects_Z_floor,X
		BNE	loc_0_FD77
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		SBC	#1
		BCC	loc_0_FD53
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта

loc_0_FD77:				; ...
		LDA	#0

loc_0_FD79:				; ...
		STA	Objects_X_speed,X

loc_0_FD7C:				; ...
		JSR	sub_0_F79F
		LDA	Objects_Z_floor,X
		BNE	locret_0_FD8E
		LDA	Objects_various_flags,X	; для пушек ID прицепленного объекта
		CMP	#$38
		BCS	locret_0_FD8E
		INC	Objects_various_flags,X	; для пушек ID прицепленного объекта

locret_0_FD8E:				; ...
		RTS
; End of function object_large_snowball


; =============== S U B	R O U T	I N E =======================================


object_level4_spike_moving:		; ...
		JSR	sub_0_F79F
		LDA	objects_some_anim,X ; some obj X speed
		STA	Objects_X_speed,X
		LDA	#$81
		STA	Objects_gfx_frame,X
		RTS
; End of function object_level4_spike_moving

; ---------------------------------------------------------------------------

object_multiple_del?:			; ...
		JSR	delete_object_except_checkp_and_DQ
		JMP	clear_object_vars ; remove object
; ---------------------------------------------------------------------------

loc_0_FDA4:				; ...
		JSR	copy_xyz_from_rest_point
		LDA	objects_some_anim,Y ; some obj X speed
		STA	objects_some_anim,X ; some obj X speed
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		JMP	clear_object_vars ; remove object

; =============== S U B	R O U T	I N E =======================================


object_levels_checkpoint:		; ...
		LDA	Level_ID
		CMP	#intruder_excluder
		BEQ	loc_0_FDA4
		CMP	#rat_race
		BEQ	loc_0_FDA4
		CMP	#revolution
		BEQ	loc_0_FDA4
		JSR	load_PL_1_or_2	; Записать в Y id игрока 0 или 1. (четн/нечет кадр)
		BEQ	loc_0_FE0B
		LDA	#8
		JSR	obj_cmp_and_get_X_dist ; returns BEQ/BNE / $8F
		BNE	loc_0_FE0B
		LDA	#$30
		JSR	object_compare_Z
		BNE	loc_0_FE0B
		STY	tmp_var_91
		LDA	#$56
		JSR	play_sound_ch1_and_ch2
		JSR	copy_xyz_from_rest_point
		LDA	#$E6
		JSR	objects_add_Z?	; A is Z_speed
		LDA	objects_some_anim,X ; some obj X speed
		ASL	A
		STA	tmp_var_15	;  / Object Counter / various tmp
		CMP	#$36
		BEQ	loc_0_FDF0
		CMP	#$10
		BNE	loc_0_FDF4

loc_0_FDF0:				; ...
		LDA	#$F8
		STA	timer_end_music

loc_0_FDF4:				; ...
		LDX	#$24
		LDY	#3
		JSR	jump_from_bank0
		JSR	delete_object_except_checkp_and_DQ
		LDA	#6
		JSR	create_scores_obj_ ; A is score	obj index

object_restore_point:			; ...
		LDA	#$C1
		LDY	Level_ID
		CPY	#karnath_lair
		BEQ	loc_0_FE0D

loc_0_FE0B:				; ...
		LDA	#0

loc_0_FE0D:				; ...
		STA	Objects_gfx_frame,X
		RTS
; End of function object_levels_checkpoint


; =============== S U B	R O U T	I N E =======================================


delete_object_except_checkp_and_DQ:	; ...
		LDX	#0

loc_0_FE13:				; ...
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		AND	#$1F
		CMP	#3
		BCC	loc_0_FE21
		LDA	#0
		STA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта

loc_0_FE21:				; ...
		INX
		CPX	#2
		BNE	loc_0_FE13

loc_0_FE26:				; ...
		LDA	Objects_TypeID,X
		BEQ	loc_0_FE3A
		CMP	#4
		BEQ	loc_0_FE3A
		CMP	#$42
		BEQ	loc_0_FE3A
		CMP	#$7F
		BEQ	loc_0_FE3A
		JSR	create_object_4

loc_0_FE3A:				; ...
		INX
		CPX	#$F
		BNE	loc_0_FE26
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		RTS
; End of function delete_object_except_checkp_and_DQ


; =============== S U B	R O U T	I N E =======================================


copy_xyz_from_rest_point:		; ...
		LDA	#$42		; obj =	restore	point
		JSR	get_obj_slot_type_by_ID
		TYA
		TAX
		INC	objects_some_anim,X ; some obj X speed
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		JMP	copy_objects_XYZ
; End of function copy_xyz_from_rest_point


; =============== S U B	R O U T	I N E =======================================


level_cfg_read:				; ...
		LDX	#$1E		; level_config_reading
		LDY	#3
		JMP	jump_from_bank0
; End of function level_cfg_read


; =============== S U B	R O U T	I N E =======================================


get_free_obj_slot_IDX:			; ...
		LDX	#2

search_obj_slot:			; ...
		LDA	Objects_TypeID,X
		BEQ	locret_0_FE65
		INX
		CPX	#$F
		BNE	search_obj_slot
		DEX

locret_0_FE65:				; ...
		RTS
; End of function get_free_obj_slot_IDX


; =============== S U B	R O U T	I N E =======================================


get_obj_slot_type_by_ID:		; ...
		LDY	#2

loc_0_FE68:				; ...
		CMP	Objects_TypeID,Y
		BEQ	locret_0_FE65

search_object_6b:			; ...
		INY
		CPY	#$F
		BNE	loc_0_FE68
		INY
		RTS
; End of function get_obj_slot_type_by_ID


; =============== S U B	R O U T	I N E =======================================


IRQ0:					; ...
		RTI
; End of function IRQ0


; =============== S U B	R O U T	I N E =======================================


NMI_:					; ...
		STA	previous_bankID_NMI
		STX	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		STX	PPU_SPR_ADDR	; SPR-RAM Address Register (W)
		LDA	#2
		STA	SPR_DMA		; Sprite DMA Register (W)
		LDA	ppu_ctrl1_val	;  > $80  кадр завершен
		BPL	lagged_frame	; if lag or pcm	played
		AND	#$7F		; nmi disabled
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDA	PPU_STATUS	; PPU Status Register (R)
		DEX
		TXS
		JMP	(jump_ptr_nmi)	; level_nextframe 83a4
; ---------------------------------------------------------------------------

lagged_frame:				; ...
		STY	NMI_Yreg_saver	; if lag or pcm	played
		LDY	Level_ID
		BMI	not_a_level	; other	screens
		AND	#$7F		; nmi disabled
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDX	#$C5
		JSR	set_second_nametable
		JSR	vram_update_functions

nmi_return_:				; ...
		LDA	ppu_ctrl1_val	;  > $80  кадр завершен
		ORA	#$80		; nmi enabled
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		JMP	return_from_nmi
; ---------------------------------------------------------------------------

not_a_level:				; ...
		CPY	#$FE		; other	screens
		BEQ	loc_0_FED0
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDA	Camera_X_pos_l	;  / level_position - on h levels
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		LDA	#0
		JSR	write_VScrlReg_ScreenON_UpdMusic
		LDA	nmi_pcm_flags
		BPL	nmi_return
		PLA			; ? fix	sp 1f5-1f7
		PLA
		JMP	loc_0_E57A
; ---------------------------------------------------------------------------

nmi_return:				; ...
		JMP	nmi_return_
; ---------------------------------------------------------------------------

loc_0_FED0:				; ...
		JSR	jump_to_music_play
		LDA	#0
		STA	nmi_pcm_flags
		JMP	return_from_nmi
; End of function NMI_


; =============== S U B	R O U T	I N E =======================================

; in nmi, uses 15,16,17,18

volkmire_inferno_scrolls:		; ...
		LDX	gfx_buff_off
		LDA	#$21
		STA	tmp_var_18

loc_0_FEE0:				; ...
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDA	gfx_buff_adr_h,X
		CLC
		ADC	tmp_var_17
		STA	tmp_var_16
		AND	#$F8
		ORA	tmp_var_15	;  / Object Counter / various tmp
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		LDA	tmp_var_16
		AND	#7
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDY	#9

loc_0_FEFA:				; ...
		DEY
		BNE	loc_0_FEFA
		LDA	tmp_var_90	; obj_dir_tmp (для спрайтов - направление объекта)
		NOP
		INX
		CPX	#$4C
		BNE	loc_0_FF09
		LDX	#0
		BEQ	loc_0_FF0B	; jump

loc_0_FF09:				; ...
		NOP
		NOP

loc_0_FF0B:				; ...
		LDA	tmp_var_18
		AND	#7
		CMP	#5
		BCC	loc_0_FF13

loc_0_FF13:
		DEC	tmp_var_18
		BNE	loc_0_FEE0
		RTS
; End of function volkmire_inferno_scrolls


; =============== S U B	R O U T	I N E =======================================


revolution_anim_write_to_vram:		; ...
		LDA	#$1D
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$70
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDY	#0
		LDX	#0
		CLC

loc_0_FF27:				; ...
		LDA	gfx_buff_adr_h,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	gfx_buff_adr_l,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		INY
		INY
		CPY	#$28
		BNE	loc_0_FF27
		LDX	#5
; End of function revolution_anim_write_to_vram


; =============== S U B	R O U T	I N E =======================================


set_second_nametable:			; ...
		LDA	#$10
		STA	banks_ids0+$10	; prevent 'bus conflict'

wait_by_X:				; ...
		DEX
		BNE	wait_by_X
		RTS
; End of function set_second_nametable

 .PAD $FF6E,$FF

; =============== S U B	R O U T	I N E =======================================


read_anims_dat:				; ...
		STA	banks_ids0+3	; BANK3:FF71
		JSR	read_anims_dat	; BANK3:E07A
		STA	banks_ids0	; prevent 'bus conflict'
		RTS
; End of function read_anims_dat


; =============== S U B	R O U T	I N E =======================================


karnath_lair_bank3_f:			; ...
		STA	banks_ids0+3	; BANK3:FF7B
		JSR	karnath_lair_bank3_f
		LDA	#0
		STA	banks_ids0	; prevent 'bus conflict'
		RTS
; End of function karnath_lair_bank3_f


; =============== S U B	R O U T	I N E =======================================

; playing_music

music_play_bank3:			; ...
		STA	prev_bank_id_m	; saves	mirror,	when jump from bank 0 to bank3 to music	f
		AND	#$10
		ORA	#3
		TAY			; playing_music
		STA	banks_ids0,Y	; BANK3:FF8E
		JSR	tmp_var_06	; music	ptr
		LDA	prev_bank_id_m	; saves	mirror,	when jump from bank 0 to bank3 to music	f
		TAY
		STA	banks_ids0,Y	; prevent 'bus conflict'
		RTS
; End of function music_play_bank3


; =============== S U B	R O U T	I N E =======================================


NMI0:					; ...
		STX	NMI_Xreg_saver
		STA	NMI_Areg_saver
		LDA	#0
		LDX	#0
		STX	banks_ids0	; prevent 'bus conflict'
		JMP	NMI_
; End of function NMI0


; =============== S U B	R O U T	I N E =======================================


return_from_nmi:			; ...
		LDX	NMI_Xreg_saver
		LDA	previous_bankID_NMI
		TAY
		STA	banks_ids0,Y	; prevent 'bus conflict'
		LDY	NMI_Yreg_saver
		LDA	NMI_Areg_saver
		RTI
; End of function return_from_nmi

; ---------------------------------------------------------------------------
banks_ids0:	.BYTE 0, 1, 2, 3, 4, 5,	6, 7, 8, 9, $A,	$B, $C,	$D, $E,	$F, $10, $11, $12, $13,	$14, $15, $16, $17 ; ...
					; prevent 'bus conflict'

; =============== S U B	R O U T	I N E =======================================


jump_from_bank0:			; ...
		LDA	#0

jump_from_bank0_:			; ...
		ORA	#0		; save bank ID?
		STA	previous_bankID
		LDA	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		PHA
		STX	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		LDA	banks_ids0,Y	; change bank
		STA	banks_ids0,Y	; prevent 'bus conflict'
		JSR	sub_0_8000
		LDY	previous_bankID	; load bank ID
		PLA			; load old jumptable ptr
		STA	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		LDA	banks_ids0,Y	; change bank
		STA	banks_ids0,Y	; prevent 'bus conflict'
		RTS
; End of function jump_from_bank0


; =============== S U B	R O U T	I N E =======================================

; wait by X,Y

wait0:					; ...
		DEX
		BNE	wait0		; wait by X,Y
		DEY
		BNE	wait0		; wait by X,Y
		RTS
; End of function wait0


; =============== S U B	R O U T	I N E =======================================


RESET0:					; ...
		LDA	#0
		STA	banks_ids0	; prevent 'bus conflict'
		JMP	RESET_0
; End of function RESET0

; ---------------------------------------------------------------------------
		.WORD NMI0		; Non-Maskable Interrupt Vector
		.WORD RESET0		; RESET	Interrupt Vector
		.WORD IRQ0		; IRQ/BRK Interrupt Vector
; end of 'BANK0'

.base $8000
; ===========================================================================

; Segment type:	Pure code
		;.segment BANK1

; =============== S U B	R O U T	I N E =======================================


sub_1000_8000:				; ...
		JMP	(JumpTable_ptr_main) ; указатель на функцию при	переходе в другой банк
; End of function sub_1000_8000

; ---------------------------------------------------------------------------
		JMP	unpack_tiles_bank1
; ---------------------------------------------------------------------------
		JMP	waterfall_animation
; ---------------------------------------------------------------------------
		JMP	unpack_tiles_bank1
; ---------------------------------------------------------------------------
		.BYTE $4C ; L		; unused
		.BYTE $C4 ; ─
		.BYTE $87 ; З
; ---------------------------------------------------------------------------
		JMP	inferno_race_start_anim
; ---------------------------------------------------------------------------
		JMP	write_to_ppu_from_stack
; ---------------------------------------------------------------------------
		JMP	planA_spr_blink	; BANK0:D620
; ---------------------------------------------------------------------------
		JMP	ropes

; =============== S U B	R O U T	I N E =======================================


write_to_ppu_from_stack:		; ...
		TSX
		STX	stackp_save
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDX	#$F
		TXS
		LDY	#$C

loc_1000_8026:				; ...
		LDA	vram_adr_h,Y
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	vram_adr_l,Y
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		DEY
		DEY
		BPL	loc_1000_8026
		LDX	stackp_save
		TXS
		RTS
; End of function write_to_ppu_from_stack


; =============== S U B	R O U T	I N E =======================================


unpack_tiles_bank1:			; ...
		LDX	tmp_var_15	;  / Object Counter / various tmp
		LDA	#1
		STA	tmp_var_00	; unpacking flag?
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDA	archives_sets_ptrs,X
		STA	tmp_var_01
		LDA	archives_sets_ptrs+1,X
		STA	tmp_var_02
		LDY	#0
		LDA	(tmp_var_01),Y	; 83ac
		STA	tmp_var_03
		INY
		LDA	(tmp_var_01),Y	; 83ad
		STA	tmp_var_04
		TYA
		SEC
		ADC	tmp_var_01
		STA	tmp_var_01
		LDA	tmp_var_02
		ADC	#0
		STA	tmp_var_02

unpack_gfx_parts_loop:			; ...
		LDY	#0
		LDA	(tmp_var_01),Y	; 83ae	end flag
		BEQ	unpack_end
		STA	tmp_var_05
		INY
		LDA	(tmp_var_01),Y	; 83af
		STA	tmp_var_08
		INY
		LDA	(tmp_var_01),Y
		STA	tmp_var_06	; music	ptr
		INY
		LDA	(tmp_var_01),Y
		STA	tmp_var_07	; 873c
		TYA
		SEC
		ADC	tmp_var_01
		STA	tmp_var_01
		LDA	tmp_var_02
		ADC	#0
		STA	tmp_var_02
		LDA	tmp_var_08
		CMP	#4
		BEQ	unpack_type4

set_vram_adr:				; ...
		LDA	tmp_var_05	; counter
		BEQ	unpack_gfx_parts_loop
		LDA	tmp_var_04	; vram adr
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	tmp_var_03	; vram adr
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	tmp_var_08
		ASL	A		; 3*2 ptr flag
		BCS	unpack_type1
		JSR	unpack_type1
		JMP	set_vram_adr
; End of function unpack_tiles_bank1


; =============== S U B	R O U T	I N E =======================================


unpack_type1:				; ...
		TAX
		LDA	unpack_t1_ptrs,X
		STA	tmp_var_1F
		LDA	unpack_t1_ptrs+1,X
		STA	tmp_var_20
		JMP	(tmp_var_1F)
; End of function unpack_type1

; ---------------------------------------------------------------------------

unpack_end:				; ...
		LDA	#0
		STA	tmp_var_00	; clear	unpacking flag?
		RTS
; ---------------------------------------------------------------------------
unpack_t1_ptrs:	.WORD write_16unpacked	; ...
		.WORD write_8unpacked_and_8zeros
		.WORD write_8_zeros_and_u_8unpacked
		.WORD write_16zeros

; =============== S U B	R O U T	I N E =======================================


unpack_type4:				; ...
		LDY	#0
		LDA	(tmp_var_06),Y	; music	ptr
		STA	tmp_var_1B	; rep zeros tag
		INY
		LDA	(tmp_var_06),Y	; music	ptr
		STA	tmp_var_1C	; rep ff's tag
		INY
		LDA	tmp_var_04	; vram h
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	tmp_var_03	; vram l
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#0
		STA	tmp_var_1A
		LDA	tmp_var_05
		ASL	A
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		STA	tmp_var_19	; multiply by 16
		CLC
		ADC	tmp_var_03
		STA	tmp_var_03
		LDA	tmp_var_1A
		ADC	tmp_var_04
		STA	tmp_var_04
		LDA	#0
		SEC
		SBC	tmp_var_19
		STA	tmp_var_19
		LDA	#0
		SBC	tmp_var_1A
		STA	tmp_var_1A	; size cnt to unpack (negative)

unpack_type4_loop:			; ...
		LDA	(tmp_var_06),Y	; music	ptr
		INY
		BNE	unpack_type4_compare_tags
		INC	tmp_var_07

unpack_type4_compare_tags:		; ...
		CMP	tmp_var_1B
		BEQ	write_zeros	; write	zeros
		CMP	tmp_var_1C
		BEQ	write_ffs	; write	'FF'
		STA	PPU_DATA	; VRAM I/O Register (RW)
		INC	tmp_var_19
		BNE	unpack_type4_loop
		INC	tmp_var_1A
		BNE	unpack_type4_loop

end_unpack_type4_part:			; ...
		JMP	unpack_gfx_parts_loop
; ---------------------------------------------------------------------------

write_ffs:				; ...
		LDX	#$FF
		BNE	loc_1000_818E	; jump

write_zeros:				; ...
		LDX	#0

loc_1000_818E:				; ...
		LDA	(tmp_var_06),Y	; music	ptr
		STA	tmp_var_05	; repeat counter
		INY
		BNE	unpack_type4_write_repeated
		INC	tmp_var_07

unpack_type4_write_repeated:		; ...
		STX	PPU_DATA	; VRAM I/O Register (RW)
		INC	tmp_var_19
		BNE	loc_1000_81A2
		INC	tmp_var_1A
		BEQ	end_unpack_type4_part

loc_1000_81A2:				; ...
		DEC	tmp_var_05	; repeat counter
		BNE	unpack_type4_write_repeated
		BEQ	unpack_type4_loop
; End of function unpack_type4


; =============== S U B	R O U T	I N E =======================================


write_16unpacked:			; ...
		LDY	#0
		LDX	#$10
		JSR	write_to_ppu
		LDA	#$10
		JMP	loc_1000_81E6
; ---------------------------------------------------------------------------

write_8unpacked_and_8zeros:		; ...
		LDY	#0
		LDX	#8
		JSR	write_to_ppu
		LDX	#8
		JSR	write_zeros_to_ppu
		LDA	#8
		JMP	loc_1000_81E6
; ---------------------------------------------------------------------------

write_8_zeros_and_u_8unpacked:		; ...
		LDY	#0
		LDX	#8
		JSR	write_zeros_to_ppu
		LDX	#8
		JSR	write_to_ppu
		LDA	#8
		JMP	loc_1000_81E6
; ---------------------------------------------------------------------------

write_16zeros:				; ...
		LDY	#0
		LDX	#8
		JSR	write_to_ppu
		LDY	#0
		LDX	#8
		JSR	write_to_ppu
		LDA	#8

loc_1000_81E6:				; ...
		CLC			; 873c
		ADC	tmp_var_06	; music	ptr
		STA	tmp_var_06	; music	ptr
		LDA	tmp_var_07
		ADC	#0
		STA	tmp_var_07	; 8744
		LDA	tmp_var_03	; 1ef0
		CLC
		ADC	#$10
		STA	tmp_var_03
		LDA	tmp_var_04
		ADC	#0
		STA	tmp_var_04	; 1f00
		DEC	tmp_var_05
		RTS
; End of function write_16unpacked


; =============== S U B	R O U T	I N E =======================================


write_to_ppu:				; ...
		LDA	(tmp_var_06),Y	; 873c
		STA	PPU_DATA	; VRAM I/O Register (RW)
		INY
		DEX
		BNE	write_to_ppu
		RTS
; End of function write_to_ppu

; ---------------------------------------------------------------------------

loc_1000_820B:				; ...
		LDA	(tmp_var_06),Y	; unused?
		EOR	#$FF
		STA	PPU_DATA	; VRAM I/O Register (RW)
		INY
		DEX
		BNE	loc_1000_820B
		RTS

; =============== S U B	R O U T	I N E =======================================


write_zeros_to_ppu:			; ...
		LDA	#0		; 873c

loc_1000_8219:				; ...
		STA	PPU_DATA	; VRAM I/O Register (RW)
		DEX
		BNE	loc_1000_8219
		RTS
; End of function write_zeros_to_ppu

; ---------------------------------------------------------------------------
archives_sets_ptrs:.WORD word_1000_8390	; ...
		.WORD level1_gfx_set
		.WORD word_1000_8271
		.WORD base_gfx_set_bkg
		.WORD word_1000_8390
		.WORD word_1000_8278
		.WORD level1_gfx_set
		.WORD level1_gfx_set
		.WORD word_1000_8390
		.WORD word_1000_8390
		.WORD word_1000_8390
		.WORD word_1000_8390
		.WORD level_end_gfx_set
		.WORD level2_gfx_set
		.WORD turbo_tunnel_gfx_set
		.WORD volkmire_inf_gfx_set
		.WORD large_planet_gfx_set
		.WORD level4_gfx_set
		.WORD level_plan_gfx_set
		.WORD rat_race_gfx_set
		.WORD large_planet_gfx_set
		.WORD rat_race_gfx_set
		.WORD word_1000_8390
		.WORD snake_pit_gfxs
		.WORD level_end_gfx
		.WORD word_1000_8286
		.WORD word_1000_828D
		.WORD l1_boss_gfx_set1
		.WORD l1_boss_gfx_set2
		.WORD level_end_gfx_set
		.WORD word_1000_839E
		.WORD word_1000_834F
		.WORD surf_city_gfx_set
		.WORD base_gfx_set_spr
		.WORD word_1000_8266
word_1000_8266:	.WORD 0			; ...
		.BYTE $FD
		.BYTE 3
		.WORD byte_1000_83DE	; packrep3 or 1
		.BYTE 3
		.BYTE 3
		.WORD byte_1000_83C6	; packrep3
		.BYTE 0
word_1000_8271:	.WORD $1000		; ...
		.BYTE $32
		.BYTE 3
		.WORD byte_1000_83DE	; packrep3 or 1
		.BYTE 0
word_1000_8278:	.WORD 0			; ...
		.BYTE $32
		.BYTE 3
		.WORD byte_1000_83DE	; packrep3 or 1
		.BYTE 0
level_end_gfx:	.WORD $1C50		; ...
		.BYTE $30
		.BYTE 3
		.WORD byte_1000_83C6	; packrep3
		.BYTE 0
word_1000_8286:	.WORD $15E0		; ...
		.BYTE $12
		.BYTE 1
		.WORD byte_1000_83DE	; packrep3 or 1
		.BYTE 0
word_1000_828D:	.WORD $1E40		; ...
		.BYTE $1A
		.BYTE 1
		.WORD byte_1000_846E	; packrep1
		.BYTE 0
level1_gfx_set:	.WORD 0			; ...
		.BYTE $21		; count	of tiles
		.BYTE 0			; unpacked
		.WORD sprite0_gfx	; unpacked
		.BYTE 9			; count	of tiles
		.BYTE 0			; unpacked
		.WORD std_gfx		; unpacked
		.BYTE $83
		.BYTE 4			; packed4
		.WORD level1_obj_gfx	; packed
		.BYTE $23
		.BYTE 4			; packed4
		.WORD l1_and_surfcity_gfx ; packed
		.BYTE $A
		.BYTE 4			; packed4
		.WORD tall_walker_gfx	; packed
		.BYTE 4
		.BYTE 4			; packed4
		.WORD stick_parts_gfx	; packed
		.BYTE $A
		.BYTE 4			; packed4
		.WORD some_common_obj	; packed
		.BYTE 2
		.BYTE 0			; unpacked
		.WORD level1_lift_gfx	; unpacked
		.BYTE 0
level2_gfx_set:	.WORD 0			; ...
		.BYTE $21
		.BYTE 0
		.WORD sprite0_gfx	; unpacked
		.BYTE 9
		.BYTE 0
		.WORD std_gfx		; unpacked
		.BYTE $B4
		.BYTE 4
		.WORD level2_obj_gfx	; packed
		.BYTE $F
		.BYTE 4
		.WORD some_common_obj	; packed
		.BYTE 0
turbo_tunnel_gfx_set:.WORD 0		; ...
		.BYTE $21
		.BYTE 0
		.WORD sprite0_gfx	; unpacked
		.BYTE 9
		.BYTE 0
		.WORD std_gfx		; unpacked
		.BYTE $C3
		.BYTE 4
		.WORD TurboTunnel_Obj_gfx ; packed
		.BYTE 0
level4_gfx_set:	.WORD 0			; ...
		.BYTE $21
		.BYTE 0
		.WORD sprite0_gfx	; unpacked
		.BYTE 9
		.BYTE 0
		.WORD std_gfx		; unpacked
		.BYTE $2D
		.BYTE 4
		.WORD snowman_gfx	; packed
		.BYTE $5F
		.BYTE 4
		.WORD level4_obj_gfx	; packed
		.BYTE $37
		.BYTE 4
		.WORD level4_obj_gfx2	; packed
		.BYTE 0
l1_boss_gfx_set1:.WORD $570		; ...
		.BYTE $11
		.BYTE 4
		.WORD level4_obj_gfx	; packed
		.BYTE $B
		.BYTE 0
		.WORD level1_boss_gfx2	; unpacked
		.BYTE 0
l1_boss_gfx_set2:.WORD $B60		; ...
		.BYTE 8
		.BYTE 4
		.WORD level4_obj_gfx2	; packed
		.BYTE 0
level_plan_gfx_set:.WORD 0		; ...
		.BYTE $21
		.BYTE 0
		.WORD sprite0_gfx	; unpacked
		.BYTE 9
		.BYTE 0
		.WORD std_gfx		; unpacked
		.BYTE $A6
		.BYTE 4
		.WORD revolution_obj_gfx ; packed
		.BYTE 6
		.BYTE 4
		.WORD tall_walker_gfx	; packed
		.BYTE 4
		.BYTE 0
		.WORD byte_1000_BDC5	; unpacked
		.BYTE 4
		.BYTE 4
		.WORD stick_parts_gfx	; packed
		.BYTE 5
		.BYTE 4
		.WORD some_common_obj	; packed
		.BYTE $A
		.BYTE 0
		.WORD byte_1000_BE25	; unpacked
		.BYTE 0
rat_race_gfx_set:.WORD 0		; ...
		.BYTE $21
		.BYTE 0
		.WORD sprite0_gfx	; unpacked
		.BYTE 9
		.BYTE 0
		.WORD std_gfx		; unpacked
		.BYTE $A6
		.BYTE 4
		.WORD rat_race_obj_gfx	; packed
		.BYTE $A
		.BYTE 4
		.WORD tall_walker_gfx	; packed
		.BYTE 4
		.BYTE 4
		.WORD stick_parts_gfx	; packed
		.BYTE $F
		.BYTE 4
		.WORD some_common_obj	; packed
		.BYTE 0
snake_pit_gfxs:	.WORD 0			; ...
		.BYTE $21
		.BYTE 0
		.WORD sprite0_gfx	; unpacked
		.BYTE 9
		.BYTE 0
		.WORD std_gfx		; unpacked
		.BYTE $C3
		.BYTE 4
		.WORD karnath_lair_obj_gfx ; packed
		.BYTE 0
word_1000_834F:	.WORD 0			; ...
		.BYTE $21
		.BYTE 0
		.WORD sprite0_gfx	; unpacked
		.BYTE 8
		.BYTE 0
		.WORD std_gfx		; unpacked
		.BYTE 1
		.BYTE 1
		.WORD byte_1000_85AA	; packrep1
		.BYTE $C3
		.BYTE 4
		.WORD terra_tubes_obj_gfx ; packed
		.BYTE 0
surf_city_gfx_set:.WORD	0		; ...
		.BYTE $21
		.BYTE 0
		.WORD sprite0_gfx	; unpacked
		.BYTE 8
		.BYTE 0
		.WORD std_gfx		; unpacked
		.BYTE 1
		.BYTE 0
		.WORD byte_1000_CC32	; unpacked
		.BYTE $61
		.BYTE 4
		.WORD surf_city_obj_gfx	; packed
		.BYTE $22
		.BYTE 4
		.WORD TurboTunnel_Obj_gfx ; packed
		.BYTE $23
		.BYTE 4
		.WORD l1_and_surfcity_gfx ; packed
		.BYTE $A
		.BYTE 4
		.WORD tall_walker_gfx	; packed
		.BYTE 4
		.BYTE 4
		.WORD stick_parts_gfx	; packed
		.BYTE $E
		.BYTE 4
		.WORD some_common_obj	; packed
		.BYTE 0
base_gfx_set_spr:.WORD $EA0		; ...
		.BYTE $16
		.BYTE 0
		.WORD byte_1000_BC65	; unpacked
		.BYTE 0
word_1000_8390:	.WORD $1000		; ...
		.BYTE $FF
		.BYTE 4
		.WORD byte_1000_87C4	; packed
		.BYTE 0
volkmire_inf_gfx_set:.WORD $1000	; ...
		.BYTE $FF
		.BYTE 4
		.WORD volkmire_inf_bkg_gfx ; packed
		.BYTE 0
word_1000_839E:	.WORD $1000		; ...
		.BYTE $D4
		.BYTE 4
		.WORD byte_1000_A6B2	; packed
		.BYTE 0
large_planet_gfx_set:.WORD $1000	; ...
		.BYTE $FF
		.BYTE 4
		.WORD large_planet_gfx	; packed
		.BYTE 0
base_gfx_set_bkg:.WORD $1EF0		; ...
					; $1ef0	- vram adress
		.BYTE 4			; times
		.BYTE 3			; type
		.WORD byte_1000_873C	; packrep3
		.BYTE 2
		.BYTE 2
		.WORD byte_1000_875C	; packrep2
		.BYTE $A
		.BYTE 3
		.WORD byte_1000_876C	; packrep3
		.BYTE 1
		.BYTE 1
		.WORD byte_1000_87BC	; packrep1
		.BYTE 0
level_end_gfx_set:.WORD	0		; ...
		.BYTE $30
		.BYTE 0
		.WORD byte_1000_BE55	; unpacked
		.BYTE 0

byte_1000_83C6:
 incbin	gfx\byte_83C6.3
byte_1000_83DE:
 incbin	gfx\byte_83DE.3
byte_1000_846E:
 incbin	gfx\byte_846E.1

; byte_1000_83C6
; byte_1000_83DE
; byte_1000_846E
plan_spr_posY:	.BYTE $36		; ...
plan_spr_posX:	.BYTE $48		; ...
		.BYTE $71, $3D,	$6E, $68, $AB, $63, $59, $30, $8A, $BF,	$9D, $30, $A2
		.BYTE $76, $6D,	$A2, $75, $3D, $8C, $70, $50, $7E, $81,	$78, $10, $BF
vram_adr_h:	.BYTE $F		; ...
vram_adr_l:	.BYTE $E0, $23,	$62, $23, $42, $23, $22, $23, 2, $22, $E2, $22,	$C2 ; ...

; =============== S U B	R O U T	I N E =======================================

; мигание точки	положения жаб на
; карте	плана перед началом уровня

planA_spr_blink:			; ...
		LDA	Level_ID	; BANK0:D620
		ASL	A
		TAX
		LDA	plan_spr_posY,X
		STA	Sprites_Ypos
		SEC
		SBC	#3
		STA	sprite2_Ypos
		LDA	#$40
		STA	Sprites_Adress
		STA	sprite2_adress
		LDA	plan_spr_posX,X
		STA	Sprites_Xpos
		CLC
		ADC	#3
		STA	sprite2_Xpos
		LDY	#1

loc_1000_858E:				; ...
		TYA
		ASL	A
		ASL	A
		TAX
		TYA
		STA	Sprites_Attrib,X
		LDA	FrameCounter
		AND	#8
		BNE	loc_1000_85A1
		LDA	Lives_Player1,Y	; кол-во жизней	(сердечек)
		BPL	loc_1000_85A6

loc_1000_85A1:				; ...
		LDA	#$F8
		STA	Sprites_Ypos,X

loc_1000_85A6:				; ...
		DEY
		BPL	loc_1000_858E
		RTS
; End of function planA_spr_blink

; ---------------------------------------------------------------------------
byte_1000_85AA:
 incbin	gfx\byte_85AA.1
level1_lift_gfx:
 incbin	gfx\level1_lift.chr

; byte_1000_85AA
; level1_lift_gfx

; =============== S U B	R O U T	I N E =======================================


ropes:					; ...
		LDX	#$21		; BANK2:C9A2
		LDY	#2		; wookie_hole_ropes_gfx
		JSR	jump_from_bank1
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	tmp_var_1F
		LSR	A
		LSR	A
		LDY	Obj_various_cnt,X
		BPL	loc_1000_85EB
		STA	tmp_var_1F
		LDA	#$40
		SEC
		SBC	tmp_var_1F

loc_1000_85EB:				; ...
		LDY	#0
		STY	previous_bankID
		STY	tmp_var_16
		LDY	tmp_var_22
		SEC
		SBC	#2
		BCS	loc_1000_85FA
		LDA	#0

loc_1000_85FA:				; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		SEC
		SBC	players_obj_un5,Y
		BCS	loc_1000_8604
		DEC	tmp_var_16

loc_1000_8604:				; ...
		CLC
		ADC	Objects_Zpos_L,Y
		STA	Objects_Zpos_L,Y
		LDA	tmp_var_16
		ADC	Objects_Zpos_H,Y
		STA	Objects_Zpos_H,Y
		LDA	tmp_var_15	;  / Object Counter / various tmp
		STA	players_obj_un5,Y
		RTS
; End of function ropes

; ---------------------------------------------------------------------------
waterfall_tiles:
 incbin	gfx\waterfall_anim.chr
; waterfall_tiles

; =============== S U B	R O U T	I N E =======================================


waterfall_animation:			; ...
		LDA	#$17
		STA	bkg_upd_buff_cnt ; X * 4 times
		LDA	#$D0
		STA	wait_after_bkg_upd_cnt
		LDA	#$86
		STA	upd_gfx_flag2	; what to update - attrib,pal or someelse
		LDA	level1_some_cnt
		ROR	A
		ROR	A
		ROR	A
		AND	#$C0
		TAY
		LDX	#$60

loc_1000_872F:				; ...
		LDA	waterfall_tiles,Y
		STA	scroll_tilemap_buff,X
		INY
		INX
		CPX	#$A0
		BNE	loc_1000_872F
		RTS
; End of function waterfall_animation

; ---------------------------------------------------------------------------
byte_1000_873C:
 incbin	gfx\byte_873C.3
byte_1000_875C:
 incbin	gfx\byte_875C.2
byte_1000_876C:
 incbin	gfx\byte_876C.3
byte_1000_87BC:
 incbin	gfx\byte_87BC.1
byte_1000_87C4:
 incbin	gfx\byte_87C4.4

; byte_1000_873C
; byte_1000_875C
; byte_1000_876C
; byte_1000_87BC
; byte_1000_87C4

; =============== S U B	R O U T	I N E =======================================


inferno_race_start_anim:		; ...
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDY	#0

loc_1000_8EFD:				; ...
		INC	Objects_cnt2,X
		LDA	Objects_cnt2,X
		CLC
		ADC	Objects_Anim_Ptr,X ; оффсет чтения анимации
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		LDA	Objects_AnimID,X ; номер движения для запуска
		ADC	#0
		AND	#3
		STA	Objects_AnimID,X ; номер движения для запуска
		STA	gfx_buff_adr_h,Y
		CMP	#2
		LDA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		BCC	loc_1000_8F2C
		LDA	gfx_buff_adr_h,Y
		CMP	#2
		BNE	loc_1000_8EFD
		LDA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		CMP	#$D0
		BCS	loc_1000_8EFD

loc_1000_8F2C:				; ...
		STA	gfx_buff_adr_l,Y
		AND	#7
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	gfx_buff_adr_l,Y
		ASL	A
		AND	#$F0
		ORA	tmp_var_15	;  / Object Counter / various tmp
		STA	gfx_buff_adr_l,Y
		LDA	gfx_buff_adr_h,Y
		ROL	A
		ORA	#$10
		STA	gfx_buff_adr_h,Y
		STY	tmp_var_15	;  / Object Counter / various tmp
		LDA	gfx_buff_adr_l,Y
		CLC
		ADC	#<anim_tiles	; #$8FE9
		STA	tmp_var_19
		LDA	gfx_buff_adr_h,Y
		AND	#$F
		ADC	#>anim_tiles	; #$8FE9
		STA	tmp_var_1A
		LDA	Objects_AnimID,X ; номер движения для запуска
		CMP	#2
		BNE	loc_1000_8F78
		LDA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		CMP	#$50
		BCC	loc_1000_8F78
		LDA	gfx_buff_adr_l,Y
		ADC	#$8F
		STA	gfx_buff_adr_l,Y
		LDA	gfx_buff_adr_h,Y
		ADC	#4		; +48f?
		STA	gfx_buff_adr_h,Y

loc_1000_8F78:				; ...
		LDA	gfx_buff_adr_l,Y
		CLC
		ADC	#$8B
		STA	tmp_var_1B
		LDA	gfx_buff_adr_h,Y
		AND	#$F
		ADC	#$95		; #$958B ?
		STA	tmp_var_1C
		LDY	#8
		LDA	Objects_cnt3,X
		LDX	#0
		CMP	#$20
		BCC	loc_1000_8F9F
		INX
		CMP	#$40
		BCC	loc_1000_8F9F
		INX
		CMP	#$68
		BCC	loc_1000_8F9F
		INX

loc_1000_8F9F:				; ...
		LDA	(tmp_var_1B),Y
		AND	byte_1000_8FD9,X
		STA	tmp_var_16
		LDA	(tmp_var_19),Y
		AND	byte_1000_8FDD,X
		ORA	tmp_var_16
		PHA
		LDY	#0
		LDA	(tmp_var_1B),Y
		AND	byte_1000_8FE1,X
		STA	tmp_var_16
		LDA	(tmp_var_19),Y
		AND	byte_1000_8FE5,X
		ORA	tmp_var_16
		LDY	tmp_var_15	;  / Object Counter / various tmp
		STA	gfx_buff_dat1,Y
		PLA
		STA	gfx_buff_dat2,Y
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		INY
		INY
		INY
		INY
		CPY	#$28
		BEQ	loc_1000_8FD4
		JMP	loc_1000_8EFD
; ---------------------------------------------------------------------------

loc_1000_8FD4:				; ...
		LDA	#$80
		STA	extra_vblank_flags ; $80-extra vblank; 1-parallax animations
		RTS
; End of function inferno_race_start_anim

; ---------------------------------------------------------------------------
byte_1000_8FD9:	.BYTE $BE, $9A,	$12, 0	; ...
byte_1000_8FDD:	.BYTE $41, $65,	$ED, $FF ; ...
byte_1000_8FE1:	.BYTE $DB, $D1,	$11, 0	; ...
byte_1000_8FE5:	.BYTE $24, $2E,	$EE, $FF ; ...
anim_tiles:
 incbin	gfx\inferno_anim.chr
volkmire_inf_bkg_gfx:
 incbin	gfx\volkm_inf_bkg.4
large_planet_gfx:
 incbin	gfx\large_planet.4
byte_1000_A6B2:
 incbin	gfx\byte_A6B2.4
sprite0_gfx:
 incbin	gfx\sprite0.chr
std_gfx:
 incbin	gfx\game_std.chr
level1_obj_gfx:
 incbin	gfx\level1_obj.4
l1_and_surfcity_gfx:
 incbin	gfx\levels1_5_obj.4
tall_walker_gfx:
 incbin	gfx\tall_walker.4
stick_parts_gfx:
 incbin	gfx\stick.4
some_common_obj:
 incbin	gfx\common.4
byte_1000_BC65:
 incbin	gfx\byte_BC65.chr
byte_1000_BDC5:
 incbin	gfx\byte_BDC5.chr
byte_1000_BE25:
 incbin	gfx\byte_BE25.chr
byte_1000_BE55:
 incbin	gfx\byte_BE55.chr
terra_tubes_obj_gfx:
 incbin	gfx\terratubes_obj.4
surf_city_obj_gfx:
 incbin	gfx\surfcity_obj.4
byte_1000_CC32:
 incbin	gfx\byte_CC32.chr
karnath_lair_obj_gfx:
 incbin	gfx\karnathl_obj.4
revolution_obj_gfx:
 incbin	gfx\revolution_obj.4
TurboTunnel_Obj_gfx:
 incbin	gfx\turbotunnel_obj.4
rat_race_obj_gfx:
 incbin	gfx\ratrace_obj.4
level2_obj_gfx:
 incbin	gfx\level2_obj.4
snowman_gfx:
 incbin	gfx\snowman.4
level4_obj_gfx:
 incbin	gfx\level4_obj.4
level4_obj_gfx2:
 incbin	gfx\level4_obj2.4
level1_boss_gfx2:
 incbin	gfx\l1_boss2.chr

; anim_tiles
; volkmire_inf_bkg_gfx
; large_planet_gfx
; byte_1000_A6B2
; sprite0_gfx
; std_gfx
; level1_obj_gfx
; l1_and_surfcity_gfx
; tall_walker_gfx
; stick_parts_gfx
; some_common_obj
; byte_1000_BC65
; byte_1000_BDC5
; byte_1000_BE25
; byte_1000_BE55
; terra_tubes_obj_gfx
; surf_city_obj_gfx
; byte_1000_CC32
; karnath_lair_obj_gfx
; revolution_obj_gfx
; TurboTunnel_Obj_gfx
; rat_race_obj_gfx
; level2_obj_gfx
; snowman_gfx
; level4_obj_gfx
; level4_obj_gfx2
; level1_boss_gfx2
; ---------------------------------------------------------------------------

locret_1000_FF65:			; ...
		RTI
; ---------------------------------------------------------------------------
bank1_end:
 .PAD $FF78,$FF
; bank1_end
; ---------------------------------------------------------------------------
		STA	banks_ids1+3
		JSR	bank1_end
		LDA	#0
		STA	banks_ids1
		RTS
; ---------------------------------------------------------------------------
		STA	prev_bank_id_m	; saves	mirror,	when jump from bank 0 to bank3 to music	f
		AND	#$10
		ORA	#3
		TAY
		STA	banks_ids1,Y
		JSR	bank1_end
		LDA	prev_bank_id_m	; saves	mirror,	when jump from bank 0 to bank3 to music	f
		TAY
		STA	banks_ids1,Y
		RTS
; ---------------------------------------------------------------------------

NMI1:					; ...
		STX	NMI_Xreg_saver
		STA	NMI_Areg_saver
		LDA	#1
		LDX	#0
		STX	banks_ids1
		JMP	locret_1000_FF65
; ---------------------------------------------------------------------------
		LDX	NMI_Xreg_saver
		LDA	previous_bankID_NMI
		TAY
		STA	banks_ids1,Y
		LDY	NMI_Yreg_saver
		LDA	NMI_Areg_saver
		RTI
; ---------------------------------------------------------------------------
banks_ids1:	.BYTE 0, 1, 2, 3, 4, 5,	6, 7, 8, 9, $A,	$B, $C,	$D, $E,	$F, $10, $11, $12, $13,	$14, $15, $16, $17 ; ...

; =============== S U B	R O U T	I N E =======================================


jump_from_bank1:			; ...
		LDA	#0
		ORA	#1
		STA	previous_bankID
		LDA	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		PHA
		STX	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		LDA	banks_ids1,Y
		STA	banks_ids1,Y
		JSR	sub_1000_8000
		LDY	previous_bankID
		PLA
		STA	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		LDA	banks_ids1,Y
		STA	banks_ids1,Y
		RTS
; End of function jump_from_bank1

; ---------------------------------------------------------------------------

wait1:					; ...
		DEX
		BNE	wait1
		DEY
		BNE	wait1
		RTS
; ---------------------------------------------------------------------------

loc_1000_FFF2:				; ...
		LDA	#0
		STA	banks_ids1
		JMP	loc_1000_FFF2
; ---------------------------------------------------------------------------
		.WORD NMI1
		.WORD loc_1000_FFF2
		.WORD locret_1000_FF65
; end of 'BANK1'

.base $8000
; ===========================================================================

; Segment type:	Pure code
		;.segment BANK2

; =============== S U B	R O U T	I N E =======================================


sub_2000_8000:				; ...
		JMP	(JumpTable_ptr_main) ; указатель на функцию при	переходе в другой банк
; End of function sub_2000_8000

; ---------------------------------------------------------------------------
		JMP	gfx_animations_prepare
; ---------------------------------------------------------------------------
		JMP	unpack_tiles_bank2
; ---------------------------------------------------------------------------
		JMP	loc_2000_EE78
; ---------------------------------------------------------------------------
		JMP	sub_2000_EE65
; ---------------------------------------------------------------------------
		JMP	sub_2000_ECBE
; ---------------------------------------------------------------------------
		JMP	level_moving
; ---------------------------------------------------------------------------
		JMP	loc_2000_F7C9
; ---------------------------------------------------------------------------
		JMP	revolution_unkf
; ---------------------------------------------------------------------------
		JMP	some_levels_init_part?
; ---------------------------------------------------------------------------
		JMP	loc_2000_F845
; ---------------------------------------------------------------------------
		JMP	wookie_hole_ropes_gfx
; ---------------------------------------------------------------------------
pal_sbc_values:	.BYTE $10, $10,	$30, $20, $10, 0, 0, 0,	0, 0, $FF, $FF ; ...

 include gfx\rash.asm

; rash_gfx_1
shadow_tbl?:	.BYTE $14,$13,$13,$12,$11,$11,$10,$10, $F, $E, $E, $D, $D, $C, $B, $B, $A, $A,	9,  9,	8,  8,	7 ; ...
		.BYTE	7,  7,	6,  6,	5,  5,	5,  4,	4,  4,	3,  3,	3,  2,	2,  2,	2,  2,	1,  1,	1,  1,	1
		.BYTE	1,  0,	0,  0,	0,  0,	0,  0,	0,  0,	0,  0,	0,  0,	0,  0,	0,  0,	0,  1,	1,  1,	1
		.BYTE	1,  1,	2,  2,	2,  2,	2,  3,	3,  3,	4,  4,	4,  5,	5,  5,	6,  6,	7,  7,	7,  8,	8
		.BYTE	9,  9, $A, $A, $B, $B, $C, $D, $D, $E, $E, $F,$10,$10,$11,$11,$12,$13,$13,$14,$15,$16,$16
		.BYTE $17,$18,$19,$19,$1A,$1B,$1C,$1D,$1D,$1E,$1F,$20,$21,$22,$23,$23,$24,$25,$26,$27,$28,$29,$2A
		.BYTE $2B,$2C,$2D,$2E,$2F,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$3A,$3B,$3C,$3D,$3E,$3F,$40,$41
		.BYTE $42,$43,$45,$46,$47,$48,$49,$4A,$4B,$4C,$4D,$4F,$50,$51,$52,$53,$54,$55,$56,$57,$59,$5A,$5B

; =============== S U B	R O U T	I N E =======================================


revolution_unkf:			; ...
		LDX	Object_RamSlotID_tmp ; BANK0:8818
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$BF
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	Objects_Xpos_L,X
		SEC
		SBC	global_var2
		TAY
		LDA	Objects_Xpos_H,X
		AND	#1
		STA	Objects_Xpos_H,X
		SBC	global_var3
		ROR	A
		TYA
		BCS	loc_2000_C990
		SBC	#$49
		BCC	loc_2000_C983
		TAY
		LDA	shadow_tbl?,Y
		ADC	#$25
		BNE	loc_2000_C99C	; jump

loc_2000_C983:				; ...
		LDY	#$40
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$80
		BEQ	loc_2000_C99C
		LDA	#$FF
		BNE	loc_2000_C99C	; jump

loc_2000_C990:				; ...
		EOR	#$FF
		SBC	#$48
		BCC	loc_2000_C983
		TAY
		LDA	#$DB
		SBC	shadow_tbl?,Y

loc_2000_C99C:				; ...
		STA	Objects_X_shadow,X
		STY	tmp_var_15	;  / Object Counter / various tmp
		RTS
; End of function revolution_unkf


; =============== S U B	R O U T	I N E =======================================


wookie_hole_ropes_gfx:			; ...
		LDX	Object_RamSlotID_tmp ; BANK1:85D6
		LDA	#0
		STA	Objects_cnt2,X
		TAY
		LDA	objects_some_anim,X ; some obj X speed
		SEC
		SBC	Objects_Xpos_L,X
		STA	tmp_var_1F
		BEQ	loc_2000_C9C2
		DEC	objects_some_anim,X ; some obj X speed
		BCS	loc_2000_C9C2
		LDY	#$F0
		INC	objects_some_anim,X ; some obj X speed
		INC	objects_some_anim,X ; some obj X speed

loc_2000_C9C2:				; ...
		LDA	tmp_var_1F
		LSR	A
		ROR	Objects_cnt2,X
		LSR	A
		ROR	Objects_cnt2,X
		LSR	A
		ROR	Objects_cnt2,X
		LSR	A
		ROR	Objects_cnt2,X
		STA	Obj_various_cnt,X
		CLC
		TYA
		ADC	Obj_various_cnt,X
		STA	Obj_various_cnt,X
		CMP	#$10
		BCC	loc_2000_C9E7
		EOR	#$FF
		ADC	#0

loc_2000_C9E7:				; ...
		TAY
		LDA	byte_2000_C9EF,Y
		STA	Objects_cnt3,X
		RTS
; End of function wookie_hole_ropes_gfx

; ---------------------------------------------------------------------------
byte_2000_C9EF:	.BYTE $27, $27,	$28, $28, $29, $29, $29, $29, $29, $29,	$29, $29, $29 ;	...
		.BYTE $29, $29,	$29, $29, $D0, $D0, $D1, $D2, $D4, $D4,	$D4, $D4, $D4
; ---------------------------------------------------------------------------

loc_2000_CA09:				; ...
		LDA	#0
		STA	tmp_var_00
		RTS

; =============== S U B	R O U T	I N E =======================================


unpack_tiles_bank2:			; ...
		LDX	tmp_var_15	;  / Object Counter / various tmp
		LDA	#1
		STA	tmp_var_00
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDA	archives_ptrs_bank2,X
		STA	tmp_var_01
		LDA	archives_ptrs_bank2+1,X
		STA	tmp_var_02
		LDY	#0
		LDA	(tmp_var_01),Y
		STA	tmp_var_03
		INY
		LDA	(tmp_var_01),Y
		STA	tmp_var_04
		TYA
		SEC
		ADC	tmp_var_01
		STA	tmp_var_01
		LDA	tmp_var_02
		ADC	#0
		STA	tmp_var_02

unpack_next_archive_bank2:		; ...
		LDY	#0
		LDA	(tmp_var_01),Y
		BEQ	loc_2000_CA09
		STA	tmp_var_05
		INY
		LDA	(tmp_var_01),Y
		STA	tmp_var_08
		INY
		LDA	(tmp_var_01),Y
		STA	tmp_var_06	; music	ptr
		INY
		LDA	(tmp_var_01),Y
		STA	tmp_var_07
		TYA
		SEC
		ADC	tmp_var_01
		STA	tmp_var_01
		LDA	tmp_var_02
		ADC	#0
		STA	tmp_var_02
		LDY	#0
		LDA	(tmp_var_06),Y	; music	ptr
		STA	tmp_var_1B
		INY
		LDA	(tmp_var_06),Y	; music	ptr
		STA	tmp_var_1C
		INY
		LDA	tmp_var_04
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	tmp_var_03
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#0
		STA	tmp_var_1A
		LDA	tmp_var_05
		ASL	A
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		STA	tmp_var_19
		CLC
		ADC	tmp_var_03
		STA	tmp_var_03
		LDA	tmp_var_1A
		ADC	tmp_var_04
		STA	tmp_var_04
		LDA	#0
		SEC
		SBC	tmp_var_19
		STA	tmp_var_19
		LDA	#0
		SBC	tmp_var_1A
		STA	tmp_var_1A

loc_2000_CA9D:				; ...
		LDA	(tmp_var_06),Y	; music	ptr
		INY
		BNE	loc_2000_CAA4
		INC	tmp_var_07

loc_2000_CAA4:				; ...
		CMP	tmp_var_1B
		BEQ	loc_2000_CABE
		CMP	tmp_var_1C
		BEQ	loc_2000_CABA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		INC	tmp_var_19
		BNE	loc_2000_CA9D
		INC	tmp_var_1A
		BNE	loc_2000_CA9D

loc_2000_CAB7:				; ...
		JMP	unpack_next_archive_bank2
; ---------------------------------------------------------------------------

loc_2000_CABA:				; ...
		LDX	#$FF
		BNE	loc_2000_CAC0

loc_2000_CABE:				; ...
		LDX	#0

loc_2000_CAC0:				; ...
		LDA	(tmp_var_06),Y	; music	ptr
		STA	tmp_var_05
		INY
		BNE	loc_2000_CAC9
		INC	tmp_var_07

loc_2000_CAC9:				; ...
		STX	PPU_DATA	; VRAM I/O Register (RW)
		INC	tmp_var_19
		BNE	loc_2000_CAD4
		INC	tmp_var_1A
		BEQ	loc_2000_CAB7

loc_2000_CAD4:				; ...
		DEC	tmp_var_05
		BNE	loc_2000_CAC9
		BEQ	loc_2000_CA9D
; End of function unpack_tiles_bank2

; ---------------------------------------------------------------------------
archives_ptrs_bank2:.WORD word_2000_CAE6 ; ...
		.WORD word_2000_CAED
		.WORD word_2000_CAF4
		.WORD word_2000_CAFF
		.WORD word_2000_CB0A
		.WORD word_2000_CB15
word_2000_CAE6:	.WORD $1000		; ...
		.BYTE $BF
		.BYTE 4
		.WORD toads_zastavki_gfx
		.BYTE 0
word_2000_CAED:	.WORD 0			; ...
		.BYTE $FF
		.BYTE 4
		.WORD bosses_zastavki_gfx
		.BYTE 0
word_2000_CAF4:	.WORD $1400		; ...
		.BYTE $30
		.BYTE 4
		.WORD small_spaceship_gfx
		.BYTE $15
		.BYTE 4
		.WORD pimple_gfx
		.BYTE 0
word_2000_CAFF:	.WORD $1000		; ...
		.BYTE $F5
		.BYTE 4
		.WORD dark_queen_face_gfx
		.BYTE 7
		.BYTE 4
		.WORD dark_queen_face2_gfx
		.BYTE 0
word_2000_CB0A:	.WORD $5E0		; ...
		.BYTE $12
		.BYTE 4
		.WORD big_tornado_gfx
		.BYTE $15
		.BYTE 4
		.WORD pimple_gfx
		.BYTE 0
word_2000_CB15:	.WORD $D80		; ...
		.BYTE $F
		.BYTE 4
		.WORD angelika_gfx
		.BYTE 0

angelika_gfx:
 incbin	gfx\angelika.4
pimple_gfx:
 incbin	gfx\pimple.4
big_tornado_gfx:
 incbin	gfx\bigtornado.4
toads_zastavki_gfx:
 incbin	gfx\toads_intro.4
bosses_zastavki_gfx
 incbin	gfx\bosses_intro.4
small_spaceship_gfx:
 incbin	gfx\small_spaceship.4
dark_queen_face_gfx:
 incbin	gfx\dq_face.4
dark_queen_face2_gfx:
 incbin	gfx\dq_face2.4

; angelika_gfx
; pimple_gfx
; big_tornado_gfx
; toads_zastavki_gfx
; bosses_zastavki_gfx
; small_spaceship_gfx
; dark_queen_face_gfx
; dark_queen_face2_gfx

; =============== S U B	R O U T	I N E =======================================


jump_from_bank2_:			; ...
		JSR	jump_from_bank2
		LDA	#0
		STA	previous_bankID
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		RTS
; End of function jump_from_bank2_


; =============== S U B	R O U T	I N E =======================================


play_sound_for_bank2?:			; ...
		STA	snd_tmp_var_39
		LDY	#3
		JMP	jump_from_bank2_
; End of function play_sound_for_bank2?


; =============== S U B	R O U T	I N E =======================================


sub_2000_ECBE:				; ...
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$80
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		JMP	loc_2000_EF0D
; End of function sub_2000_ECBE

; ---------------------------------------------------------------------------
off_2000_ECCB:	.WORD byte_2000_ECEF	; ...
		.WORD byte_2000_ECFA
		.WORD byte_2000_ED11
		.WORD byte_2000_ED28
		.WORD byte_2000_ED36
		.WORD byte_2000_ED3E
		.WORD byte_2000_ED55
		.WORD byte_2000_ED5A
		.WORD byte_2000_ED77
		.WORD byte_2000_ED7C
		.WORD byte_2000_ED99
		.WORD byte_2000_EDAA
		.WORD byte_2000_EDC7
		.WORD byte_2000_EDD2
		.WORD byte_2000_EDD7
		.WORD byte_2000_EDEE
		.WORD byte_2000_EE0B
		.WORD byte_2000_EE22
byte_2000_ECEF:	.BYTE $80, $86,	0, $B, $59, $C0, 5, $3B, 0, 1, 0 ; ...
byte_2000_ECFA:	.BYTE $80, $46,	$80, 8,	$39, $C0, $A, $36, $80,	9, $52,	$40, 7,	$36, $80, 8, $69, $C0, $A, $1C,	$80, 2,	0 ; ...
byte_2000_ED11:	.BYTE $80, $86,	0, 6, $42, $40,	$C, $26, 0, $B,	$69, $C0, $A, $96, $80,	8, $29,	$C0, 5,	$AB, 0,	1, 0 ; ...
byte_2000_ED28:	.BYTE $80, $99,	$C0, 5,	$26, 0,	6, $52,	$40, $C, $8B, 0, 1, 0 ;	...
byte_2000_ED36:	.BYTE $80, $29,	$C0, $A, $AC, $80, 2, 0	; ...
byte_2000_ED3E:	.BYTE $80, $56,	0, $B, $59, $C0, 5, $26, 0, 6, $32, $40, $C, $36, 0, $B, $39, $C0, 5, $1B, 0, 1, 0 ; ...
byte_2000_ED55:	.BYTE $F0, $60,	$80, 2,	0 ; ...
byte_2000_ED5A:	.BYTE $80, $16,	0, 6, $22, $40,	$C, $36, 0, $B,	$29, $C0, 5, $26, 0, 6,	$22, $40, $C, $36, 0, $B, $49, $C0, $A,	$9C ; ...
		.BYTE $80, 2, 0
byte_2000_ED77:	.BYTE $F0, $60,	0, 1, 0	; ...
byte_2000_ED7C:	.BYTE $80, $46,	0, $B, $49, $C0, $A, $36, $80, 9, $22, $40, $C,	$96, 0,	6, $32,	$40, 7,	$26, $80, 8, $79, $C0, 5, $3B ;	...
		.BYTE 0, 1, 0
byte_2000_ED99:	.BYTE $80, $46,	$80, 9,	$22, $40, 7, $26, $80, 8, $49, $C0, $A,	$5C, $80, 2, 0 ; ...
byte_2000_EDAA:	.BYTE $80, $76,	0, 6, $22, $40,	7, $66,	$80, 8,	$69, $C0, 5, $46, 0, $B, $29, $C0, $A, $36, $80, 9, $42, $40, $C, $9B ;	...
		.BYTE 0, 1, 0
byte_2000_EDC7:	.BYTE $80, $A6,	$80, 8,	$79, $C0, $A, $1C, $80,	2, 0 ; ...
byte_2000_EDD2:	.BYTE $80, $BB,	0, 1, 0	; ...
byte_2000_EDD7:	.BYTE $80, $26,	$80, 8,	$29, $C0, $A, $36, $80,	9, $22,	$40, 7,	$26, $80, 8, $29, $C0, $A, $4C,	$80, 2,	0 ; ...
byte_2000_EDEE:	.BYTE $80, $16,	0, $B, $99, $C0, 5, $26, 0, 6, $72, $40, $C, $36, 0, $B, $89, $C0, 5, $26, 0, 6, $A2, $40, 7, $8C, $80 ; ...
		.BYTE 2, 0
byte_2000_EE0B:	.BYTE $80, $16,	0, 6, $A2, $40,	$C, $96, 0, $B,	$39, $C0, $A, $16, $80,	8, $99,	$C0, 5,	$2B, 0,	1, 0 ; ...
byte_2000_EE22:	.BYTE $80, $BC,	$80, 2,	0 ; ...
byte_2000_EE27:	.BYTE $16		; ...
byte_2000_EE28:	.BYTE $12, $16,	$10, $12, 2, $28, $16, $16, 9, $27, 6, $27, $17, $28, $A, $16, $F, $16,	6, $26,	$16, $28, 8, 9,	$F, $18	; ...
		.BYTE $F, 5, $F, 0, $F,	$14, 4,	$10, 0,	$1C, $C, $28, $15, $12,	$F, $1C, $F, $15, $F

; =============== S U B	R O U T	I N E =======================================


set_some_ptr_by_life:			; ...
		ASL	A
		TAY
		LDA	off_2000_ECCB,Y
		STA	tmp_var_19
		LDA	off_2000_ECCB+1,Y
		STA	tmp_var_1A
		LDY	Objects_various_flags,X	; для пушек ID прицепленного объекта

locret_2000_EE64:			; ...
		RTS
; End of function set_some_ptr_by_life


; =============== S U B	R O U T	I N E =======================================


sub_2000_EE65:				; ...
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	karnath_gfx_base_add
		LSR	A
		ADC	karnath_gfx_base
		STA	karnath_gfx_base
		LDA	objects_some_anim,X ; some obj X speed
		BEQ	loc_2000_EECA
		LDA	#0
		STA	some_ptr_saver_h

loc_2000_EE78:				; ...
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	Objects_Ypos_H,X
		CMP	#$1F
		BEQ	loc_2000_EECA
		LDY	pal_reduce_value ; dec to color	value
		BNE	locret_2000_EE64
		LDY	upd_gfx_flag2	; what to update - attrib,pal or someelse
		CPY	#$80
		BNE	locret_2000_EE64
		CMP	#$40
		BCC	loc_2000_EEA9
		LDA	palette_ram+1
		AND	#$F
		ORA	#$20
		STA	palette_ram+$1F
		EOR	#$30
		STA	palette_ram+$1E
		LDA	#$1F
		STA	Objects_Ypos_H,X
		LDA	#$10
		STA	pal_vram_upd_off ; BKG=$00, SPR=$10
		LDA	#$84
		STA	upd_gfx_flag2	; what to update - attrib,pal or someelse
		RTS
; ---------------------------------------------------------------------------

loc_2000_EEA9:				; ...
		ASL	A
		TAY
		LDA	byte_2000_EE27,Y
		STA	palette_ram+1
		STA	palette_ram+7
		LDA	byte_2000_EE28,Y
		STA	palette_ram+3
		STA	palette_ram+5
		LDA	#0
		STA	pal_vram_upd_off ; BKG=$00, SPR=$10
		LDA	#$84
		STA	upd_gfx_flag2	; what to update - attrib,pal or someelse
		LDA	Objects_Ypos_H,X
		ORA	#$40
		STA	Objects_Ypos_H,X
		RTS
; ---------------------------------------------------------------------------

loc_2000_EECA:				; ...
		LDA	objects_some_anim,X ; some obj X speed
		BEQ	loc_2000_EF39
		LDA	Objects_Ypos_L,X
		CMP	#$D8
		BCS	loc_2000_EEF6
		STA	Objects_Life,X
		JSR	set_some_ptr_by_life
		LDA	(tmp_var_19),Y
		STA	Objects_X_speed,X
		CMP	#$C0
		LDA	#2
		BCC	loc_2000_EEE9
		LDA	#4

loc_2000_EEE9:				; ...
		STA	karnath_gfx_base_add
		INC	Objects_various_flags,X	; для пушек ID прицепленного объекта
		LDA	#$D8
		STA	Objects_Ypos_L,X
		JSR	sub_2000_F1CE

loc_2000_EEF6:				; ...
		LDA	FrameCounter
		AND	#1
		BNE	loc_2000_EF0D
		DEC	objects_some_anim,X ; some obj X speed
		BNE	loc_2000_EF0D
		LDA	#$D8
		STA	Objects_Ypos_L,X
		LDX	#$15
		LDA	#$22
		JMP	play_sound_for_bank2?
; ---------------------------------------------------------------------------

loc_2000_EF0D:				; ...
		LDA	#$98
		STA	Objects_gfx_frame,X
		LDA	FrameCounter
		AND	#4
		ORA	#$D8
		STA	Objects_Ypos_L,X
		LDA	Objects_Xpos_L,X
		AND	#$1F
		CMP	#$10
		BEQ	loc_2000_EF2C
		INC	Objects_gfx_frame,X
		BCC	loc_2000_EF2C
		INC	Objects_gfx_frame,X

loc_2000_EF2C:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	locret_2000_EF38
		LDX	#$C
		LDA	#$21
		JMP	play_sound_for_bank2?
; ---------------------------------------------------------------------------

locret_2000_EF38:			; ...
		RTS
; ---------------------------------------------------------------------------

loc_2000_EF39:				; ...
		LDA	Obj_various_cnt,X
		BEQ	loc_2000_EF41
		JMP	loc_2000_F06C
; ---------------------------------------------------------------------------

loc_2000_EF41:				; ...
		LDA	Objects_cnt3,X
		BEQ	loc_2000_EF49
		JMP	loc_2000_F01A
; ---------------------------------------------------------------------------

loc_2000_EF49:				; ...
		LDA	Objects_TypeID,X
		CMP	#$4C
		BNE	loc_2000_EF57
		LDA	#$7E
		LDX	#$15
		JSR	play_sound_for_bank2?

loc_2000_EF57:				; ...
		LDA	Objects_Life,X
		JSR	set_some_ptr_by_life
		LDA	(tmp_var_19),Y
		BNE	sub_2000_EFA6
		LDA	Objects_TypeID,X
		CMP	#$4D
		BNE	loc_2000_EF95
		INC	LevelCfgAdr_L	; текущий адрес	рома для чтения	объектов уровня
		BNE	loc_2000_EF6E
		INC	LevelCfgAdr_H

loc_2000_EF6E:				; ...
		LDX	#$24
		LDY	#0
		JSR	jump_from_bank2_
		LDA	Camera_Y_pos_H
		CMP	#2
		BNE	locret_2000_EF94
		LDA	restart_point_id
		ASL	A
		ADC	#$12
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDX	#$24
		LDY	#3
		JSR	jump_from_bank2_
		LDA	#$B
		CLC
		ADC	LevelCfgAdr_L	; текущий адрес	рома для чтения	объектов уровня
		STA	LevelCfgAdr_L	; текущий адрес	рома для чтения	объектов уровня
		BCC	locret_2000_EF94
		INC	LevelCfgAdr_H

locret_2000_EF94:			; ...
		RTS
; ---------------------------------------------------------------------------

loc_2000_EF95:				; ...
		LDA	#$F0
		STA	Objects_X_speed,X
		LDA	#$4E
		STA	Objects_TypeID,X
; End of function sub_2000_EE65


; =============== S U B	R O U T	I N E =======================================


sub_2000_EF9F:				; ...
		LDX	#$21
		LDY	#0
		JMP	jump_from_bank2_
; End of function sub_2000_EF9F


; =============== S U B	R O U T	I N E =======================================


sub_2000_EFA6:				; ...
		STA	Objects_cnt3,X
		INY
		INY
		LDA	(tmp_var_19),Y
		STA	Objects_TargetID,X
		DEY
		LDA	(tmp_var_19),Y
		STA	Objects_dir,X	; / angle
		AND	#$40
		BNE	sub_2000_EFE1
		LDA	#$1C
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_dir,X	; / angle
		BNE	loc_2000_EFD2
		LDA	#4
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_X_speed,X
		EOR	#$F0
		BNE	loc_2000_EFD2
		DEC	tmp_var_15	;  / Object Counter / various tmp
		DEC	tmp_var_15	;  / Object Counter / various tmp

loc_2000_EFD2:				; ...
		LDA	Objects_Xpos_L,X
		AND	#$E0
		ORA	tmp_var_15	;  / Object Counter / various tmp
		STA	Objects_Xpos_L,X
		EOR	#$8F
		JMP	loc_2000_F011
; End of function sub_2000_EFA6


; =============== S U B	R O U T	I N E =======================================


sub_2000_EFE1:				; ...
		LDA	#$14
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_dir,X	; / angle
		BPL	loc_2000_EFFC
		LDA	#$1E
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_Zpos_L,X
		SEC
		SBC	#$20
		STA	Objects_Zpos_L,X
		BCS	loc_2000_EFFC
		DEC	Objects_Zpos_H,X

loc_2000_EFFC:				; ...
		LDA	Objects_Zpos_L,X
		AND	#$E0
		ORA	tmp_var_15	;  / Object Counter / various tmp
		STA	Objects_Zpos_L,X
		LDA	#$AF
		SBC	Objects_Zpos_L,X
		STA	Objects_AnimID,X ; номер движения для запуска
		LDA	Objects_Xpos_L,X

loc_2000_F011:				; ...
		STA	Objects_cnt2,X
		INY
		INY
		TYA
		STA	Objects_various_flags,X	; для пушек ID прицепленного объекта

loc_2000_F01A:				; ...
		DEC	Objects_cnt3,X
		LDA	Objects_dir,X	; / angle
		AND	#$40
		BEQ	loc_2000_F041
		LDY	#0
		LDA	Objects_dir,X	; / angle
		ROL	A
		LDA	#1
		BCS	loc_2000_F031
		DEY
		LDA	#$FE

loc_2000_F031:				; ...
		ADC	Objects_Zpos_L,X
		STA	Objects_Zpos_L,X
		TYA
		ADC	Objects_Zpos_H,X
		STA	Objects_Zpos_H,X
		JMP	loc_2000_F046
; ---------------------------------------------------------------------------

loc_2000_F041:				; ...
		JSR	sub_2000_EF9F
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_2000_F046:				; ...
		LDA	#0
		STA	Obj_various_cnt,X
		LDA	Objects_Xpos_L,X
		EOR	Objects_cnt2,X
		AND	#$F8
		BNE	loc_2000_F069
		LDA	#$D8
		SEC
		SBC	Objects_Zpos_L,X
		EOR	Objects_AnimID,X ; номер движения для запуска
		AND	#$F8
		BEQ	loc_2000_F066
		ORA	#1
		BNE	loc_2000_F069

loc_2000_F066:				; ...
		JMP	sub_2000_F1CE
; ---------------------------------------------------------------------------

loc_2000_F069:				; ...
		STA	Obj_various_cnt,X

loc_2000_F06C:				; ...
		LDA	#$D8
		SEC
		SBC	Objects_Zpos_L,X
		STA	tmp_var_17
		LDA	#$1F
		SBC	Objects_Zpos_H,X
		STA	tmp_var_18
		LDA	Objects_TypeID,X
		CMP	#$4C
		BEQ	loc_2000_F09D
		LDA	Objects_dir,X	; / angle
		ADC	#$40
		ROL	A
		LDA	#$B
		BCC	loc_2000_F08E
		LDA	#7

loc_2000_F08E:				; ...
		CMP	Objects_cnt3,X
		BCC	loc_2000_F09D
		LDA	Objects_TargetID,X
		CMP	#5
		BCC	loc_2000_F09D
		JMP	loc_2000_F145
; ---------------------------------------------------------------------------

loc_2000_F09D:				; ...
		LDA	tmp_var_17
		SEC
		SBC	Camera_Y_pos_l	;  / level_position - on v levels
		STA	tmp_var_19
		LDA	tmp_var_18
		SBC	Camera_Y_pos_H
		BEQ	loc_2000_F0C1
		CMP	#1
		BNE	loc_2000_F0B7
		LDA	tmp_var_19
		CMP	#$11
		BCC	loc_2000_F0C1

loc_2000_F0B4:				; ...
		JMP	loc_2000_F145
; ---------------------------------------------------------------------------

loc_2000_F0B7:				; ...
		CMP	#$FF
		BNE	loc_2000_F0B4
		LDA	tmp_var_19
		CMP	#$F0
		BCC	loc_2000_F0B4

loc_2000_F0C1:				; ...
		LDA	obj_slotID_for_scroll
		BEQ	loc_2000_F0CC
		CPX	obj_slotID_for_scroll
		BEQ	loc_2000_F0CC
		JMP	loc_2000_F158
; ---------------------------------------------------------------------------

loc_2000_F0CC:				; ...
		LDA	#0
		STA	obj_scrl_cam_X_h
		LDA	Obj_various_cnt,X
		ROR	A
		BCC	loc_2000_F118
		LDA	Objects_Xpos_L,X
		SEC
		SBC	Camera_X_pos_l	;  / level_position - on h levels
		STA	tmp_var_1A
		LDA	Objects_Xpos_H,X
		SBC	Camera_X_pos_H
		BEQ	loc_2000_F0FC
		CMP	#1
		BNE	loc_2000_F0F2
		LDA	tmp_var_1A
		CMP	#$18
		BCS	loc_2000_F145
		BCC	loc_2000_F0FC

loc_2000_F0F2:				; ...
		CMP	#$FF
		BNE	loc_2000_F145
		LDA	tmp_var_1A
		CMP	#$E8
		BCC	loc_2000_F145

loc_2000_F0FC:				; ...
		LDA	#0
		STA	obj_scrl_cam_X_l
		STA	obj_scrl_vram_inc
		LDA	tmp_var_17
		AND	#$F8
		SEC
		SBC	Camera_Y_pos_l	;  / level_position - on v levels
		CMP	#1
		BCC	loc_2000_F145
		CMP	#$F1
		BCS	loc_2000_F145
		STA	obj_scrl_cam_Y_l
		BNE	loc_2000_F13B

loc_2000_F118:				; ...
		LDA	#1
		STA	obj_scrl_vram_inc
		LDA	#$F0
		STA	obj_scrl_cam_Y_l
		LDA	Objects_Xpos_L,X
		AND	#$F8
		SEC
		SBC	Camera_X_pos_l	;  / level_position - on h levels
		STA	obj_scrl_cam_X_l
		AND	#$F8
		LDA	Objects_Xpos_H,X
		SBC	Camera_X_pos_H
		BEQ	loc_2000_F140
		LDA	obj_scrl_cam_X_l
		BNE	loc_2000_F145

loc_2000_F13B:				; ...
		INC	obj_scrl_cam_X_h
		BNE	loc_2000_F152

loc_2000_F140:				; ...
		LDA	obj_scrl_cam_X_l
		BNE	loc_2000_F152

loc_2000_F145:				; ...
		LDA	#0
		STA	Obj_various_cnt,X
		CPX	obj_slotID_for_scroll
		BNE	loc_2000_F158
		STA	obj_slotID_for_scroll
		BEQ	loc_2000_F158

loc_2000_F152:				; ...
		LDA	obj_slotID_for_scroll
		BNE	loc_2000_F158
		STX	obj_slotID_for_scroll

loc_2000_F158:				; ...
		LDA	Objects_Xpos_L,X
		EOR	Objects_cnt2,X
		AND	#$E0
		STA	tmp_var_1F
		LDA	#$D8
		SEC
		SBC	Objects_Zpos_L,X
		EOR	Objects_AnimID,X ; номер движения для запуска
		ORA	tmp_var_1F
		AND	#$E0
		BEQ	sub_2000_F1CE
		LSR	tmp_var_18
		LDA	tmp_var_17
		ROR	A
		AND	#$F0
		STA	tmp_var_17
		LDA	Objects_Xpos_H,X
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_Xpos_L,X
		LSR	tmp_var_15	;  / Object Counter / various tmp
		ROR	A
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		CMP	#$E
		BCS	sub_2000_F1CE
		CMP	#2
		BCC	sub_2000_F1CE
		ORA	tmp_var_17
		STA	tmp_var_19
		LDA	tmp_var_18
		ORA	#6
		STA	tmp_var_1A
		LDY	#0
		LDA	Objects_TypeID,X
		CMP	#$4D
		BNE	loc_2000_F1C9
		JSR	sub_2000_F1FD
		CMP	(tmp_var_19),Y
		BNE	sub_2000_F1CE
		LDX	#6
		LDY	#7
		JSR	jump_from_bank2_
		LDA	tmp_var_1A
		STA	some_ptr_saver_h
		LDA	tmp_var_19
		STA	some_ptr_saver_l
		LDY	#0
		LDA	(tmp_var_19),Y
		STA	some_dat_saver
		LDA	tmp_var_8d
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		BNE	loc_2000_F1CC

loc_2000_F1C9:				; ...
		JSR	sub_2000_F1FD

loc_2000_F1CC:				; ...
		STA	(tmp_var_19),Y
; End of function sub_2000_EFE1


; =============== S U B	R O U T	I N E =======================================


sub_2000_F1CE:				; ...
		LDA	Objects_Xpos_L,X
		STA	Objects_cnt2,X
		LDA	#$D8
		SEC
		SBC	Objects_Zpos_L,X
		STA	Objects_AnimID,X ; номер движения для запуска
		LDA	Objects_dir,X	; / angle
		ROL	A
		ROL	A
		ROL	A
		AND	#3
		LDY	Objects_TypeID,X
		CPY	#$4C
		BEQ	loc_2000_F1EF
		CLC
		ADC	#4

loc_2000_F1EF:				; ...
		TAY
		LDA	byte_2000_F22F,Y
		STA	Objects_gfx_frame,X
		LDA	byte_2000_F237,Y
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		RTS
; End of function sub_2000_F1CE


; =============== S U B	R O U T	I N E =======================================


sub_2000_F1FD:				; ...
		LDA	(tmp_var_19),Y
		CMP	#5
		BCC	loc_2000_F207
		CMP	#$D
		BCC	locret_2000_F22E

loc_2000_F207:				; ...
		LDA	Objects_cnt3,X
		CMP	#$10
		LDA	Objects_TargetID,X
		BCC	locret_2000_F22E
		LDA	Objects_dir,X	; / angle
		AND	#$C0
		BEQ	loc_2000_F22C
		CMP	#$80
		BEQ	loc_2000_F228
		CMP	#$C0
		BEQ	loc_2000_F224
		LDA	#3
		BNE	locret_2000_F22E

loc_2000_F224:				; ...
		LDA	#4
		BNE	locret_2000_F22E

loc_2000_F228:				; ...
		LDA	#2
		BNE	locret_2000_F22E

loc_2000_F22C:				; ...
		LDA	#1

locret_2000_F22E:			; ...
		RTS
; End of function sub_2000_F1FD

; ---------------------------------------------------------------------------
byte_2000_F22F:	.BYTE  $92, $97, $92, $96, $93,	$95, $93, $94 ;	...
byte_2000_F237:	.BYTE	 0,   0, $40,	0,   0,	  0, $40,   0 ;	...

; =============== S U B	R O U T	I N E =======================================


level_moving:				; ...
		LDA	lvl_moving?
		BEQ	loc_2000_F250
		DEC	lvl_moving?
		LDA	camera_speed?
		INC	camera_speed?
		ROL	A
		BCS	loc_2000_F250
		DEC	camera_speed?
		DEC	camera_speed?

loc_2000_F250:				; ...
		LDA	Level_ID
		CMP	#wookie_hole
		BNE	loc_2000_F284
		LDA	camera_lock_cnt
		BEQ	loc_2000_F26F
		DEC	camera_lock_cnt
		EOR	#$1E
		BNE	loc_2000_F26F
		TAX

loc_2000_F261:				; ...
		INC	Objects_Zpos_L,X
		BNE	loc_2000_F269
		INC	Objects_Zpos_H,X

loc_2000_F269:				; ...
		INX
		CPX	#2
		BNE	loc_2000_F261
		RTS
; ---------------------------------------------------------------------------

loc_2000_F26F:				; ...
		LDA	Camera_Y_pos_H
		CMP	#$1B
		BNE	loc_2000_F278
		JMP	loc_2000_F5AE
; ---------------------------------------------------------------------------

loc_2000_F278:				; ...
		LDA	Camera_Y_pos_l	;  / level_position - on v levels
		ADC	#$10
		STA	Camera_Y_pos_l_2
		JMP	loc_2000_F5F8
; ---------------------------------------------------------------------------

not_bike_level:				; ...
		JMP	loc_2000_F378
; ---------------------------------------------------------------------------

loc_2000_F284:				; ...
		CMP	#SurfCity
		BEQ	check_bikes_for_p1_p2
		CMP	#volkmire_inferno
		BEQ	check_bikes_for_p1_p2
		CMP	#TurboTunnel
		BNE	not_bike_level

check_bikes_for_p1_p2:			; ...
		LDY	#1

check_bikes:				; ...
		LDA	Objects_TypeID,Y
		BEQ	loc_2000_F29E
		LDA	Objects_LinkedObj_ID,Y ; флаг/id присоединённого объекта
		AND	#$40
		BEQ	not_bike_level

loc_2000_F29E:				; ...
		DEY
		BPL	check_bikes
		LDA	stop_scroll_flag
		BEQ	loc_2000_F2B1
		LDX	bikes_speed
		JMP	loc_2000_F345
; ---------------------------------------------------------------------------
		LDX	#$2D		; unused?
		LDY	#0
		JMP	jump_from_bank2
; ---------------------------------------------------------------------------

loc_2000_F2B1:				; ...
		LDA	bikes_speed_sub
		ORA	bikes_speed
		BNE	loc_2000_F2CC
		LDY	Level_ID
		CPY	#SurfCity
		BEQ	loc_2000_F2CC
		CPY	#arctic_caverns
		LDA	#5
		ADC	#0
		STA	music_id_and_play_cnt
		LDX	#$27
		LDY	#0
		JSR	jump_from_bank2_

loc_2000_F2CC:				; ...
		LDY	Level_ID
		CPY	#TurboTunnel
		BEQ	turbotunnel_cam
		CPY	#SurfCity
		BNE	volkmire_cam?

surfcity_spd_by_cam:
		LDA	Camera_X_pos_H
		CMP	#$2F
		LDY	#6
		BCC	loc_2000_F2E4
		INY			; 7
		CMP	#$3D
		BCC	loc_2000_F2E4
		INY			; 8

loc_2000_F2E4:				; ...
		LDA	#4		; surcf	city accelearion
		CLC
		JMP	loc_2000_F326
; ---------------------------------------------------------------------------

volkmire_cam?:				; ...
		LDA	Camera_X_pos_H
		LDY	#2
		CMP	#$26
		BCC	loc_2000_F31D
		INY
		CMP	#$49
		BCC	loc_2000_F31D
		INY
		CMP	#$A8
		BCC	loc_2000_F31D
		INY
		BNE	loc_2000_F30D	; jump

turbotunnel_cam:			; ...
		LDA	#$DD
		CMP	Camera_X_pos_H
		BNE	loc_2000_F309
		LDA	#1
		STA	turbotunnel_X_flag ; =1, if camH=$DD

loc_2000_F309:				; ...
		LDY	turbotunnel_X_flag ; =1, if camH=$DD
		BEQ	loc_2000_F31D

loc_2000_F30D:				; ...
		LDA	music_speed
		CMP	#$B0
		BEQ	loc_2000_F31D
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		AND	#4
		LSR	A
		LSR	A
		ADC	music_speed
		STA	music_speed

loc_2000_F31D:				; ...
		LDX	#1
		LDA	timer_end_music
		BNE	loc_2000_F345
		LDA	#8		; std acceleration
		CLC

loc_2000_F326:				; ...
		ADC	bikes_speed_sub
		STA	bikes_speed_sub
		LDA	bikes_speed
		ADC	#0
		STA	bikes_speed
		TAX
		EOR	bikes_spd_table,Y
		BNE	loc_2000_F345
		STA	bikes_speed_sub	; clear	accel if speed is max
		LDA	bikes_spd_table,Y
		CMP	#8
		BNE	loc_2000_F345
		LDA	Camera_X_pos_l	;  / level_position - on h levels
		AND	#$F8		; accurate scrolling at	max speed?
		STA	Camera_X_pos_l	;  / level_position - on h levels

loc_2000_F345:				; ...
		LDY	#2

loc_2000_F347:				; ...
		LDA	Objects_X_sub -	1,Y
		CLC
		ADC	bikes_speed_sub
		STA	Objects_X_sub -	1,Y
		TXA
		ADC	Object14_Xpos_H,Y
		STA	Object14_Xpos_H,Y
		LDA	Object15_unk_cnt,Y
		ADC	#0
		STA	Object15_unk_cnt,Y
		DEY
		BNE	loc_2000_F347
		LDA	bikes_speed_sub
		CLC
		ADC	bikes_acc_cnt
		STA	bikes_acc_cnt
		JMP	bikes_camera_move
; ---------------------------------------------------------------------------
bikes_spd_table:			; ...
		.BYTE 8			; tunnel 1
		.BYTE $C		; tunnel 2
		.BYTE 4			; inferno race 1
		.BYTE 5			; inf 2
		.BYTE 8			; inf 3
		.BYTE $10		; inf 4
		.BYTE 4			; surf city sector1
		.BYTE 6			; surf city 2
		.BYTE 8			; surf city 3
; ---------------------------------------------------------------------------

loc_2000_F375:				; ...
		JMP	loc_2000_F5D3
; ---------------------------------------------------------------------------

loc_2000_F378:				; ...
		LDA	tmp_var_c8
		BNE	loc_2000_F375
		LDA	flag_boss_1
		BEQ	loc_2000_F3CB
		LDA	global_var6
		BEQ	loc_2000_F386
		DEC	global_var6

loc_2000_F386:				; ...
		LDA	global_var4
		BEQ	loc_2000_F3A4
		DEC	global_var4
		LDX	global_var3
		CMP	#4
		BCS	loc_2000_F397
		DEX
		TXA
		EOR	#$FF
		TAX

loc_2000_F397:				; ...
		TXA
		AND	#$20
		ORA	#$10
		STA	global_flags
		TXA
		CLC
		ADC	Camera_Y_pos_l	;  / level_position - on v levels
		STA	Camera_Y_pos_l_2

loc_2000_F3A4:				; ...
		LDA	global_var2
		BEQ	loc_2000_F375
		DEC	global_var2
		LDX	global_var1
		CMP	#7
		BCS	loc_2000_F3BB
		DEX
		TXA
		EOR	#$FF
		TAX
		CMP	#$80
		ROR	A
		BEQ	loc_2000_F3BB
		TAX

loc_2000_F3BB:				; ...
		TXA
		AND	#$20
		EOR	#$20
		STA	global_flags
		LDY	#0
		TXA
		BPL	loc_2000_F3C8
		DEY

loc_2000_F3C8:				; ...
		JMP	loc_2000_F524
; ---------------------------------------------------------------------------

loc_2000_F3CB:				; ...
		LDA	Level_ID
		CMP	#revolution
		BNE	loc_2000_F40F
		JSR	sub_2000_F5FF
		LDA	Objects_X_shadow
		LDY	player2_TypeID
		BEQ	loc_2000_F3E9
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	player2_X_shadow
		LDY	Objects_TypeID
		BEQ	loc_2000_F3E9
		ADC	tmp_var_15	;  / Object Counter / various tmp
		ROR	A

loc_2000_F3E9:				; ...
		LDY	#0
		CMP	#$A8
		BCS	loc_2000_F401
		CMP	#$90
		BCC	loc_2000_F3F6
		CLC
		BCC	loc_2000_F401

loc_2000_F3F6:				; ...
		CMP	#$70
		BCS	loc_2000_F40C
		DEY
		CMP	#$58
		LDA	#$FE
		BNE	loc_2000_F403

loc_2000_F401:				; ...
		LDA	#1

loc_2000_F403:				; ...
		ADC	global_var2
		STA	global_var2
		TYA
		ADC	global_var3
		STA	global_var3

loc_2000_F40C:				; ...
		JMP	loc_2000_F5D3
; ---------------------------------------------------------------------------

loc_2000_F40F:				; ...
		LDA	camera_lock_cnt
		BEQ	loc_2000_F419
		DEC	camera_lock_cnt
		CMP	#$1E
		BEQ	loc_2000_F40C

loc_2000_F419:				; ...
		LDA	Objects_TypeID
		BEQ	loc_2000_F446
		LDA	Objects_X_shadow
		LDX	player2_TypeID
		BEQ	loc_2000_F44E
		LDX	Level_ID
		CPX	#arctic_caverns
		BEQ	loc_2000_F434
		CPX	#terra_tubes
		BEQ	loc_2000_F434
		CPX	#karnath_lair
		BNE	loc_2000_F43F

loc_2000_F434:				; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	player2_X_shadow
		ADC	tmp_var_15	;  / Object Counter / various tmp
		ROR	A
		JMP	loc_2000_F44E
; ---------------------------------------------------------------------------

loc_2000_F43F:				; ...
		CMP	player2_X_shadow
		BCS	loc_2000_F44E
		BCC	loc_2000_F44B

loc_2000_F446:				; ...
		LDA	player2_TypeID
		BEQ	loc_2000_F40C

loc_2000_F44B:				; ...
		LDA	player2_X_shadow

loc_2000_F44E:				; ...
		LDX	#3
		LDY	Level_ID
		CPY	#armageddon
		BEQ	loc_2000_F471
		CPY	#clinger_winger
		BEQ	loc_2000_F471
		CPY	#terra_tubes
		BEQ	loc_2000_F471
		CPY	#intruder_excluder
		BEQ	loc_2000_F471
		CPY	#karnath_lair
		BEQ	loc_2000_F471
		CPY	#rat_race
		BEQ	loc_2000_F471
		CPY	#arctic_caverns
		BEQ	loc_2000_F471
		JMP	loc_2000_F50C
; ---------------------------------------------------------------------------

loc_2000_F471:				; ...
		PHA
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	timer_end_music
		BEQ	loc_2000_F48F
		PLA
		LDX	#1

loc_2000_F47B:				; ...
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		AND	#button_start
		ORA	#button_right
		STA	InputHold_P1,X	; данные первого джойстика на зажатие
		LDA	InputTap_P1,X	; данные первого джойстика на нажатие
		AND	#button_start
		STA	InputTap_P1,X	; данные первого джойстика на нажатие
		DEX
		BPL	loc_2000_F47B
		JMP	loc_2000_F5AE
; ---------------------------------------------------------------------------

loc_2000_F48F:				; ...
		LDA	Level_ID
		CMP	#armageddon
		BEQ	loc_2000_F4A2
		CMP	#clinger_winger
		BNE	loc_2000_F4CF
		LDA	Camera_X_pos_H
		CLC
		ADC	Camera_Y_pos_H
		CMP	#$B
		BNE	loc_2000_F4A6

loc_2000_F4A2:				; ...
		PLA
		JMP	loc_2000_F5F8
; ---------------------------------------------------------------------------

loc_2000_F4A6:				; ...
		JSR	sub_2000_F5FF
		PLA
		JSR	sub_2000_F7F1
		LDA	Objects_X_shadow,Y
		LDY	#0
		LDX	#4
		CMP	#$A0
		BCS	loc_2000_F522
		CMP	#$90
		LDX	#2
		BCS	loc_2000_F522
		LDX	#$FC
		LDY	#$FF
		CMP	#$60
		BCC	loc_2000_F524
		CMP	#$70
		LDX	#$FE
		BCC	loc_2000_F524
		JMP	loc_2000_F5D3
; ---------------------------------------------------------------------------

loc_2000_F4CF:				; ...
		CMP	#$B
		BEQ	loc_2000_F4ED
		CMP	#$C
		BEQ	loc_2000_F4F0
		LDA	tmp_var_15	;  / Object Counter / various tmp
		CMP	#$90
		BCC	loc_2000_F4ED
		LDA	Camera_X_pos_H
		CMP	#2
		BNE	loc_2000_F4ED
		LDA	Camera_X_pos_l	;  / level_position - on h levels
		CMP	#$3D
		BCC	loc_2000_F4ED
		PLA
		LDA	#$80
		PHA

loc_2000_F4ED:				; ...
		JSR	sub_2000_F5FF

loc_2000_F4F0:				; ...
		PLA
		LDX	#3
		CMP	#$90
		BCS	loc_2000_F50C
		LDY	#$FF
		LDX	#$FD
		CMP	#$30
		BCC	loc_2000_F524
		INX
		CMP	#$60
		BCC	loc_2000_F524
		INX
		CMP	#$70
		BCC	loc_2000_F524
		JMP	loc_2000_F5D3
; ---------------------------------------------------------------------------

loc_2000_F50C:				; ...
		LDY	camera_lock_cnt
		BNE	loc_2000_F519
		CMP	#$D0
		BCS	loc_2000_F522
		DEX
		CMP	#$A0
		BCS	loc_2000_F522

loc_2000_F519:				; ...
		LDX	#1
		CMP	#$80
		BCS	loc_2000_F522
		JMP	loc_2000_F5D3
; ---------------------------------------------------------------------------

loc_2000_F522:				; ...
		LDY	#0

loc_2000_F524:				; ...
		CLC

bikes_camera_move:			; ...
		TXA
		ADC	Camera_X_pos_l	;  / level_position - on h levels
		STA	Camera_X_pos_l	;  / level_position - on h levels
		TYA
		ADC	Camera_X_pos_H
		STA	Camera_X_pos_H
		CMP	#$FF
		BNE	loc_2000_F53C
		LDA	#0
		STA	Camera_X_pos_l	;  / level_position - on h levels
		STA	Camera_X_pos_H

loc_2000_F539:				; ...
		JMP	loc_2000_F5D3
; ---------------------------------------------------------------------------

loc_2000_F53C:				; ...
		LDY	Level_ID
		CMP	level_flags_xz2,Y
		BCC	loc_2000_F539
		CPY	#SurfCity
		BEQ	loc_2000_F59F
		LDA	#0
		CPY	#clinger_winger
		BCS	loc_2000_F55D
		LDA	#$10
		CPY	#rat_race
		BEQ	loc_2000_F559
		CPY	#intruder_excluder
		BNE	loc_2000_F562
		LDA	#$30

loc_2000_F559:				; ...
		CMP	Camera_X_pos_l	;  / level_position - on h levels
		BCS	loc_2000_F5D3

loc_2000_F55D:				; ...
		STA	Camera_X_pos_l	;  / level_position - on h levels
		JMP	loc_2000_F5D3
; ---------------------------------------------------------------------------

loc_2000_F562:				; ...
		LDA	flag_boss_1
		BEQ	loc_2000_F56C
		LDA	timer_end_music
		BNE	loc_2000_F5B4
		BEQ	loc_2000_F5D3

loc_2000_F56C:				; ...
		CPY	#6
		BEQ	loc_2000_F574
		CPY	#3
		BNE	loc_2000_F59F

loc_2000_F574:				; ...
		LDA	stop_scroll_flag
		BNE	loc_2000_F5D3
		LDA	bikes_speed
		CMP	#7
		BCS	loc_2000_F5D3
		LDX	#1

loc_2000_F580:				; ...
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		AND	#button_start
		STA	InputHold_P1,X	; данные первого джойстика на зажатие
		LDA	InputTap_P1,X	; данные первого джойстика на нажатие
		AND	#button_start
		STA	InputTap_P1,X	; данные первого джойстика на нажатие
		LDA	#2
		CLC
		ADC	Objects_Xpos_L,X
		STA	Objects_Xpos_L,X
		BCC	loc_2000_F59A
		INC	Objects_Xpos_H,X

loc_2000_F59A:				; ...
		DEX
		BPL	loc_2000_F580
		BMI	loc_2000_F5AE

loc_2000_F59F:				; ...
		LDA	level_flags_xz2,Y
		STA	Camera_X_pos_H
		LDA	#0
		STA	Camera_X_pos_l	;  / level_position - on h levels
		LDA	Level_ID
		CMP	#karnath_lair
		BEQ	loc_2000_F5D3

loc_2000_F5AE:				; ...
		LDA	timer_end_music
		BNE	loc_2000_F5B4
		LDA	#$C0

loc_2000_F5B4:				; ...
		SEC
		SBC	#1
		STA	timer_end_music
		BNE	loc_2000_F5D3	; 1-1=0	; end lvl
		LDX	#$2A
		LDY	#0
		STY	bikes_speed_sub
		STY	bikes_speed
		JMP	jump_from_bank2	; BANK0:87AA
; ---------------------------------------------------------------------------
level_flags_xz2:.BYTE 0, $A, 0,	$FC, 6,	2, $FD,	0, 1, 0, 6, 5, $59 ; ...
; ---------------------------------------------------------------------------

loc_2000_F5D3:				; ...
		LDA	Level_ID
		CMP	#wookie_hole
		BEQ	locret_2000_F5FB
		CMP	#revolution
		BEQ	locret_2000_F5FB
		CMP	#intruder_excluder
		BEQ	locret_2000_F5FB
		CMP	#rat_race
		BEQ	locret_2000_F5FB
		CMP	#arctic_caverns
		BEQ	locret_2000_F5FB
		CMP	#clinger_winger
		BEQ	locret_2000_F5FB
		CMP	#terra_tubes
		BEQ	locret_2000_F5FB
		CMP	#karnath_lair
		BEQ	locret_2000_F5FB
		JSR	sub_2000_F76F

loc_2000_F5F8:				; ...
		JSR	sub_2000_F7A6

locret_2000_F5FB:			; ...
		RTS
; End of function level_moving

; ---------------------------------------------------------------------------

loc_2000_F5FC:				; ...
		DEC	camera_lock_cnt

locret_2000_F5FE:			; ...
		RTS

; =============== S U B	R O U T	I N E =======================================


sub_2000_F5FF:				; ...
		LDA	camera_lock_cnt
		BNE	loc_2000_F5FC
		LDX	#0
		LDA	Objects_Y_shad
		SEC
		SBC	Objects_Z_floor
		BCC	locret_2000_F5FE
		STA	tmp_var_15	;  / Object Counter / various tmp
		STA	tmp_var_16
		LDA	Lives_Player2	; кол-во жизней	(сердечек)
		ORA	pl2_death_timer
		ORA	player2_flags
		BPL	loc_2000_F626
		LDA	Objects_Flags	; $40 -	turned left; $10 - running; $80	- delete?
		ORA	Objects_death_timer ; undamage time
		BMI	locret_2000_F5FE
		BPL	loc_2000_F653

loc_2000_F626:				; ...
		LDA	player2_obj_unk16
		BNE	loc_2000_F653
		INX
		LDA	player2_Y_shadow
		SEC
		SBC	player2_Z_floor
		BCC	locret_2000_F5FE
		LDY	Lives_Player1	; кол-во жизней	(сердечек)
		BMI	loc_2000_F64F
		LDY	Objects_death_timer ; undamage time
		BMI	loc_2000_F64F
		LDY	players_obj_unk16
		BNE	loc_2000_F64F
		LDY	Objects_Flags	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	locret_2000_F5FE
		CMP	tmp_var_15	;  / Object Counter / various tmp
		BCC	loc_2000_F64F
		DEX
		LDA	tmp_var_15	;  / Object Counter / various tmp

loc_2000_F64F:				; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		STA	tmp_var_16

loc_2000_F653:				; ...
		STX	tmp_var_17
		TXA
		EOR	#1
		TAX
		LDA	Lives_Player1,X	; кол-во жизней	(сердечек)
		ORA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ORA	Objects_death_timer,X ;	undamage time
		BMI	loc_2000_F670
		LDA	Objects_Y_shad,X
		SEC
		SBC	Objects_Z_floor,X
		BCS	loc_2000_F66E
		LDA	#0

loc_2000_F66E:				; ...
		STA	tmp_var_16

loc_2000_F670:				; ...
		LDY	Level_ID
		CPY	#arctic_caverns
		BEQ	loc_2000_F67E
		CPY	#karnath_lair
		BEQ	loc_2000_F67E
		CPY	#clinger_winger
		BNE	loc_2000_F691

loc_2000_F67E:				; ...
		LDA	tmp_var_15	;  / Object Counter / various tmp
		CMP	tmp_var_16
		BEQ	loc_2000_F691
		ADC	tmp_var_16
		ROR	A
		CMP	#$70
		BCC	loc_2000_F68D
		ADC	#$30

loc_2000_F68D:				; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		STA	tmp_var_16

loc_2000_F691:				; ...
		LDA	Level_ID
		CMP	#clinger_winger
		BNE	loc_2000_F6A1
		LDX	pl1_or_pl2_xz	; clinger winger
		LDA	Objects_Y_shad,X
		STA	tmp_var_15	;  / Object Counter / various tmp
		STA	tmp_var_16

loc_2000_F6A1:				; ...
		CMP	#revolution
		BEQ	loc_2000_F6B2
		CMP	#intruder_excluder
		BNE	loc_2000_F6BD
		LDA	Camera_Y_pos_l_2
		AND	#$F
		BEQ	loc_2000_F6B2
		JMP	sub_2000_F7A6
; ---------------------------------------------------------------------------

loc_2000_F6B2:				; ...
		LDA	tmp_var_16
		CMP	#$D8
		BCC	loc_2000_F6BD
		LDA	#5
		STA	camera_lock_cnt

locret_2000_F6BC:			; ...
		RTS
; ---------------------------------------------------------------------------

loc_2000_F6BD:				; ...
		LDX	tmp_var_17
		LDA	Level_ID
		CMP	#rat_race
		BEQ	loc_2000_F6FB
		LDA	tmp_var_15	;  / Object Counter / various tmp
		CMP	#$70
		BCS	loc_2000_F6FB
		LDY	Camera_Y_pos_H
		BPL	loc_2000_F6D5
		LDY	Camera_Y_pos_l	;  / level_position - on v levels
		CPY	#$E0
		BCC	locret_2000_F6BC

loc_2000_F6D5:				; ...
		LDY	#$FF
		LDX	Level_ID
		CPX	#clinger_winger
		BNE	loc_2000_F6E7
		LDX	#$FC
		CMP	#$60
		BCC	loc_2000_F6F8
		LDX	#$FE
		BNE	loc_2000_F6F8

loc_2000_F6E7:				; ...
		LDX	#$FF
		CMP	#$50
		BCS	loc_2000_F6F8
		DEX
		CMP	#$40
		BCS	loc_2000_F6F8
		DEX
		CMP	#$20
		BCS	loc_2000_F6F8
		DEX

loc_2000_F6F8:				; ...
		JSR	Camera_Y_update	; X=inc_l,Y=inc_H

loc_2000_F6FB:				; ...
		LDA	Level_ID
		CMP	#clinger_winger
		BNE	loc_2000_F718
		LDA	Camera_Y_pos_H
		CMP	#5
		BEQ	locret_2000_F717
		LDA	tmp_var_16
		LDY	#0
		LDX	#4
		CMP	#$90
		BCS	loc_2000_F764
		LDX	#2
		CMP	#$80
		BCS	loc_2000_F764

locret_2000_F717:			; ...
		RTS
; ---------------------------------------------------------------------------

loc_2000_F718:				; ...
		CMP	#intruder_excluder
		BEQ	locret_2000_F763
		CMP	#revolution
		BEQ	locret_2000_F763
		CMP	#karnath_lair
		BNE	loc_2000_F72C
		LDA	Camera_Y_pos_H
		CMP	#2
		BEQ	locret_2000_F763
		BNE	loc_2000_F74A

loc_2000_F72C:				; ...
		CMP	#rat_race
		BNE	loc_2000_F74A
		LDA	tmp_var_15	;  / Object Counter / various tmp
		CMP	tmp_var_16
		BCC	loc_2000_F738
		STA	tmp_var_16

loc_2000_F738:				; ...
		LDA	Camera_Y_pos_H
		CMP	#$34
		BNE	loc_2000_F741
		JMP	sub_2000_F7A6
; ---------------------------------------------------------------------------

loc_2000_F741:				; ...
		LDA	tmp_var_16
		CLC
		ADC	#$30
		BCS	loc_2000_F74A
		STA	tmp_var_16

loc_2000_F74A:				; ...
		LDA	tmp_var_16
		LDY	#0
		LDX	#4
		CMP	#$C2
		BCS	loc_2000_F764
		DEX
		CMP	#$BE
		BCS	loc_2000_F764
		DEX
		CMP	#$BA
		BCS	loc_2000_F764
		DEX
		CMP	#$B8
		BCS	loc_2000_F764

locret_2000_F763:			; ...
		RTS
; ---------------------------------------------------------------------------

loc_2000_F764:				; ...
		JMP	Camera_Y_update	; X=inc_l,Y=inc_H
; End of function sub_2000_F5FF

; ---------------------------------------------------------------------------

loc_2000_F767:				; ...
		CPY	#4
		BCS	loc_2000_F77B
		LDY	#$B
		STY	camera_pos_inf?

; =============== S U B	R O U T	I N E =======================================


sub_2000_F76F:				; ...
		LDY	camera_pos_inf?
		LDA	Level_ID
		CMP	#SurfCity
		BEQ	loc_2000_F767
		CMP	#wookie_hole
		BCS	locret_2000_F792

loc_2000_F77B:				; ...
		LDA	Camera_X_pos_l	;  / level_position - on h levels
		SEC
		SBC	byte_2000_F794,Y
		LDA	Camera_X_pos_H
		SBC	byte_2000_F793,Y
		BCC	locret_2000_F792
		LDA	byte_2000_F795,Y
		STA	Camera_Y_pos_l_2
		INY
		INY
		INY
		STY	camera_pos_inf?

locret_2000_F792:			; ...
		RTS
; End of function sub_2000_F76F

; ---------------------------------------------------------------------------
byte_2000_F793:	.BYTE 1			; ...
byte_2000_F794:	.BYTE $D0		; ...
byte_2000_F795:	.BYTE $60		; ...
		.BYTE 3, $10, $40
		.BYTE 4, $A0, $60
		.BYTE $FF, $FF,	$10, $F0, $10, $24, $50, $DC, $FF, $FF

; =============== S U B	R O U T	I N E =======================================


sub_2000_F7A6:				; ...
		LDA	tmp_var_c8
		BEQ	loc_2000_F7B6
		DEC	tmp_var_c8
		CMP	#$28
		BCC	loc_2000_F7B6
		LDX	#2
		LDY	#0
		BEQ	Camera_Y_update	; X=inc_l,Y=inc_H

loc_2000_F7B6:				; ...
		LDA	Camera_Y_pos_l	;  / level_position - on v levels
		SEC
		SBC	Camera_Y_pos_l_2
		BEQ	locret_2000_F7F0
		LDX	#$FF
		LDY	#$FF
		ROL	A
		BCC	Camera_Y_update	; X=inc_l,Y=inc_H
		INY
		LDX	#1
		BNE	Camera_Y_update	; X=inc_l,Y=inc_H

loc_2000_F7C9:				; ...
		LDX	#$FF
		LDY	#$FF
; End of function sub_2000_F7A6


; =============== S U B	R O U T	I N E =======================================

; X=inc_l,Y=inc_H

Camera_Y_update:			; ...
		TXA
		CLC
		ADC	Camera_Y_pos_l	;  / level_position - on v levels
		STA	Camera_Y_pos_l	;  / level_position - on v levels
		TYA
		ADC	Camera_Y_pos_H
		STA	Camera_Y_pos_H
		CLC
		TXA
		BPL	loc_2000_F7E6
		ADC	Vscroll_value	; $00-$EF
		CMP	#$F0
		BCC	loc_2000_F7EE
		SBC	#$10
		BCS	loc_2000_F7EE

loc_2000_F7E6:				; ...
		ADC	Vscroll_value	; $00-$EF
		CMP	#$F0
		BCC	loc_2000_F7EE
		ADC	#$F

loc_2000_F7EE:				; ...
		STA	Vscroll_value	; $00-$EF

locret_2000_F7F0:			; ...
		RTS
; End of function Camera_Y_update


; =============== S U B	R O U T	I N E =======================================


sub_2000_F7F1:				; ...
		LDX	#1

loc_2000_F7F3:				; ...
		LDA	players_obj_unk5,X
		EOR	Objects_Xpos_L,X
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	players_obj_unk6,X
		EOR	Objects_Ypos_L,X
		ORA	tmp_var_15	;  / Object Counter / various tmp
		AND	#$E0
		BEQ	loc_2000_F80F
		INC	players_obj_unk7,X
		BNE	loc_2000_F80F
		INC	players_obj_unk8,X

loc_2000_F80F:				; ...
		LDA	Objects_Xpos_L,X
		STA	players_obj_unk5,X
		LDA	Objects_Ypos_L,X
		STA	players_obj_unk6,X
		DEX
		BPL	loc_2000_F7F3
		LDY	#1
		LDA	players_obj_unk7
		SEC
		SBC	player2_unk_7
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	players_obj_unk8
		SBC	player2_unk_var
		BCC	loc_2000_F83B
		DEY
		ORA	tmp_var_15	;  / Object Counter / various tmp
		CMP	#1
		BCS	loc_2000_F83B
		LDY	pl1_or_pl2_xz	; clinger winger

loc_2000_F83B:				; ...
		STY	pl1_or_pl2_xz	; clinger winger
		RTS
; End of function sub_2000_F7F1


; =============== S U B	R O U T	I N E =======================================


sub_2000_F83F:				; ...
		LDA	#0
		STA	Objects_TypeID,X
		RTS
; ---------------------------------------------------------------------------

loc_2000_F845:				; ...
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	FrameCounter
		AND	#7
		BNE	locret_2000_F880
		LDA	upd_gfx_flag2	; what to update - attrib,pal or someelse
		CMP	#$80
		BNE	locret_2000_F880
		INC	Objects_cnt2,X
		LDY	Objects_cnt2,X
		LDA	pal_sbc_values - 1,Y
		STA	tmp_var_15	;  / Object Counter / various tmp
		BMI	sub_2000_F83F
		CPY	#3
		BCS	loc_2000_F881

loc_2000_F864:				; ...
		LDY	#$B

loc_2000_F866:				; ...
		LDA	palette_ram,Y
		SEC
		SBC	tmp_var_15	;  / Object Counter / various tmp
		BCS	loc_2000_F870
		LDA	#$F

loc_2000_F870:				; ...
		STA	palette_ram,Y
		DEY
		BNE	loc_2000_F866
		LDA	#$84
		STA	upd_gfx_flag2	; what to update - attrib,pal or someelse
		LDA	#0
		STA	pal_vram_upd_off ; BKG=$00, SPR=$10
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

locret_2000_F880:			; ...
		RTS
; ---------------------------------------------------------------------------

loc_2000_F881:				; ...
		LDY	Objects_Xpos_H,X
		LDX	#$F

loc_2000_F886:				; ...
		LDA	palettes,Y
		STA	palette_ram,X
		DEY
		DEX
		BPL	loc_2000_F886
		BMI	loc_2000_F864
; End of function sub_2000_F83F

; ---------------------------------------------------------------------------
palettes:	.BYTE $F, 6, $26, $36	; ...
		.BYTE $F, 7, 5,	$15
		.BYTE $F, 6, 0,	$10
		.BYTE $F, 4, $14, $24
		.BYTE $F, 7, $17, $37
		.BYTE $F, $F, 7, $17
		.BYTE $F, 7, $14, $34
		.BYTE $F, 5, $16, $26
byte_2000_F8B1:	.BYTE $6A, $B1,	$6B, $F1, $E2, $FC, $B0, $7F, $EB, 7, $83, $FC,	$AE, $1F, $F, $F0, $5C,	$3F, $F, $F0, $5C, $3F,	$F, $F0
		.BYTE $5C, $3F,	$1E, $E0, $B8, $7F, $3A, $C1, $C3, $FC,	$73, $3C, $DB, $C, $A8,	$10
byte_2000_F8D9:	.BYTE $D5, $38,	$35, $F8, $F1, $FE, $5C, $3F, $3A, $C1,	$E0, $FF, $EB, 7, $83, $FC, $D7, $F, 3,	$FC, $D7, $F, 3, $FC
		.BYTE $D7, $F, 7, $F8, $AE, $1F, $1D, $E0, $61,	$FE, $DD, $E, $ED, 6, $D0, 8
byte_2000_F901:	.BYTE $8A, $5C,	$9A, $7C, $F8, $7F, $D6, $F, $1D, $E0, $70, $FF, $75, $83, $C0,	$FF, $F5, 3, $C0, $FF, $F5, 3, $C0, $FF
		.BYTE $F5, 3, $C1, $FE,	$D7, $F, 7, $F8, $58, $3F, $6A,	$87, $F4, 3, $D0, 8
byte_2000_F929:	.BYTE $9D, $4E,	$4D, $3E, $7C, $3F, $6B, $87, $87, $F8,	$5C, $3F, $1D, $E0, $70, $FF, $3D, $C0,	$70, $FF, $3D, $C0, $70
		.BYTE $FF, $3D,	$C0, $70, $FF, $75, $83, $C3, $FC, $AC,	$1F, $35, $C3, $7A, $81, $60, $88
byte_2000_F951:	.BYTE $CE, $27,	$A7, $1F, $D6, $F, $1B,	$E1, $E1, $FE, $D7, $F,	7, $F8,	$5C, $3F, $F, $F0, $5C,	$3F, $F, $F0, $5C, $3F
		.BYTE $F, $F0, $5C, $3F, $1D, $E0, $70,	$FF, $EB, 7, $1D, $E0, $5D, $E0, $34, $C0
byte_2000_F979:	.BYTE $D7, $63,	$53, $8F, $AB, $C7, $D,	$F0, $70, $FF, $75, $83, $C1, $FE, $D7,	$F, 3, $FC, $D7, $F, 3,	$FC, $D7, $F
		.BYTE 3, $FC, $D7, $F, 7, $F8, $58, $3F, $75, $83, $8E,	$F0, $AE, $70, $B0, $40
byte_2000_F9A1:	.BYTE $D7, $63,	$2B, $C7, $D5, $E3, $87, $F8, $5C, $3F,	$3A, $C1, $E0, $FF, $F5, 3, $C0, $FF, $F5, 3, $C0, $FF,	$F5
		.BYTE 3, $C1, $FE, $EB,	7, $83,	$FC, $AC, $1F, $1D, $E0, $C7, $F8, $57,	$38, $58, $20
byte_2000_F9C9:	.BYTE $2B, $B1,	$97, $E3, $CD, $F0, $61, $FE, $AE, $1F,	$E, $F0, $B8, $7F, $3D,	$C0, $70, $FF, $3D, $C0, $70, $FF, $3D
		.BYTE $C0, $70,	$FF, $7A, $81, $E0, $FF, $EB, 7, $E, $F0, $E7, $78, $AB, $1C, $A8, $10
 some_ptrs_h: .DH #byte_2000_F9C9,#byte_2000_F9A1,#byte_2000_F979,#byte_2000_F951
	      .DH #byte_2000_F929,#byte_2000_F901,#byte_2000_F8D9,#byte_2000_F8B1
 some_ptrs_l: .DL #byte_2000_F9C9,#byte_2000_F9A1,#byte_2000_F979,#byte_2000_F951
	      .DL #byte_2000_F929,#byte_2000_F901,#byte_2000_F8D9,#byte_2000_F8B1
; some_ptrs_h

; =============== S U B	R O U T	I N E =======================================


revolution_anim_prepare:		; ...
		LDA	global_var1
		EOR	global_var2
		LSR	A
		BEQ	loc_2000_FA2B
		LDA	global_var2
		STA	global_var1
		LSR	A
		AND	#7
		TAY
		LDA	some_ptrs_l,Y
		STA	tmp_var_19
		LDA	some_ptrs_h,Y
		STA	tmp_var_1A
		LDY	#0

loc_2000_FA1C:				; ...
		LDA	(tmp_var_19),Y
		STA	gfx_buff_adr_h,Y
		INY
		CPY	#40
		BNE	loc_2000_FA1C
		JMP	update_players_chars_gfx
; ---------------------------------------------------------------------------
		STA	extra_vblank_flags ; unused?

loc_2000_FA2B:				; ...
		JMP	update_players_chars_gfx
; End of function revolution_anim_prepare

; ---------------------------------------------------------------------------
byte_2000_FA2E:	.BYTE $FA, $B5,	$9A, $95, $9A, $95, $90, $FF, $FF, 1, $81, $FF,	$A9, $55, $A9, $55, $AB, $57, $AF, $5F,	$BF, $7F, $FE ;	...
		.BYTE $FD, $FA,	$B5, $9A, $95, $9A, $95, $90, $FF
byte_2000_FA4E:	.BYTE $8F, $CF,	$EF, $EF, $EF, $EF, $EF, $FF, $FF, $FF,	$7F, 1,	$FF, $FF, $FF, $FF, $FF, $FF, $FE, $FC,	$F8, $F1, $E3 ;	...
		.BYTE $C7, $8F,	$CF, $EF, $EF, $EF, $EF, $EF, $FF
byte_2000_FA6E:	.BYTE $F2, $12,	$D2, $52, $52, $52, $D2, $12, $F2, $12,	$D2, $52, $52, $52, $D2, $12 ; ...
byte_2000_FA7E:	.BYTE 4, $E4, $E4, $84,	$84, $84, 4, 4,	4, $E4,	$E4, $84, $84, $84, 4, 4, $8F, $88, $8B, $8A, $8A, $8A,	$8A, $88, $8F ;	...
		.BYTE $88, $8B,	$8A, $8A, $8A, $8A, $88, $60, $67, $67,	$67, $67, $67, $67, $66, $60, $67, $67,	$67, $67, $67, $67, $66
		.BYTE $F3, $E7,	$CF, $9F, $3F, $7E, $FC, $F9, $F3, $E7,	$CF, $9F, $3F, $7E, $FC, $F9, $3F, $7E,	$FC, $F9, $F3, $E7, $CF
		.BYTE $9F, $3F,	$7E, $FC, $F9, $F3, $E7, $CF, $9F
byte_2000_FACE:	.BYTE 0, 3, $3F, $23, $23, $23,	$7F, $7F, 0, $7D, $7D, $79, $79, $61, 1, $7F, $FF, $81,	$BD, $A5, $A5, $BD, $81, $FF ; ...
		.BYTE 0, $7F, $7F, $7B,	$7B, $63, $7F, $7F

; =============== S U B	R O U T	I N E =======================================


sub_2000_FAEE:				; ...
		LDA	#8
		STA	tmp_var_15	;  / Object Counter / various tmp

loc_2000_FAF2:				; ...
		LDA	byte_2000_FA6E,Y
		STA	tmp_buffer+$30,X
		LDA	byte_2000_FA7E,Y
		STA	tmp_buffer+$38,X
		INX
		INY
		DEC	tmp_var_15	;  / Object Counter / various tmp
		BNE	loc_2000_FAF2
		TXA
		CLC
		ADC	#8
		TAX
		TYA
		ADC	#$18
		TAY
		CPX	#$50
		BEQ	locret_2000_FB15
		CPX	#$20
		BNE	sub_2000_FAEE

locret_2000_FB15:			; ...
		RTS
; End of function sub_2000_FAEE

; ---------------------------------------------------------------------------
byte_2000_FB16:	.BYTE $18, 0, 8		; ...

; =============== S U B	R O U T	I N E =======================================

; intruder and rat race

electro_shafts_anims:			; ...
		LDA	FrameCounter
		AND	#1
		ORA	some_sound_flag	; by tables
		BEQ	loc_2000_FB9D
		LDA	level_ram2+$3E
		SEC
		SBC	Camera_Y_pos_l	;  / level_position - on v levels
		AND	#$FC
		BEQ	loc_2000_FB76
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	level_ram2+$3E
		SEC
		SBC	tmp_var_15	;  / Object Counter / various tmp
		STA	level_ram2+$3E
		LDA	tmp_var_15	;  / Object Counter / various tmp
		LSR	A
		LSR	A
		ADC	level_ram2+$3F
		AND	#$1F
		CMP	#$18
		BCC	loc_2000_FB48
		LDY	Level_ID
		SBC	byte_2000_FB16 - 7,Y

loc_2000_FB48:				; ...
		STA	level_ram2+$3F
		TAY
		LDX	#0

loc_2000_FB4E:				; ...
		LDA	#8
		STA	tmp_var_15	;  / Object Counter / various tmp

loc_2000_FB52:				; ...
		LDA	byte_2000_FA2E,Y
		STA	tmp_buffer,X
		LDA	byte_2000_FA4E,Y
		STA	tmp_buffer+8,X
		INY
		INX
		DEC	tmp_var_15	;  / Object Counter / various tmp
		BNE	loc_2000_FB52
		TYA
		SEC
		SBC	#$10
		BCS	loc_2000_FB6C
		ADC	#$18

loc_2000_FB6C:				; ...
		TAY
		TXA
		CLC
		ADC	#8
		TAX
		CPX	#$30
		BNE	loc_2000_FB4E

loc_2000_FB76:				; ...
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		AND	#7
		LDY	Level_ID
		CPY	#rat_race
		BNE	loc_2000_FB82
		EOR	#7

loc_2000_FB82:				; ...
		TAY
		LDX	#0
		JSR	sub_2000_FAEE
		LDY	#$1F

loc_2000_FB8A:				; ...
		TYA
		ADC	RandomValue_1
		SBC	RandomValue_2
		ROL	A
		EOR	RandomValue_2
		STA	RandomValue_1
		STA	byte_0_740,Y
		DEY
		BPL	loc_2000_FB8A
		JMP	update_players_chars_gfx
; ---------------------------------------------------------------------------

loc_2000_FB9D:				; ...
		LDA	pal_reduce_value ; dec to color	value
		BEQ	loc_2000_FBAE
		LDY	#$1F

loc_2000_FBA3:				; ...
		LDA	byte_2000_FACE,Y
		STA	tmp_buffer2+$10,Y
		DEY
		BPL	loc_2000_FBA3
		BMI	loc_2000_FBC2

loc_2000_FBAE:				; ...
		LDX	#$F

loc_2000_FBB0:				; ...
		LDA	tmp_buffer2+$10,X
		CMP	#$80
		ROL	tmp_buffer2+$10,X
		LDA	tmp_buffer2+$20,X
		ROR	A
		ROR	tmp_buffer2+$20,X
		DEX
		BPL	loc_2000_FBB0

loc_2000_FBC2:				; ...
		LDA	level_ram2+$3A
		CLC
		ADC	#4
		STA	level_ram2+$3A
		LDA	level_ram2+$3B
		ADC	#0
		STA	level_ram2+$3B
		CLC
		ADC	#4
		AND	#8
		BEQ	loc_2000_FBED
		LDA	level_ram2+$3C
		SEC
		SBC	level_ram2+$3A
		STA	level_ram2+$3C
		LDA	level_ram2+$3D
		SBC	level_ram2+$3B
		JMP	loc_2000_FBFD
; ---------------------------------------------------------------------------

loc_2000_FBED:				; ...
		LDA	level_ram2+$3A
		CLC
		ADC	level_ram2+$3C
		STA	level_ram2+$3C
		LDA	level_ram2+$3B
		ADC	level_ram2+$3D

loc_2000_FBFD:				; ...
		STA	level_ram2+$3D
		AND	#7
		ORA	#$40
		TAY
		LDX	#$40
		JSR	sub_2000_FAEE
		LDA	#$30

set_gfxanim_ptr__:			; ...
		LDX	#$1A
		JMP	set_gfxanim_ptr_
; ---------------------------------------------------------------------------

loc_2000_FC11:				; ...
		LDA	FrameCounter
		AND	#2
		BNE	loc_2000_FC91

loc_2000_FC17:				; ...
		LDY	tmp_buffer2,X
		LDA	tmp_buffer2+$10,X
		STA	tmp_buffer2,X
		LDA	tmp_buffer2+$20,X
		STA	tmp_buffer2+$10,X
		LDA	tmp_buffer2+$30,X
		STA	tmp_buffer2+$20,X
		TYA
		STA	tmp_buffer2+$30,X
		INX
		CPX	#$F
		BNE	loc_2000_FC17
		LDX	#0

loc_2000_FC37:				; ...
		LDA	gfx_buff_adr_h,X
		LDY	byte_0_710,X
		STA	byte_0_710,X
		TYA
		STA	gfx_buff_adr_h,X
		LDA	byte_0_720,X
		LDY	byte_0_730,X
		STA	byte_0_730,X
		TYA
		STA	byte_0_720,X
		INX
		CPX	#$10
		BNE	loc_2000_FC37
		LDA	FrameCounter
		AND	#4
		TAX
		BEQ	loc_2000_FC5F
		LDX	#$40

loc_2000_FC5F:				; ...
		LDY	#0

loc_2000_FC61:				; ...
		LDA	level_ram1,X
		STA	tmp_buffer,Y
		INX
		INY
		CPY	#$40
		BNE	loc_2000_FC61
		LDA	#$60
		JMP	set_gfxanim_ptr__
; ---------------------------------------------------------------------------

some_levels_anims:			; ...
		LDX	#0
		LDA	FrameCounter
		AND	#1
		BEQ	loc_2000_FC94
		LDA	Level_ID
		CMP	#terra_tubes
		BEQ	loc_2000_FC11
		LDA	Camera_X_pos_l	;  / level_position - on h levels
		SEC
		SBC	timer_cont_scrn_sec
		CLC
		ADC	#1
		BMI	loc_2000_FC8E
		CMP	#3
		BCC	loc_2000_FC91

loc_2000_FC8E:				; ...
		JMP	some_levels_anim_prepare
; ---------------------------------------------------------------------------

loc_2000_FC91:				; ...
		JMP	update_players_chars_gfx
; ---------------------------------------------------------------------------

loc_2000_FC94:				; ...
		LDA	some_sound_flag	; by tables
		BNE	loc_2000_FC91
		LDA	Level_ID
		CMP	#terra_tubes
		BEQ	loc_2000_FC91
		CMP	#armageddon
		BNE	loc_2000_FCA4
		BCS	loc_2000_FCB5

loc_2000_FCA4:				; ...
		LDA	Camera_Y_pos_l	;  / level_position - on v levels
		SEC
		SBC	timer_cont_scrn_60
		CLC
		ADC	#1
		BMI	loc_2000_FCB7
		CMP	#3
		BCS	loc_2000_FCB5
		JMP	loc_2000_FDC0
; ---------------------------------------------------------------------------

loc_2000_FCB5:				; ...
		LDX	#$C7

loc_2000_FCB7:				; ...
		STX	tmp_var_15	;  / Object Counter / various tmp
		LDA	Camera_Y_pos_l	;  / level_position - on v levels
		STA	timer_cont_scrn_60
		LDY	#4

loc_2000_FCBF:				; ...
		LDA	tmp_buffer,X
		PHA
		LDA	tmp_buffer+8,X
		PHA
		TXA
		CLC
		ADC	#$10
		TAX
		DEY
		BNE	loc_2000_FCBF
		LDX	tmp_var_15	;  / Object Counter / various tmp
		BPL	loc_2000_FD1C
		LDX	#$CF

loc_2000_FCD5:				; ...
		LDY	#7

loc_2000_FCD7:				; ...
		LDA	level_ram2+$3F,X
		STA	tmp_buffer,X
		LDA	tmp_buffer+$F,X
		STA	tmp_buffer+$10,X
		LDA	tmp_buffer+$1F,X
		STA	tmp_buffer+$20,X
		LDA	tmp_buffer+$2F,X
		STA	tmp_buffer+$30,X
		DEX
		DEY
		BNE	loc_2000_FCD7
		LDA	level_ram2+7,X
		STA	tmp_buffer,X
		LDA	level_ram2+$17,X
		STA	tmp_buffer+$10,X
		LDA	level_ram2+$27,X
		STA	tmp_buffer+$20,X
		LDA	level_ram2+$37,X
		STA	tmp_buffer+$30,X
		DEX
		TXA
		AND	#8
		BEQ	loc_2000_FCD5
		TXA
		SEC
		SBC	#$30
		TAX
		CMP	#$CF
		BNE	loc_2000_FCD5
		BEQ	loc_2000_FD5F

loc_2000_FD1C:				; ...
		LDY	#7

loc_2000_FD1E:				; ...
		LDA	tmp_buffer+1,X
		STA	tmp_buffer,X
		LDA	tmp_buffer+$11,X
		STA	tmp_buffer+$10,X
		LDA	tmp_buffer+$21,X
		STA	tmp_buffer+$20,X
		LDA	tmp_buffer+$31,X
		STA	tmp_buffer+$30,X
		INX
		DEY
		BNE	loc_2000_FD1E
		LDA	tmp_buffer+$39,X
		STA	tmp_buffer,X
		LDA	tmp_buffer2+9,X
		STA	tmp_buffer+$10,X
		LDA	tmp_buffer2+$19,X
		STA	tmp_buffer+$20,X
		LDA	tmp_buffer2+$29,X
		STA	tmp_buffer+$30,X
		INX
		TXA
		AND	#8
		BNE	loc_2000_FD1C
		TXA
		CLC
		ADC	#$30
		TAX
		BNE	loc_2000_FD1C

loc_2000_FD5F:				; ...
		LDA	tmp_var_15	;  / Object Counter / various tmp
		EOR	#$F7
		TAX
		LDY	#4

loc_2000_FD66:				; ...
		PLA
		STA	tmp_buffer+8,X
		PLA
		STA	tmp_buffer,X
		TXA
		SEC
		SBC	#$10
		TAX
		DEY
		BNE	loc_2000_FD66
		JMP	loc_2000_FDC0
; ---------------------------------------------------------------------------

some_levels_anim_prepare:		; ...
		ROL	A
		LDA	Camera_X_pos_l	;  / level_position - on h levels
		STA	timer_cont_scrn_sec
		BCC	loc_2000_FDA0

loc_2000_FD80:				; ...
		LDY	#$10

loc_2000_FD82:				; ...
		LDA	tmp_buffer,X
		ROL	A
		ROL	tmp_buffer+$30,X
		ROL	tmp_buffer+$20,X
		ROL	tmp_buffer+$10,X
		ROL	tmp_buffer,X
		INX
		DEY
		BNE	loc_2000_FD82
		TXA
		CLC
		ADC	#$30
		TAX
		BNE	loc_2000_FD80
		JMP	update_players_chars_gfx
; ---------------------------------------------------------------------------

loc_2000_FDA0:				; ...
		LDY	#$10

loc_2000_FDA2:				; ...
		LDA	tmp_buffer+$30,X
		ROR	A
		ROR	tmp_buffer,X
		ROR	tmp_buffer+$10,X
		ROR	tmp_buffer+$20,X
		ROR	tmp_buffer+$30,X
		INX
		DEY
		BNE	loc_2000_FDA2
		TXA
		CLC
		ADC	#$30
		TAX
		BNE	loc_2000_FDA0
		JMP	update_players_chars_gfx
; ---------------------------------------------------------------------------

loc_2000_FDC0:				; ...
		LDX	#$16
		LDA	#$C0
		LDY	Level_ID
		CPY	#arctic_caverns
		BEQ	set_gfxanim_ptr_
		LDA	#$80

set_gfxanim_ptr_:			; ...
		LDY	#$D0
		BNE	set_gfxanim_ptr	; jump
; End of function electro_shafts_anims


some_levels_anims_:			; ...
		JMP	some_levels_anims
; ---------------------------------------------------------------------------

electro_shafts_anims_:			; ...
		JMP	electro_shafts_anims ; intruder	and rat	race

; =============== S U B	R O U T	I N E =======================================


gfx_animations_prepare:			; ...
		LDX	Level_ID
		LDA	#$80
		CPX	#revolution
		BEQ	loc_2000_FE00
		CPX	#arctic_caverns
		BEQ	some_levels_anims_
		CPX	#clinger_winger
		BEQ	some_levels_anims_
		CPX	#terra_tubes
		BEQ	some_levels_anims_
		CPX	#armageddon
		BEQ	some_levels_anims_
		CPX	#intruder_excluder
		BEQ	electro_shafts_anims_
		CPX	#rat_race
		BEQ	electro_shafts_anims_
		CPX	#wookie_hole
		BNE	update_players_chars_gfx
		LDA	FrameCounter
		AND	#1
		BEQ	update_players_chars_gfx

loc_2000_FE00:				; ...
		STA	extra_vblank_flags ; $80-extra vblank; 1-parallax animations
		ROL	A
		BCC	locret_2000_FE52
		JMP	revolution_anim_prepare
; End of function gfx_animations_prepare


; =============== S U B	R O U T	I N E =======================================


update_players_chars_gfx:		; ...
		INC	update_p1_p2_gfx
		LDX	#0
		LDA	player2_obj_wanted_frame
		CMP	player2_gfx_frame
		BEQ	write_obj_wanted_frame
		INX
		LDA	player1_obj_wanted_frame
		CMP	Objects_gfx_frame
		BEQ	write_obj_wanted_frame
		LDA	update_p1_p2_gfx
		AND	#1
		TAX

write_obj_wanted_frame:			; ...
		LDA	player1_obj_wanted_frame,X
		STA	Objects_gfx_frame,X
		ASL	A
		TAY
		BNE	loc_2000_FE2E	; not 0	(?)
		LDY	#2

loc_2000_FE2E:				; ...
		LDA	#$10

set_gfxanim_ptr:			; ...
		STX	gfxcopy_vram_ptrh ; $00	or $01 for pl; $16 - anims
		STA	gfxcopy_vram_ptrl ; $10	for pl;	$C0/$80	anims
		LDA	gfx_ptrs - 1,Y
		STA	tmp_var_15	; 80
		LDA	gfx_ptrs - 2,Y
		TAY
		LDX	#0

loc_2000_FE3F:				; ...
		TYA
		STA	gfx_copy_adrL,X	; Суда пишутся оффсеты рома, которые используются в RAM	коде для записи	графики	в ppu,
					; 1 раз	записывается оффсет, и далее через 6 байт тоже но уже +1,и так 16 раз.
					; В команду LDY	$8030,X	 записываются 8030.
		INY
		LDA	tmp_var_15	;  / Object Counter / various tmp
		STA	gfx_copy_adrH,X	; write	80
		TXA
		CLC
		ADC	#6
		TAX
		CMP	#$60
		BCC	loc_2000_FE3F

locret_2000_FE52:			; ...
		RTS
; End of function update_players_chars_gfx

; ---------------------------------------------------------------------------
gfx_ptrs:	.WORD rash_gfx_1	; ...
		.WORD rash_gfx_1
		.WORD rash_gfx_2
		.WORD rash_gfx_3
		.WORD rash_gfx_4
		.WORD rash_gfx_5
		.WORD rash_gfx_6
		.WORD rash_gfx_7
		.WORD rash_gfx_8
		.WORD rash_gfx_9
		.WORD rash_gfx_10
		.WORD rash_gfx_11
		.WORD rash_gfx_11
		.WORD rash_gfx_12
		.WORD rash_gfx_13
		.WORD rash_gfx_14
		.WORD rash_gfx_15
		.WORD rash_gfx_16
		.WORD rash_gfx_17
		.WORD rash_gfx_18
		.WORD rash_gfx_19
		.WORD rash_gfx_20
		.WORD rash_gfx_38
		.WORD rash_gfx_21
		.WORD rash_gfx_22
		.WORD rash_gfx_23
		.WORD rash_gfx_24
		.WORD rash_gfx_25
		.WORD rash_gfx_26
		.WORD rash_gfx_27
		.WORD rash_gfx_28
		.WORD rash_gfx_29
		.WORD rash_gfx_30
		.WORD rash_gfx_31
		.WORD rash_gfx_32
		.WORD rash_gfx_33
		.WORD rash_gfx_34
		.WORD rash_gfx_35
		.WORD rash_gfx_36
		.WORD rash_gfx_37
		.WORD rash_gfx_38
		.WORD rash_gfx_39
		.WORD rash_gfx_40
		.WORD rash_gfx_41
		.WORD rash_gfx_42
		.WORD rash_gfx_43
		.WORD rash_gfx_44
		.WORD rash_gfx_45
		.WORD rash_gfx_46
		.WORD rash_gfx_47
		.WORD rash_gfx_48
		.WORD rash_gfx_49
		.WORD rash_gfx_50
		.WORD rash_gfx_51
		.WORD rash_gfx_52
		.WORD rash_gfx_53
		.WORD rash_gfx_54
		.WORD rash_gfx_55
		.WORD rash_gfx_56
		.WORD rash_gfx_55
		.WORD rash_gfx_53
		.WORD rash_gfx_53
		.WORD rash_gfx_53
		.WORD rash_gfx_54
		.WORD rash_gfx_57
		.WORD rash_gfx_58
		.WORD rash_gfx_59
		.WORD rash_gfx_60
		.WORD rash_gfx_61
		.WORD rash_gfx_64
		.WORD rash_gfx_62
		.WORD rash_gfx_62
		.WORD rash_gfx_62
		.WORD rash_gfx_62
		.WORD rash_gfx_63
		.WORD rash_gfx_65
		.WORD rash_gfx_66
		.WORD rash_gfx_67
		.WORD rash_gfx_67
		.WORD rash_gfx_68
		.WORD rash_gfx_69
		.WORD rash_gfx_70
		.WORD rash_gfx_71
		.WORD rash_gfx_72
		.WORD rash_gfx_72
		.WORD rash_gfx_73
		.WORD rash_gfx_74
		.WORD rash_gfx_75
		.WORD rash_gfx_76
		.WORD rash_gfx_77
		.WORD rash_gfx_78
		.WORD rash_gfx_79
		.WORD rash_gfx_80
		.WORD rash_gfx_81
		.WORD rash_gfx_82
		.WORD rash_gfx_83
		.WORD rash_gfx_84
		.WORD rash_gfx_85
		.WORD rash_gfx_86
		.WORD rash_gfx_56	; rash koleso 1
		.WORD rash_gfx_87	; rash koleso 2
		.WORD rash_gfx_87	; rash koleso 3
		.WORD rash_gfx_56	; rash koleso 4
		.WORD tmp_buffer	; RAM:0680

; =============== S U B	R O U T	I N E =======================================


some_levels_init_part?:			; ...
		LDA	PPU_STATUS	; loc_3000_CDD9
		LDX	#0
		LDY	Level_ID
		CPY	#terra_tubes
		BNE	loc_2000_FF57
		LDA	#$1A
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$60		; #$1A60
		JSR	read_from_vram
		LDA	#$1B		; #$1BC0
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$C0
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	PPU_DATA	; VRAM I/O Register (RW)

loc_2000_FF45:				; ...
		LDA	tmp_buffer,X
		STA	level_ram1,X
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		STA	level_ram2,X
		INX
		CPX	#$40
		BNE	loc_2000_FF45
		RTS
; ---------------------------------------------------------------------------

loc_2000_FF57:				; ...
		LDA	#$16
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$C0		; #$16C0
		CPY	#armageddon
		BEQ	loc_2000_FF66
		CPY	#clinger_winger
		BNE	read_from_vram

loc_2000_FF66:				; ...
		LDA	#$80		; #$1680
; End of function some_levels_init_part?


; =============== S U B	R O U T	I N E =======================================


read_from_vram:				; ...
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	PPU_DATA	; VRAM I/O Register (RW)

loc_2000_FF6E:				; ...
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		STA	tmp_buffer,X
		INX
		BNE	loc_2000_FF6E
		RTS
; End of function read_from_vram

; ---------------------------------------------------------------------------
 .PAD $FF78,$FF

bank2_end:				; ...
		STA	banks_ids2+3
		JSR	bank2_end+1
		LDA	#0
		STA	banks_ids2
		RTS
; ---------------------------------------------------------------------------
		STA	prev_bank_id_m	; saves	mirror,	when jump from bank 0 to bank3 to music	f
		AND	#$10
		ORA	#3
		TAY
		STA	banks_ids2,Y
		JSR	bank2_end+1
		LDA	prev_bank_id_m	; saves	mirror,	when jump from bank 0 to bank3 to music	f
		TAY
		STA	banks_ids2,Y
		RTS
; ---------------------------------------------------------------------------

NMI2:					; ...
		STX	NMI_Xreg_saver
		STA	NMI_Areg_saver
		LDA	#2
		LDX	#0
		STX	banks_ids2
		JMP	bank2_end
; ---------------------------------------------------------------------------
		LDX	NMI_Xreg_saver
		LDA	previous_bankID_NMI
		TAY
		STA	banks_ids2,Y
		LDY	NMI_Yreg_saver
		LDA	NMI_Areg_saver
		RTI
; ---------------------------------------------------------------------------
banks_ids2:	.BYTE 0, 1, 2, 3, 4, 5,	6, 7, 8, 9, $A,	$B, $C,	$D, $E,	$F, $10, $11, $12, $13,	$14, $15, $16, $17 ; ...

; =============== S U B	R O U T	I N E =======================================


jump_from_bank2:			; ...
		LDA	#0
		ORA	#2
		STA	previous_bankID
		LDA	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		PHA
		STX	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		LDA	banks_ids2,Y
		STA	banks_ids2,Y
		JSR	sub_2000_8000
		LDY	previous_bankID
		PLA
		STA	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		LDA	banks_ids2,Y
		STA	banks_ids2,Y
		RTS
; End of function jump_from_bank2

; ---------------------------------------------------------------------------

wait2:					; ...
		DEX
		BNE	wait2
		DEY
		BNE	wait2
		RTS
; ---------------------------------------------------------------------------

loc_2000_FFF2:				; ...
		LDA	#0
		STA	banks_ids2
		JMP	loc_2000_FFF2
; ---------------------------------------------------------------------------
		.WORD NMI2
		.WORD loc_2000_FFF2
		.WORD bank2_end
; end of 'BANK2'

.base $8000
; ===========================================================================

; Segment type:	Pure code
		;.segment BANK3

; =============== S U B	R O U T	I N E =======================================


sub_3000_8000:				; ...
		JMP	(JumpTable_ptr_main) ; указатель на функцию при	переходе в другой банк
; End of function sub_3000_8000

; ---------------------------------------------------------------------------
		JMP	start_play_music ; BANK0:8387
; ---------------------------------------------------------------------------
		JMP	playing_music	; 6
; ---------------------------------------------------------------------------
		JMP	start_play_pcm	; 9
; ---------------------------------------------------------------------------
		JMP	set_play_sound_ch1 ; C
; ---------------------------------------------------------------------------
		JMP	set_play_sound_ch2 ; F
; ---------------------------------------------------------------------------
		JMP	set_play_sound_ch3 ; 12
; ---------------------------------------------------------------------------
		JMP	set_play_sound_ch4 ; 15
; ---------------------------------------------------------------------------
		JMP	other_play_pcm
; ---------------------------------------------------------------------------
		JMP	other_play_pcm
; ---------------------------------------------------------------------------
		JMP	level_config_reading
; ---------------------------------------------------------------------------
		JMP	read_lvl_obj_cfg
; ---------------------------------------------------------------------------
		JMP	sub_3000_D263
; ---------------------------------------------------------------------------
		JMP	sub_3000_D270
; ---------------------------------------------------------------------------
		JMP	load_lvl_obj_config
; ---------------------------------------------------------------------------
		JMP	sub_3000_CD97
; ---------------------------------------------------------------------------
		JMP	sub_3000_CDC4
; ---------------------------------------------------------------------------
		JMP	sub_3000_CE45
; ---------------------------------------------------------------------------
		JMP	sub_3000_CF17
; ---------------------------------------------------------------------------
		JMP	restart_on_bikes
; ---------------------------------------------------------------------------
		JMP	restart_on_checkpoint
; ---------------------------------------------------------------------------
		JMP	sub_3000_D099
; ---------------------------------------------------------------------------
		JMP	sub_3000_CF1E
; ---------------------------------------------------------------------------
		JMP	background_vs_sprites_pos
; ---------------------------------------------------------------------------
		JMP	update_info_scores_lifes
; ---------------------------------------------------------------------------
		JMP	update_info_scores_lifes_check
; ---------------------------------------------------------------------------
		JMP	load_lvl_obj_config
; ---------------------------------------------------------------------------
		JMP	sub_3000_CF17

; =============== S U B	R O U T	I N E =======================================


karnath_lair_vram_updates:		; ...
		LDA	#$1D
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$E1
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#2
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	karnath_gfx_base
		ASL	A
		ASL	A
		ASL	A
		ASL	A

karnath_vram_updates_loop1:		; ...
		TAY
		LDA	byte_3000_8300,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDX	byte_3000_8302,Y
		STX	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_8304,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_8301,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STX	PPU_DATA	; VRAM I/O Register (RW)
		STX	PPU_DATA	; VRAM I/O Register (RW)
		STX	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_8303,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STX	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_8305,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_8308,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDX	byte_3000_830A,Y
		STX	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_830C,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_8309,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STX	PPU_DATA	; VRAM I/O Register (RW)
		STX	PPU_DATA	; VRAM I/O Register (RW)
		STX	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_830B,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STX	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_830D,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_8302,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_8303,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_830A,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_830B,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDX	#$AA
		STX	PPU_DATA	; VRAM I/O Register (RW)
		LDA	#$55
		AND	byte_3000_8302,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_8302,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_8300,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_8307,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_8306,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_8303,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_8301,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		STX	PPU_DATA	; VRAM I/O Register (RW)
		LDA	#$55
		AND	byte_3000_830A,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_830A,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_8308,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_830F,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_830E,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_830B,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_8309,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		DEC	tmp_var_15	;  / Object Counter / various tmp
		BEQ	karnath_lair_vram_updates2
		LDA	#$1E
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$41
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		TYA
		EOR	#$F0
		JMP	karnath_vram_updates_loop1
; ---------------------------------------------------------------------------

karnath_lair_vram_updates2:		; ...
		LDA	#$14
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDA	karnath_gfx_base
		AND	#$F
		TAX
		LDY	byte_3000_8500,X
		LDA	byte_3000_84F0,X
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	byte_3000_84E0,X
		TAX

karnath_vram_updates_loop2:		; ...
		LDA	#$1C
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	byte_3000_8400,Y
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$45
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	#$1C
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	byte_3000_8400,Y
		ORA	#8
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	byte_3000_8405,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	#$1C
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	byte_3000_8401,Y
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$44
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	#$FF
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	#$46
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	#$1C
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	byte_3000_8401,Y
		ORA	#8
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	byte_3000_8510,X
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_8511,X
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_8512,X
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	#$1C
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	byte_3000_8402,Y
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	byte_3000_8516,X
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_8517,X
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_3000_8518,X
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	#$1C
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	byte_3000_8403,Y
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#0
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	#$1C
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	byte_3000_8403,Y
		ORA	#8
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#0
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	#$1C
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	byte_3000_8404,Y
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#5
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	#$1C
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	byte_3000_8404,Y
		ORA	#8
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	byte_3000_8406,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		CPY	#$70
		BCS	end_karnath_vram_upd
		TYA
		ADC	#$70
		TAY
		LDX	tmp_var_15	;  / Object Counter / various tmp
		JMP	karnath_vram_updates_loop2
; ---------------------------------------------------------------------------

end_karnath_vram_upd:			; ...
		LDA	#$10
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		RTS
; End of function karnath_lair_vram_updates

; ---------------------------------------------------------------------------
		.BYTE $FF, $FF,	$FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF,	$FF
		.BYTE $FF, $FF,	$FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF,	$FF
byte_3000_8300:	.BYTE $7F		; ...
byte_3000_8301:	.BYTE 0			; ...
byte_3000_8302:	.BYTE $FF		; ...
byte_3000_8303:	.BYTE 0			; ...
byte_3000_8304:	.BYTE $AA		; ...
byte_3000_8305:	.BYTE $55		; ...
byte_3000_8306:	.BYTE 0			; ...
byte_3000_8307:	.BYTE 0			; ...
byte_3000_8308:	.BYTE $FC		; ...
byte_3000_8309:	.BYTE 0			; ...
byte_3000_830A:	.BYTE $FE		; ...
byte_3000_830B:	.BYTE 0			; ...
byte_3000_830C:	.BYTE $AA		; ...
byte_3000_830D:	.BYTE $54		; ...
byte_3000_830E:	.BYTE 0			; ...
byte_3000_830F:	.BYTE 0, $1F, 0, $BF, $80, $AA,	$95, 0,	$80, $FF, 0, $FF, 0, $AA, $55, 0, 0, $C7, $C0, $EF, $E0, $AA, $E5, $40,	$A0 ; ...
		.BYTE $FF, 0, $FF, 0, $AA, $55,	0, 0, $F9, $F0,	$FB, $F8, $AA, $F9, $50, $A8, $FF, 0, $FF, 0, $AA, $55,	0, 0, $FC, $FC
		.BYTE $FE, $FE,	$AA, $FE, $54, $AA, $7F, 0, $FF, 0, $AA, $55, 0, 0, $FF, $FF, $FF, $FF,	$AA, $FF, $55, $AA, $1F, 0, $BF
		.BYTE $80, $AA,	$95, 0,	$80, $FF, $FF, $FF, $FF, $AA, $FF, $55,	$AA, $C7, $C0, $EF, $E0, $AA, $E5, $40,	$A0, $FF, $FF
		.BYTE $FF, $FF,	$AA, $FF, $55, $AA, $F1, $F0, $FB, $F8,	$AA, $F9, $50, $A8, $7F, $7F, $FF, $FF,	$AA, $FF, $55, $AA, $FC
		.BYTE $FC, $FE,	$FE, $AA, $FE, $54, $AA, $1F, $1F, $BF,	$3F, $AA, $3F, $15, $2A, $FF, $FF, $FF,	$FF, $AA, $FF, $55, $AA
		.BYTE $C7, 7, $EF, $F, $AA, $4F, 5, $A,	$FF, $FF, $FF, $FF, $AA, $FF, $55, $AA,	$F1, 1,	$FB, 3,	$AA, $53, 1, 2,	$FF
		.BYTE $FF, $FF,	$FF, $AA, $FF, $55, $AA, $FC, 0, $FE, 0, $AA, $54, 0, 0, $7F, $7F, $FF,	$FF, $AA, $FF, $55, $AA, $FF
		.BYTE 0, $FF, 0, $AA, $55, 0, 0, $1F, $1F, $BF,	$3F, $AA, $3F, $15, $2A, $FF, 0, $FF, 0, $AA, $55, 0, 0, $C7, 7, $EF
		.BYTE $F, $AA, $4F, 5, $A, $FF,	0, $FF,	0, $AA,	$55, 0,	0, $F1,	1, $FB,	3, $AA,	$53, 1,	2
byte_3000_8400:	.BYTE $B7		; ...
byte_3000_8401:	.BYTE $A0		; ...
byte_3000_8402:	.BYTE $A9		; ...
byte_3000_8403:	.BYTE $A2		; ...
byte_3000_8404:	.BYTE $A3		; ...
byte_3000_8405:	.BYTE $3A		; ...
byte_3000_8406:	.BYTE $3A, $A1,	$A2, $AB, $A4, $A5, $7F, $3A, $A3, $A4,	$AD, $A6, $A7, $7F, $3A, $A5, $A6, $AF,	$B0, $B1, $7F, $3A, $A7	; ...
		.BYTE $B0, $B9,	$B2, $B3, $7F, $3A, $B1, $B2, $BB, $B4,	$B5, $7F, $3A, $B3, $B4, $BD, $B6, $B7,	$7F, $3A, $B5, $B6, $BF
		.BYTE $A0, $A1,	$7F, $3A, $B7, $A0, $A9, $A2, $A3, $7F,	$3F, $A1, $A2, $AB, $A4, $A5, $3A, $3F,	$A3, $A4, $AD, $A6, $A7
		.BYTE $3A, $3F,	$A5, $A6, $AF, $B0, $B1, $3A, $3F, $A7,	$B0, $B9, $B2, $B3, $3A, $3F, $B1, $B2,	$BB, $B4, $B5, $3A, $3F
		.BYTE $B3, $B4,	$BD, $B6, $B7, $3A, $3F, $B5, $B6, $BF,	$A0, $A1, $3A, $3F, $41, $40, $5F, $56,	$55, $3A, $3A, $57, $56
		.BYTE $5D, $54,	$53, $7F, $3A, $55, $54, $5B, $52, $51,	$7F, $3A, $53, $52, $59, $50, $47, $7F,	$3A, $51, $50, $4F, $46
		.BYTE $45, $7F,	$3A, $47, $46, $4D, $44, $43, $7F, $3A,	$45, $44, $4B, $42, $41, $7F, $3A, $43,	$42, $49, $40, $57, $7F
		.BYTE $3F, $41,	$40, $5F, $56, $55, $7F, $3F, $57, $56,	$5D, $54, $53, $3A, $3F, $55, $54, $5B,	$52, $51, $3A, $3F, $53
		.BYTE $52, $59,	$50, $47, $3A, $3F, $51, $50, $4F, $46,	$45, $3A, $3F, $47, $46, $4D, $44, $43,	$3A, $3F, $45, $44, $4B
		.BYTE $42, $41,	$3A, $3F, $43, $42, $49, $40, $57, $3A,	$3A
byte_3000_84E0:	.BYTE 0, 0, 0, 0, 0, 0,	0, 0, 3, 3, 3, 3, 3, 3,	3, 3 ; ...
byte_3000_84F0:	.BYTE $C, 0, 0,	0, 0, 0, 0, 0, $F, 3, 3, 3, 3, 3, 3, 3 ; ...
byte_3000_8500:	.BYTE 0, 7, $E,	$15, $1C, $23, $2A, $31, $38, $3F, $46,	$4D, $54, $5B, $62, $69	; ...
byte_3000_8510:	.BYTE $7F		; ...
byte_3000_8511:	.BYTE $FF		; ...
byte_3000_8512:	.BYTE $46, $3B,	0, 0	; ...
byte_3000_8516:	.BYTE $3F		; ...
byte_3000_8517:	.BYTE $FF		; ...
byte_3000_8518:	.BYTE $86, $3B,	0, 0, $3B, 0, 0, $7F, $FF, $46,	$3F, $FF, $86, $3B, 0, 0, $A5, $51, $F0, $FC, $4C, $2C,	$85 ; ...

; =============== S U B	R O U T	I N E =======================================


start_play_pcm:				; ...
		LDA	#3		; sub_0_84E8
		JSR	set_pcm_ptr	; set pcm func bits
		LDA	nmi_pcm_flags
		AND	#$7F
		JMP	loc_3000_8541
; ---------------------------------------------------------------------------

other_play_pcm:				; ...
		LDA	nmi_pcm_flags
		AND	#$7F
		STA	nmi_pcm_flags

loc_3000_8541:				; ...
		TAY
		LDA	pcm_info2	; time?
		STA	pcm_info2_cnt	; length timer?
		LDA	pcm_dat_by_flag	- 1,Y
		STA	pcm_dat_off
		DEY
		BEQ	pcm_play_m2_
		DEY
		BEQ	pcm_play_m3_
		JMP	pcm_play_m1
; ---------------------------------------------------------------------------

pcm_play_m3_:				; ...
		JMP	pcm_play_m3
; ---------------------------------------------------------------------------

pcm_play_m2_:				; ...
		JMP	pcm_play_m2
; End of function start_play_pcm

; ---------------------------------------------------------------------------
pcm_dat_by_flag:.BYTE 0, 0, 0, $44	; ...

; =============== S U B	R O U T	I N E =======================================

; set pcm func bits

set_pcm_ptr:				; ...
		CLC
		ADC	#<sub_3000_856D
		STA	jump_ptr_pcm
		LDA	#>sub_3000_856D
		ADC	#0		; 856d
		STA	jump_ptr_pcm+1
		RTS
; End of function set_pcm_ptr


; =============== S U B	R O U T	I N E =======================================


play_pcm:				; ...
		JMP	(jump_ptr_pcm)
; End of function play_pcm


; =============== S U B	R O U T	I N E =======================================


sub_3000_856D:				; ...
		LSR	A		; 4 bit
		LSR	A
		LSR	A
		STA	pAPU_Delta_Modulation_DA_Reg ; pAPU Delta Modulation D/A Register (W)
		LDX	wait_after_pcm_cnt

loc_3000_8575:				; ...
		DEX
		BNE	loc_3000_8575
		INC	RandomValue_4
		LDA	pcm_unknown
		BEQ	locret_3000_8580
		STX	pcm_unknown

locret_3000_8580:			; ...
		RTS
; End of function sub_3000_856D

; ---------------------------------------------------------------------------
sample1_dat1:	.BYTE 0			; ...
sample1_dat2:	.BYTE $F		; ...
		.BYTE  $8F, $98
		.BYTE	 0, $10
		.BYTE  $D3, $7D
		.BYTE  $22,   3
		.BYTE  $D4,   0
		.BYTE	$F,   2
		.BYTE  $22, $98
		.BYTE  $8F,   1
		.BYTE  $74, $98
		.BYTE  $9A, $75
		.BYTE  $7B, $79
		.BYTE  $9D, $7D
		.BYTE  $9A, $5F
		.BYTE	 0,   7
		.BYTE  $7C, $53
		.BYTE  $4C,  $F
		.BYTE  $52, $34
		.BYTE  $3C,  $F
		.BYTE  $30, $12
		.BYTE  $12,   1
		.BYTE  $38, $1F
		.BYTE	 0,   3
		.BYTE  $50, $18
		.BYTE  $2C,  $E
		.BYTE  $30, $18
		.BYTE  $6C, $67
		.BYTE  $35, $18
		.BYTE  $3F, $34
		.BYTE  $57, $34
		.BYTE  $2C,   8
		.BYTE  $4E, $4E
		.BYTE  $8C, $4F
		.BYTE	 0,   0
		.BYTE	 0,  $F
		.BYTE  $38, $68
		.BYTE  $8B, $A7
		.BYTE  $73, $68
		.BYTE  $E8, $8A
		.BYTE  $85, $53
		.BYTE  $43, $D3
		.BYTE  $B6, $82
		.BYTE  $5C, $E7
		.BYTE  $44, $C1
		.BYTE  $78, $22
		.BYTE  $6B, $7E
		.BYTE  $24, $22
		.BYTE  $AB, $4B
		.BYTE  $44, $F4
		.BYTE  $F2, $73
		.BYTE  $7E, $6E
		.BYTE  $4C,   8
		.BYTE  $76, $5F
		.BYTE  $6F, $4D
		.BYTE  $68, $58
		.BYTE  $34, $13
		.BYTE  $F3, $4E
		.BYTE  $A1,   0
		.BYTE	 7, $32
		.BYTE  $88, $B5
		.BYTE	 0,   3
		.BYTE  $4F, $56
		.BYTE  $52, $74
		.BYTE	 0,   1
		.BYTE  $69, $68
		.BYTE  $4D, $3D
		.BYTE  $6A, $82
		.BYTE  $63, $67
		.BYTE  $48, $56
		.BYTE  $4D, $48
		.BYTE  $25, $A2
		.BYTE  $79, $39
		.BYTE  $F1, $24
		.BYTE  $35, $3B
		.BYTE  $5B, $3B
		.BYTE  $44, $82
		.BYTE  $38, $34
		.BYTE  $4C, $3F
		.BYTE  $59, $2A
		.BYTE  $3A, $3C
		.BYTE  $4E, $48
		.BYTE  $2C, $1C
		.BYTE  $39, $2A
		.BYTE  $2C, $19
		.BYTE  $2E, $2C
		.BYTE  $2E,  $F
		.BYTE  $18, $18
		.BYTE  $2C,  $F
		.BYTE  $11,  $C
		.BYTE  $2C,  $E
		.BYTE  $1C,  $F
		.BYTE  $18,  $C
		.BYTE  $2A,  $F
		.BYTE	 0,   0
sample2_dat1:	.BYTE $6F		; ...
sample2_dat2:	.BYTE $FF		; ...
sample2_dat3:	.BYTE 4			; ...
		.BYTE  $40, $FF, $1C
		.BYTE  $13, $48, $40
		.BYTE  $4F, $FF, $20
		.BYTE  $18, $38, $60
		.BYTE  $4F, $FF, $20
		.BYTE  $20, $50, $48
		.BYTE  $30,   0, $18
		.BYTE  $50,   0, $40
		.BYTE  $40, $30, $FF
		.BYTE  $11,  $C, $FF
		.BYTE	 0
sample_dat:	.BYTE $10, $7F,	7, $F0,	$20, $1E, $17, $94, $20, $10, $17, $8E,	$16, $C, $1C, $8A, $1E,	9, $28,	$87, $28, 8, $28, $86 ;	...
		.BYTE $28, 7, $30, $85,	$30, 6,	$38, $85, $26, 6, $38, $84, $27, 5, $D0, $83, $40, 3, $E0, $83,	$60, 3,	$70, $82, $E0
		.BYTE 2, $60, $82, $C0,	2, $F0,	$82, $F0, 1, $F0, $82, $F0, 1, $D4, $82, $7F, 1, $70, $81
		.BYTE 0			; 44
		.BYTE 0

; =============== S U B	R O U T	I N E =======================================


return_to_bank0:			; ...
		PLA
		PLA
		LDY	#0
		JMP	loc_3000_FFE1
; End of function return_to_bank0


; =============== S U B	R O U T	I N E =======================================


pcm_play_m2:				; ...
		LDY	#$54

loc_3000_86AE:				; ...
		JSR	random3
		AND	#$F
		ADC	#$3C		; 3c-4b
		JSR	play_pcm	; udar
		DEY
		BNE	loc_3000_86AE
		STY	pcm_play_var_43	; clear
		STY	pcm_play_var_44
		STY	pcm_play_var_49
		STY	pcm_play_var_4A
		STY	pcm_play_var_4B
		STY	pcm_play_var_4D
		LDA	#$F0
		STA	pcm_play_var_4C
		LDA	#$3F
		STA	pcm_play_var_4E
		BNE	loc_3000_86FE	; jump

pcm_play_m2_loop:			; ...
		DEC	pcm_play_var_48
		BMI	loc_3000_86E2
		LDA	pcm_play_var_4B
		CLC
		ADC	pcm_play_var_49
		STA	pcm_play_var_4B
		LDA	pcm_play_var_4C
		ADC	pcm_play_var_4A
		STA	pcm_play_var_4C

loc_3000_86E2:				; ...
		LDA	pcm_play_var_4B
		CLC
		ADC	pcm_play_var_4D
		STA	pcm_play_var_4D
		LDA	pcm_play_var_4E
		STA	pcm_play_var_47
		ADC	pcm_play_var_4C
		STA	pcm_play_var_4E
		EOR	pcm_play_var_43
		JSR	play_pcm
		LDA	pcm_play_var_4E
		EOR	pcm_play_var_47
		AND	#$40
		BEQ	pcm_play_m2_loop

loc_3000_86FE:				; ...
		DEC	pcm_info2_cnt	; length timer?
		BEQ	end_play_pcm_loop
		LDX	pcm_dat_off
		LDA	sample_dat,X
		STA	pcm_play_var_47
		AND	#$7F
		BEQ	end_play_pcm_loop
		STA	pcm_play_var_48
		INX
		LDA	#0
		STA	pcm_play_var_4A
		LDA	sample_dat,X
		BPL	loc_3000_8721
		DEC	pcm_play_var_4A
		LDA	#$80
		SEC
		SBC	sample_dat,X

loc_3000_8721:				; ...
		INX
		STX	pcm_dat_off
		ASL	pcm_play_var_47
		ROL	A
		ROL	pcm_play_var_4A
		ASL	A
		ROL	pcm_play_var_4A
		ASL	A
		ROL	pcm_play_var_4A
		STA	pcm_play_var_49
		LDA	pcm_play_var_44
		ADC	pcm_info1	; some add value
		STA	pcm_play_var_44
		BCC	pcm_play_m2_loop
		INC	pcm_play_var_43
		BNE	pcm_play_m2_loop

end_play_pcm_loop:			; ...
		JMP	return_to_bank0
; End of function pcm_play_m2


; =============== S U B	R O U T	I N E =======================================


pcm_play_m1:				; ...
		LDX	#0
		STX	pcm_play_var_44
		LDX	#$1F
		CMP	#0
		BEQ	loc_3000_874C
		LDX	#$F

loc_3000_874C:				; ...
		STX	pcm_play_var_43
		LDA	#$3F
		STA	pcm_play_var_4E
		BNE	loc_3000_876A	; jump

pcm_play_m1_loop:			; ...
		LDA	pcm_play_var_4C
		CLC
		ADC	pcm_play_var_4E
		STA	pcm_play_var_4E
		JSR	random3
		AND	pcm_play_var_4A
		EOR	pcm_play_var_4E
		INX
		JSR	play_pcm
		DEC	pcm_play_var_48
		BPL	pcm_play_m1_loop

loc_3000_876A:				; ...
		DEC	pcm_info2_cnt	; length timer?
		BEQ	end_play_pcm_loop
		LDX	pcm_dat_off
		LDA	sample1_dat1,X
		BNE	loc_3000_8781
		LDA	sample1_dat2,X
		BEQ	end_play_pcm_loop
		STA	pcm_play_var_4A
		INX
		INX
		LDA	sample1_dat1,X

loc_3000_8781:				; ...
		AND	pcm_play_var_43
		STA	pcm_play_var_48
		LDA	sample1_dat1,X
		INX
		STX	pcm_dat_off
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		LDX	pcm_play_var_43
		CPX	#$F
		BEQ	loc_3000_8796
		LSR	A

loc_3000_8796:				; ...
		EOR	pcm_play_var_44
		STA	pcm_play_var_4C
		LDA	pcm_play_var_44
		EOR	#$FF
		STA	pcm_play_var_44
		JMP	pcm_play_m1_loop
; End of function pcm_play_m1


; =============== S U B	R O U T	I N E =======================================


pcm_play_m3:				; ...
		LDY	#0
		BEQ	loc_3000_87D9	; jump

pcm_play_m3_loop:			; ...
		LDA	#$7F
		STA	pcm_play_var_47
		LDA	pcm_play_var_4C

loc_3000_87AD:				; ...
		ASL	A
		BMI	loc_3000_87B4
		LSR	pcm_play_var_47
		BCC	loc_3000_87AD

loc_3000_87B4:				; ...
		JSR	random3
		AND	pcm_play_var_47

loc_3000_87B9:				; ...
		SBC	pcm_play_var_4C
		BCS	loc_3000_87B9
		ADC	pcm_play_var_4C
		STA	pcm_play_var_47
		LDA	pcm_play_var_4C
		EOR	#$7F
		LSR	A
		ADC	pcm_play_var_47
		JSR	play_pcm
		LDA	pcm_play_var_4B
		SBC	pcm_play_var_49
		STA	pcm_play_var_4B
		BCS	loc_3000_87D5
		DEC	pcm_play_var_4C

loc_3000_87D5:				; ...
		DEC	pcm_play_var_48
		BNE	pcm_play_m3_loop

loc_3000_87D9:				; ...
		DEC	pcm_info2_cnt	; length timer?
		BEQ	end_play_pcm_loop_
		LDX	pcm_dat_off
		LDA	sample2_dat1,X
		BEQ	end_play_pcm_loop_
		STA	pcm_play_var_4C
		LDA	sample2_dat2,X
		STA	pcm_play_var_49
		LDA	sample2_dat3,X
		STA	pcm_play_var_48
		INX
		INX
		INX
		STX	pcm_dat_off
		BNE	pcm_play_m3_loop

end_play_pcm_loop_:			; ...
		JMP	return_to_bank0
; End of function pcm_play_m3


; =============== S U B	R O U T	I N E =======================================


random3:				; ...
		LDA	RandomValue_1
		EOR	RandomValue_4
		ADC	RandomValue_3
		STA	RandomValue_2
		LDA	RandomValue_3
		ROL	A
		SBC	RandomValue_4
		STA	RandomValue_3
		EOR	RandomValue_2
		STA	RandomValue_1
		RTS
; End of function random3


; =============== S U B	R O U T	I N E =======================================


start_play_music:			; ...
		LDA	music_id_and_play_cnt ;	BANK0:8387
		TAY
		ASL	A
		ASL	A
		ASL	A
		STA	snd_tmp_var_39	; mtrack_id *8
		LDX	#0
		STX	music_id_and_play_cnt
		STX	pcm_info2	; time?
		STX	pcm_info1	; some add value
		LDA	music_info_tbl,Y
		STA	music_speed
		LDA	#3
		JSR	set_pcm_ptr	; set pcm func bits

loc_3000_8828:				; ...
		TYA
		STA	music_active_flag,X ; channel is used
		LDY	snd_tmp_var_39	; mtrack_id *8
		LDA	music_dat_ptrs,Y
		STA	music_track_ptr_l,X
		LDA	music_dat_ptrs+1,Y
		STA	music_track_ptr_h,X
		LDA	#1
		STA	music_ch_wait_cnt?,X
		LDA	#0
		STA	byte_0_351,X
		STA	byte_0_361,X
		STA	byte_0_3A1,X
		STA	byte_0_354,X
		STA	byte_0_3A2,X
		STA	byte_0_3A3,X
		STA	byte_0_3A4,X
		LDY	snd_tmp_var_39	; mtrack_id *8
		INY
		INY			; next music channel ptr
		STY	snd_tmp_var_39	; mtrack_id *8
		INX
		INX
		INX
		INX
		CPX	#$10
		BCC	loc_3000_8828
		RTS
; End of function start_play_music


; =============== S U B	R O U T	I N E =======================================


playing_music:				; ...
		LDA	music_id_and_play_cnt
		CLC
		ADC	music_speed
		STA	music_id_and_play_cnt
		ROR	A
		STA	music_play_upd_flag
		LDX	#0

loc_3000_8871:				; ...
		LDA	music_active_flag,X ; channel is used
		BEQ	loc_3000_8879
		JSR	music_playing_sub

loc_3000_8879:				; ...
		LDA	sounds_ids,X
		BEQ	loc_3000_8881
		JSR	sound_playing

loc_3000_8881:				; ...
		INX
		INX
		INX
		INX
		CPX	#$10
		BCC	loc_3000_8871

locret_3000_8889:			; ...
		RTS
; End of function playing_music


; =============== S U B	R O U T	I N E =======================================


music_playing_sub:			; ...
		LDA	music_play_upd_flag
		BMI	loc_3000_8891
		JMP	loc_3000_8948
; ---------------------------------------------------------------------------

loc_3000_8891:				; ...
		DEC	music_ch_wait_cnt?,X
		BNE	locret_3000_8889
		LDA	#0
		STA	byte_0_3A1,X
		LDA	byte_0_3A2,X
		BEQ	loc_3000_88B0
		BMI	loc_3000_88B0
		EOR	byte_0_3A3,X
		STA	byte_0_3A3,X
		JSR	sub_3000_8C08
		LDA	#0
		STA	byte_0_393,X

loc_3000_88B0:				; ...
		LDA	byte_0_371,X
		BEQ	set_tmp_mtrack_ptr
		AND	#$7F
		STA	byte_0_352,X
		LDA	#1
		STA	byte_0_393,X
		LDA	byte_0_392,X
		STA	byte_0_353,X

set_tmp_mtrack_ptr:			; ...
		LDA	music_track_ptr_l,X
		STA	snd_data_ptr_tmp ; ptr to rom track data
		LDA	music_track_ptr_h,X
		STA	snd_data_ptr_tmp+1 ; ptr to rom	track data

read_track_loop1:			; ...
		LDY	#$FF

read_track_loop2:			; ...
		INY

read_track_loop3:			; ...
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		BMI	loc_3000_88D9
		JMP	loc_3000_8B68
; ---------------------------------------------------------------------------

loc_3000_88D9:				; ...
		CMP	#$80
		BEQ	loc_3000_88E1
		CLC
		ADC	byte_0_354,X

loc_3000_88E1:				; ...
		ASL	A
		STY	snd_tmp_var_39
		TAY
		LDA	byte_0_361,X
		LSR	A
		ADC	#0
		STA	byte_0_362,X
		LDA	noteTable,Y
		CPX	#$C
		BNE	loc_3000_88FB
		TYA
		BEQ	loc_3000_88FB
		SBC	#$82
		LSR	A

loc_3000_88FB:				; ...
		STA	sounds_r_4002,X
		LDA	sounds_r_4003,X
		AND	#$F8
		CPX	#$C
		BEQ	loc_3000_890A
		ORA	noteTable+1,Y

loc_3000_890A:				; ...
		STA	sounds_r_4003,X
		LDA	byte_0_3A2,X
		BPL	loc_3000_8923
		LDY	snd_tmp_var_39
		INY
		STY	snd_tmp_var_39
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		ORA	#$10
		JSR	sub_3000_8C08
		LDA	#0
		STA	byte_0_393,X

loc_3000_8923:				; ...
		LDA	sounds_ids,X
		BNE	loc_3000_892B
		JSR	sub_3000_8A55

loc_3000_892B:				; ...
		LDY	snd_tmp_var_39
		LDA	byte_0_351,X
		BNE	loc_3000_8935
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data

loc_3000_8935:				; ...
		STA	music_ch_wait_cnt?,X
		INY
		TYA
		CLC
		ADC	snd_data_ptr_tmp ; ptr to rom track data
		STA	music_track_ptr_l,X
		LDA	snd_data_ptr_tmp+1 ; ptr to rom	track data
		ADC	#0
		STA	music_track_ptr_h,X
		RTS
; ---------------------------------------------------------------------------

loc_3000_8948:				; ...
		LDA	sounds_r_4003,X
		STA	snd_tmp_var_3A
		LDA	byte_0_3A1,X
		BEQ	loc_3000_899A
		LDA	byte_0_382,X
		BEQ	loc_3000_895C
		DEC	byte_0_382,X
		BNE	loc_3000_899A

loc_3000_895C:				; ...
		DEC	byte_0_374,X
		BNE	loc_3000_899A
		LDA	byte_0_3A1,X
		STA	byte_0_374,X
		DEC	byte_0_381,X
		BNE	loc_3000_8971
		LDA	#0
		STA	byte_0_3A1,X

loc_3000_8971:				; ...
		LDY	#$FF
		LDA	byte_0_384,X
		BEQ	loc_3000_8986
		DEC	byte_0_384,X
		LDA	byte_0_383,X
		SEC
		SBC	#1
		EOR	#$FF
		JMP	loc_3000_8989
; ---------------------------------------------------------------------------

loc_3000_8986:				; ...
		LDA	byte_0_383,X

loc_3000_8989:				; ...
		BMI	loc_3000_898C
		INY

loc_3000_898C:				; ...
		CLC
		ADC	sounds_r_4002,X
		STA	sounds_r_4002,X
		TYA
		ADC	sounds_r_4003,X
		STA	sounds_r_4003,X

loc_3000_899A:				; ...
		LDA	byte_0_361,X
		BEQ	loc_3000_89E0
		DEC	byte_0_364,X
		BNE	loc_3000_89E0
		LDA	byte_0_363,X
		STA	byte_0_364,X
		LDA	sounds_r_4003,X
		AND	#7
		ORA	sounds_r_4002,X
		BEQ	loc_3000_89E0
		LDY	#0
		LDA	byte_0_344,X
		BPL	loc_3000_89BC
		DEY

loc_3000_89BC:				; ...
		CLC
		ADC	sounds_r_4002,X
		STA	sounds_r_4002,X
		TYA
		ADC	sounds_r_4003,X
		STA	sounds_r_4003,X
		DEC	byte_0_362,X
		BNE	loc_3000_89E0
		LDA	byte_0_361,X
		STA	byte_0_362,X
		DEC	byte_0_344,X
		LDA	byte_0_344,X
		EOR	#$FF
		STA	byte_0_344,X

loc_3000_89E0:				; ...
		LDA	byte_0_393,X
		BEQ	loc_3000_8A4F
		CMP	#2
		BEQ	loc_3000_89F5
		LDA	byte_0_353,X
		CMP	#1
		BEQ	loc_3000_89F5
		DEC	byte_0_353,X
		BNE	loc_3000_8A4F

loc_3000_89F5:				; ...
		DEC	byte_0_373,X
		BNE	loc_3000_8A4F
		LDA	byte_0_394,X
		STA	byte_0_373,X
		LDA	byte_0_393,X
		CMP	#1
		BEQ	loc_3000_8A32
		LDA	byte_0_352,X
		CLC
		ADC	byte_0_391,X
		STA	snd_tmp_var_3B
		AND	#$10
		BEQ	loc_3000_8A19
		LDA	snd_tmp_var_3B
		STA	byte_0_352,X

loc_3000_8A19:				; ...
		DEC	byte_0_392,X
		BNE	loc_3000_8A4F
		LDA	byte_0_353,X
		STA	byte_0_392,X
		DEC	byte_0_391,X
		LDA	byte_0_391,X
		EOR	#$FF
		STA	byte_0_391,X
		JMP	loc_3000_8A4F
; ---------------------------------------------------------------------------

loc_3000_8A32:				; ...
		LDA	byte_0_352,X
		CMP	byte_0_391,X
		BCS	loc_3000_8A3F
		INC	byte_0_352,X
		BCC	loc_3000_8A42

loc_3000_8A3F:				; ...
		DEC	byte_0_352,X

loc_3000_8A42:				; ...
		LDA	byte_0_352,X
		EOR	byte_0_391,X
		AND	#$F
		BNE	loc_3000_8A4F
		STA	byte_0_393,X

loc_3000_8A4F:				; ...
		LDA	sounds_ids,X
		BEQ	no_snd_clr?
		RTS
; End of function music_playing_sub


; =============== S U B	R O U T	I N E =======================================


sub_3000_8A55:				; ...
		LDA	#$FF
		STA	snd_tmp_var_3A
		LDA	sounds_r_4001_,X
		STA	pAPU_Pulse1_Ramp_Control_Reg,X ; pAPU Pulse #1 Ramp Control Register (W)

no_snd_clr?:				; ...
		LDA	sounds_r_4000,X
		AND	#$E0
		ORA	byte_0_352,X
		STA	SND_SQUARE1_REG,X ; pAPU Pulse #1 Control Register (W)
		LDA	sounds_r_4002,X
		STA	pAPU_Pulse1__FT__Reg,X ; pAPU Pulse #1 Fine Tune (FT) Register (W)
		LDA	sounds_r_4003,X
		CMP	snd_tmp_var_3A
		BEQ	locret_3000_8A7A
		STA	pAPU_Pulse1__CT__Reg,X ; pAPU Pulse #1 Coarse Tune (CT)	Register (W)

locret_3000_8A7A:			; ...
		RTS
; End of function sub_3000_8A55


; =============== S U B	R O U T	I N E =======================================


set_play_sound_ch1:			; ...
		LDX	#0
		BEQ	set_play_sound_

set_play_sound_ch2:			; ...
		LDX	#4
		BNE	set_play_sound_

set_play_sound_ch3:			; ...
		LDX	#8
		BNE	set_play_sound_

set_play_sound_ch4:			; ...
		LDX	#$C

set_play_sound_:			; ...
		LDA	sounds_ids,X
		AND	#$FE
		CMP	#$7A
		BEQ	locret_3000_8AA3
		LDA	snd_tmp_var_39
		CMP	sounds_ids,X
		BEQ	locret_3000_8A7A
		PHA
		LDA	#$55
		STA	sound_reg_4001,X ; #$55	= flag play sound?
		PLA
		STA	sounds_ids,X

locret_3000_8AA3:			; ...
		RTS
; End of function set_play_sound_ch1


; =============== S U B	R O U T	I N E =======================================


sound_get_ptr:				; ...
		LDA	sounds_ids,X
		AND	#$FE
		TAY
		LDA	sounds_ptrs,Y
		STA	snd_data_ptr_tmp ; ptr to rom track data
		LDA	sounds_ptrs+1,Y
		STA	snd_data_ptr_tmp+1 ; ptr to rom	track data
		LDY	#0
		TYA
		STA	byte_0_361,X
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		AND	#$F
		STA	sounds_ids_2,X
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		AND	#$F0
		STA	sound_reg_4000,X
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	sound_reg_4001,X ; #$55	= flag play sound?
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	sound_reg_4003,X
		JMP	loc_3000_8B59
; End of function sound_get_ptr


; =============== S U B	R O U T	I N E =======================================


sound_playing:				; ...
		LDA	sound_reg_4001,X ; #$55	= flag play sound?
		CMP	#$55
		BEQ	sound_get_ptr
		LDA	sounds_ids_2,X
		SEC
		SBC	#$10
		BCC	loc_3000_8AEA
		STA	sounds_ids_2,X
		RTS
; ---------------------------------------------------------------------------

loc_3000_8AEA:				; ...
		ASL	A
		ASL	A
		ASL	A
		ASL	A
		STA	snd_tmp_var_39
		ORA	sounds_ids_2,X
		STA	sounds_ids_2,X
		LDA	sounds_ids_3,X
		STA	snd_data_ptr_tmp ; ptr to rom track data
		LDA	sounds_ids_4,X
		STA	snd_data_ptr_tmp+1 ; ptr to rom	track data
		LDY	#0

loc_3000_8B02:				; ...
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		BNE	loc_3000_8B17
		STA	sounds_ids,X
		LDA	music_active_flag,X ; channel is used
		BNE	loc_3000_8B14

loc_3000_8B0E:				; ...
		LDA	#$10
		STA	SND_SQUARE1_REG,X ; pAPU Pulse #1 Control Register (W)
		RTS
; ---------------------------------------------------------------------------

loc_3000_8B14:				; ...
		JMP	sub_3000_8A55
; ---------------------------------------------------------------------------

loc_3000_8B17:				; ...
		CMP	#$10
		BCC	loc_3000_8B68
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	snd_tmp_var_39
		LDA	sound_reg_4000,X
		AND	#$F0
		ORA	snd_tmp_var_39
		STA	sound_reg_4000,X
		STA	SND_SQUARE1_REG,X ; pAPU Pulse #1 Control Register (W)
		LDA	sound_reg_4001,X ; #$55	= flag play sound?
		STA	pAPU_Pulse1_Ramp_Control_Reg,X ; pAPU Pulse #1 Ramp Control Register (W)
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		AND	#7
		STA	snd_tmp_var_39
		LDA	sound_reg_4003,X
		AND	#7
		CMP	snd_tmp_var_39
		BEQ	loc_3000_8B50
		LDA	sound_reg_4003,X
		AND	#$F8
		ORA	snd_tmp_var_39
		STA	sound_reg_4003,X
		STA	pAPU_Pulse1__CT__Reg,X ; pAPU Pulse #1 Coarse Tune (CT)	Register (W)

loc_3000_8B50:				; ...
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	sound_reg_4002,X
		STA	pAPU_Pulse1__FT__Reg,X ; pAPU Pulse #1 Fine Tune (FT) Register (W)

loc_3000_8B59:				; ...
		TYA
		SEC
		ADC	snd_data_ptr_tmp ; ptr to rom track data
		STA	sounds_ids_3,X
		LDA	snd_data_ptr_tmp+1 ; ptr to rom	track data
		ADC	#0
		STA	sounds_ids_4,X
		RTS
; ---------------------------------------------------------------------------

loc_3000_8B68:				; ...
		STX	snd_tmp_var_39
		ASL	A
		TAX
		LDA	off_3000_8B7B,X
		STA	snd_tmp_var_3A
		LDA	off_3000_8B7B+1,X
		STA	snd_tmp_var_3B
		LDX	snd_tmp_var_39
		JMP	(snd_tmp_var_3A)
; End of function sound_playing

; ---------------------------------------------------------------------------
off_3000_8B7B:	.WORD sub_3000_8BC9	; ...
		.WORD sub_3000_8C19
		.WORD sub_3000_8BD1
		.WORD sub_3000_8BEE
		.WORD loc_3000_8B59
		.WORD sub_3000_8C8F
		.WORD sub_3000_8BE5
		.WORD sub_3000_8BDD
		.WORD sub_3000_8CBE
		.WORD sub_3000_8CE6
		.WORD loc_3000_8CF4
off_3000_8B91:	.WORD sub_3000_8CEE
		.WORD loc_3000_8D46
		.WORD loc_3000_8D66
		.WORD sub_3000_8D91
		.WORD sub_3000_8DB5
		.WORD sub_3000_8DBD
		.WORD sub_3000_8DC8
		.WORD sub_3000_8DCD
		.WORD sub_3000_8DD9
		.WORD sub_3000_8DDF
		.WORD sub_3000_8D56
		.WORD sub_3000_8D5E
		.WORD sub_3000_8CB2
		.WORD sub_3000_8DF1
		.WORD sub_3000_8DFD
		.WORD loc_3000_8E01
		.WORD loc_3000_8E05
		.WORD loc_3000_8E0D
		.WORD loc_3000_8E09
		.WORD loc_3000_8C6A
		.WORD sub_3000_8D37
		.WORD loc_3000_8D2F
		.WORD sub_3000_8D24
		.WORD loc_3000_8D2B
		.WORD sub_3000_8C2A
		.WORD loc_3000_8C3B
		.WORD loc_3000_8C4C
		.WORD loc_3000_8C5B

; =============== S U B	R O U T	I N E =======================================


sub_3000_8BC9:				; ...
		LDA	#0
		STA	music_active_flag,X ; channel is used
		JMP	loc_3000_8B0E
; End of function sub_3000_8BC9


; =============== S U B	R O U T	I N E =======================================


sub_3000_8BD1:				; ...
		LDA	sounds_ids,X
		AND	#$FE
		STA	sounds_ids,X
		INY
		JMP	loc_3000_8B02
; End of function sub_3000_8BD1


; =============== S U B	R O U T	I N E =======================================


sub_3000_8BDD:				; ...
		LDA	#0
		STA	byte_0_351,X
		JMP	read_track_loop2
; End of function sub_3000_8BDD


; =============== S U B	R O U T	I N E =======================================


sub_3000_8BE5:				; ...
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	byte_0_351,X
		JMP	read_track_loop2
; End of function sub_3000_8BE5


; =============== S U B	R O U T	I N E =======================================


sub_3000_8BEE:				; ...
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	sounds_r_4000,X
		AND	#$1F
		JSR	sub_3000_8C08
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	sounds_r_4001_,X
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	sounds_r_4003,X
		JMP	read_track_loop2
; End of function sub_3000_8BEE


; =============== S U B	R O U T	I N E =======================================


sub_3000_8C08:				; ...
		STA	byte_0_352,X
		LDA	byte_0_371,X
		BPL	locret_3000_8C18
		LDA	byte_0_352,X
		ORA	#$80
		STA	byte_0_371,X

locret_3000_8C18:			; ...
		RTS
; End of function sub_3000_8C08


; =============== S U B	R O U T	I N E =======================================


sub_3000_8C19:				; ...
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	snd_tmp_var_39
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	snd_data_ptr_tmp+1 ; ptr to rom	track data
		LDA	snd_tmp_var_39
		STA	snd_data_ptr_tmp ; ptr to rom track data
		JMP	read_track_loop1
; End of function sub_3000_8C19


; =============== S U B	R O U T	I N E =======================================


sub_3000_8C2A:				; ...
		INY
		TYA
		CLC
		ADC	snd_data_ptr_tmp ; ptr to rom track data
		STA	byte_0_3A4
		LDA	snd_data_ptr_tmp+1 ; ptr to rom	track data
		ADC	#0
		STA	byte_0_3A8
		BNE	loc_3000_8C7F

loc_3000_8C3B:				; ...
		INY
		TYA
		CLC
		ADC	snd_data_ptr_tmp ; ptr to rom track data
		STA	byte_0_3AC
		LDA	snd_data_ptr_tmp+1 ; ptr to rom	track data
		ADC	#0
		STA	snd_some_lastvar
		BNE	loc_3000_8C7F

loc_3000_8C4C:				; ...
		LDA	byte_0_3A4
		STA	snd_data_ptr_tmp ; ptr to rom track data
		LDA	byte_0_3A8
		STA	snd_data_ptr_tmp+1 ; ptr to rom	track data
		LDY	#2
		JMP	read_track_loop3
; ---------------------------------------------------------------------------

loc_3000_8C5B:				; ...
		LDA	byte_0_3AC
		STA	snd_data_ptr_tmp ; ptr to rom track data
		LDA	snd_some_lastvar
		STA	snd_data_ptr_tmp+1 ; ptr to rom	track data
		LDY	#2
		JMP	read_track_loop3
; ---------------------------------------------------------------------------

loc_3000_8C6A:				; ...
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	byte_0_343,X
		INY
		TYA
		CLC
		ADC	snd_data_ptr_tmp ; ptr to rom track data
		STA	byte_0_341,X
		LDA	snd_data_ptr_tmp+1 ; ptr to rom	track data
		ADC	#0
		STA	byte_0_342,X

loc_3000_8C7F:				; ...
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	snd_tmp_var_39
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	snd_data_ptr_tmp+1 ; ptr to rom	track data
		LDA	snd_tmp_var_39
		STA	snd_data_ptr_tmp ; ptr to rom track data
		JMP	read_track_loop1
; End of function sub_3000_8C2A


; =============== S U B	R O U T	I N E =======================================


sub_3000_8C8F:				; ...
		DEC	byte_0_343,X
		BEQ	loc_3000_8CA3
		LDA	byte_0_341,X
		STA	snd_data_ptr_tmp ; ptr to rom track data
		LDA	byte_0_342,X
		STA	snd_data_ptr_tmp+1 ; ptr to rom	track data
		LDY	#0
		JMP	loc_3000_8C7F
; ---------------------------------------------------------------------------

loc_3000_8CA3:				; ...
		LDA	byte_0_341,X
		STA	snd_data_ptr_tmp ; ptr to rom track data
		LDA	byte_0_342,X
		STA	snd_data_ptr_tmp+1 ; ptr to rom	track data
		LDY	#2
		JMP	read_track_loop3
; End of function sub_3000_8C8F


; =============== S U B	R O U T	I N E =======================================


sub_3000_8CB2:				; ...
		JSR	sub_3000_8CC4
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	byte_0_364,X
		JMP	read_track_loop2
; End of function sub_3000_8CB2


; =============== S U B	R O U T	I N E =======================================


sub_3000_8CBE:				; ...
		JSR	sub_3000_8CC4
		JMP	read_track_loop2
; End of function sub_3000_8CBE


; =============== S U B	R O U T	I N E =======================================


sub_3000_8CC4:				; ...
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	byte_0_361,X
		LSR	A
		STA	byte_0_362,X
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		CLC
		ADC	#1
		STA	byte_0_363,X
		STA	byte_0_364,X
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		SEC
		SBC	#1
		EOR	#$FF
		STA	byte_0_344,X
		RTS
; End of function sub_3000_8CC4


; =============== S U B	R O U T	I N E =======================================


sub_3000_8CE6:				; ...
		LDA	#0
		STA	byte_0_361,X
		JMP	read_track_loop2
; End of function sub_3000_8CE6


; =============== S U B	R O U T	I N E =======================================


sub_3000_8CEE:				; ...
		JSR	sub_3000_8D08
		JMP	loc_3000_8CFC
; ---------------------------------------------------------------------------

loc_3000_8CF4:				; ...
		JSR	sub_3000_8D08
		SEC
		SBC	#1
		EOR	#$FF

loc_3000_8CFC:				; ...
		STA	byte_0_383,X
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	byte_0_384,X
		JMP	read_track_loop2
; End of function sub_3000_8CEE


; =============== S U B	R O U T	I N E =======================================


sub_3000_8D08:				; ...
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	byte_0_382,X
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		CLC
		ADC	#1
		STA	byte_0_3A1,X
		STA	byte_0_374,X
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	byte_0_381,X
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		RTS
; End of function sub_3000_8D08


; =============== S U B	R O U T	I N E =======================================


sub_3000_8D24:				; ...
		LDA	#0
		STA	byte_0_351,X
		BEQ	loc_3000_8D31

loc_3000_8D2B:				; ...
		LDA	#$80
		BNE	loc_3000_8D31

loc_3000_8D2F:				; ...
		LDA	#0

loc_3000_8D31:				; ...
		STA	byte_0_3A2,X
		JMP	read_track_loop2
; End of function sub_3000_8D24


; =============== S U B	R O U T	I N E =======================================


sub_3000_8D37:				; ...
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	byte_0_3A2,X
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		ORA	#$10
		STA	byte_0_3A3,X
		DEY

loc_3000_8D46:				; ...
		LDA	#0
		STA	byte_0_393,X
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data

loc_3000_8D4E:				; ...
		ORA	#$10
		JSR	sub_3000_8C08
		JMP	read_track_loop2
; End of function sub_3000_8D37


; =============== S U B	R O U T	I N E =======================================


sub_3000_8D56:				; ...
		LDA	#0
		STA	byte_0_371,X
		JMP	read_track_loop2
; End of function sub_3000_8D56


; =============== S U B	R O U T	I N E =======================================


sub_3000_8D5E:				; ...
		LDA	byte_0_352,X
		ORA	#$80
		STA	byte_0_371,X

loc_3000_8D66:				; ...
		LDA	#1
		STA	byte_0_393,X
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		CLC
		ADC	#1
		STA	byte_0_353,X
		STA	byte_0_392,X
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		CLC
		ADC	#1
		STA	byte_0_394,X
		STA	byte_0_373,X
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		ORA	#$10
		STA	byte_0_391,X

loc_3000_8D8B:				; ...
		LDA	byte_0_352,X
		JMP	loc_3000_8D4E
; End of function sub_3000_8D5E


; =============== S U B	R O U T	I N E =======================================


sub_3000_8D91:				; ...
		LDA	#2
		STA	byte_0_393,X
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	byte_0_353,X
		LSR	A
		STA	byte_0_392,X
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		CLC
		ADC	#1
		STA	byte_0_394,X
		STA	byte_0_373,X
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	byte_0_391,X
		JMP	loc_3000_8D8B
; End of function sub_3000_8D91


; =============== S U B	R O U T	I N E =======================================


sub_3000_8DB5:				; ...
		LDA	#0
		STA	byte_0_393,X
		JMP	read_track_loop2
; End of function sub_3000_8DB5


; =============== S U B	R O U T	I N E =======================================


sub_3000_8DBD:				; ...
		LDA	#0

loc_3000_8DBF:				; ...
		INY
		CLC
		ADC	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	music_speed
		JMP	read_track_loop2
; End of function sub_3000_8DBD


; =============== S U B	R O U T	I N E =======================================


sub_3000_8DC8:				; ...
		LDA	music_speed
		JMP	loc_3000_8DBF
; End of function sub_3000_8DC8


; =============== S U B	R O U T	I N E =======================================


sub_3000_8DCD:				; ...
		LDA	#0

loc_3000_8DCF:				; ...
		INY
		CLC
		ADC	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	byte_0_354,X
		JMP	read_track_loop2
; End of function sub_3000_8DCD


; =============== S U B	R O U T	I N E =======================================


sub_3000_8DD9:				; ...
		LDA	byte_0_354,X
		JMP	loc_3000_8DCF
; End of function sub_3000_8DD9


; =============== S U B	R O U T	I N E =======================================


sub_3000_8DDF:				; ...
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	byte_0_354
		STA	byte_0_358
		STA	byte_0_35C
		STA	byte_0_360
		JMP	read_track_loop2
; End of function sub_3000_8DDF


; =============== S U B	R O U T	I N E =======================================


sub_3000_8DF1:				; ...
		LDA	#$81

loc_3000_8DF3:				; ...
		STA	nmi_pcm_flags
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	wait_after_pcm_cnt
		JMP	read_track_loop2
; End of function sub_3000_8DF1


; =============== S U B	R O U T	I N E =======================================


sub_3000_8DFD:				; ...
		LDA	#$82
		BNE	loc_3000_8DF3

loc_3000_8E01:				; ...
		LDA	#$83
		BNE	loc_3000_8DF3

loc_3000_8E05:				; ...
		LDA	#$84
		BNE	loc_3000_8DF3

loc_3000_8E09:				; ...
		LDA	#$85
		BNE	loc_3000_8DF3

loc_3000_8E0D:				; ...
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	pcm_info1	; some add value
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		STA	pcm_info2	; time?
		INY
		LDA	(snd_data_ptr_tmp),Y ; ptr to rom track	data
		JSR	set_pcm_ptr	; set pcm func bits
		JMP	read_track_loop2
; End of function sub_3000_8DFD

; ---------------------------------------------------------------------------
noteTable:	.WORD	  0, $6AE, $64D, $5F4, $59E, $54E, $501, $4B8, $475, $435, $3F8	; ...
		.WORD  $3BF, $389, $356, $326, $2F9, $2CE, $2A6, $280, $25C, $23A, $21A
		.WORD  $1FC, $1DF, $1C4, $1AB, $193, $17C, $167, $152, $13F, $12D, $11C
		.WORD  $10C,  $FD,  $EF,  $E2,	$D5,  $C9,  $BD,  $B3,	$A9,  $9F,  $96
		.WORD	$8E,  $86,  $7E,  $77,	$70,  $6A,  $64,  $5E,	$59,  $54,  $4F
		.WORD	$4B,  $46,  $42,  $3F,	$3B,  $38
; sounds_ptrs

 include music\music.asm

byte_3000_CCE5:	.BYTE $C0		; ...
byte_3000_CCE6:	.BYTE 2			; ...
		.BYTE	  0,	3
		.BYTE	$40,	2
		.BYTE	  0,	6
		.BYTE	$C0,	7
		.BYTE	$80,	4
		.BYTE	$40,	2
		.BYTE	$80,	3
		.BYTE	$C0,	2
		.BYTE	$FF,	0
		.BYTE	  2,  $C0
		.BYTE	  7,	0
		.BYTE	  2,  $C0
		.BYTE	  6,  $80
		.BYTE	  2,  $C0
		.BYTE	  3,	0
		.BYTE	  5,  $40
		.BYTE	  2,	0
		.BYTE	  9,  $FF
		.BYTE	$C0,	2
		.BYTE	$80,	5
		.BYTE	$40,	3
		.BYTE	  0,	2
		.BYTE	$40,	1
		.BYTE	  0,	1
		.BYTE	$40,	2
		.BYTE	  0,	3
		.BYTE	$C0,	2
		.BYTE	  0,	7
		.BYTE	$40,	3
		.BYTE	$80,	4
		.BYTE	$40,	3
		.BYTE	  0,	3
		.BYTE	$40,	3
		.BYTE	$80,	4
		.BYTE	$40,	3
		.BYTE	  0,	6
		.BYTE	$C0,	2
		.BYTE	$FF,  $80
		.BYTE	  2,  $C0
		.BYTE	 $A,	0
		.BYTE	  2,  $C0
		.BYTE	  4,  $80
		.BYTE	  4,  $C0
		.BYTE	  1,  $80
		.BYTE	  3,  $C0
		.BYTE	  5,	0
		.BYTE	  5,  $40
		.BYTE	  2,	0
		.BYTE	  2,  $C0
		.BYTE	  6,  $80
		.BYTE	  2,  $40
		.BYTE	  1,  $80
		.BYTE	  3,  $C0
		.BYTE	  5,	0
		.BYTE	  3,  $C0
		.BYTE	  3,  $FF
		.BYTE	  0,	1
		.BYTE	$C0,	5
		.BYTE	  0,	3
		.BYTE	$C0,	3
		.BYTE	$80,	4
		.BYTE	$C0,	3
		.BYTE	  0,	4
		.BYTE	$C0,	3
		.BYTE	$80,	1
		.BYTE	$FF,	0
		.BYTE	  2,  $80
		.BYTE	  1,  $C0
		.BYTE	  7,	0
		.BYTE	 $A,  $40
		.BYTE	  4,	0
		.BYTE	  3,  $C0
		.BYTE	  8,  $80
		.BYTE	  5,  $C0
		.BYTE	  2,  $80
		.BYTE	  4,  $40
		.BYTE	  2,  $80
		.BYTE	  5,  $C0
		.BYTE	  5,	0
		.BYTE	  3,  $C0
		.BYTE	  7,	0
		.BYTE	  4,  $40
		.BYTE	  7,	0
		.BYTE	  6,  $FF

; =============== S U B	R O U T	I N E =======================================


sub_3000_CD8F:				; ...
		STA	snd_tmp_var_39
		JSR	set_play_sound_ch2
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		RTS
; End of function sub_3000_CD8F


; =============== S U B	R O U T	I N E =======================================


sub_3000_CD97:				; ...
		LDA	#$9B
		JSR	sub_3000_CD8F
		LDY	objects_some_anim,X ; some obj X speed
		LDA	byte_3000_CCE5,Y
		STA	Objects_dir,X	; / angle
		CMP	#$FF
		BNE	loc_3000_CDB3
		LDA	#$B
		STA	snd_tmp_var_39
		JSR	set_play_sound_ch4
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		RTS
; ---------------------------------------------------------------------------

loc_3000_CDB3:				; ...
		LDA	byte_3000_CCE6,Y
		ASL	A
		ASL	A
		ASL	A
		ASL	A
		STA	Objects_cnt2,X
		INY
		INY
		TYA
		STA	objects_some_anim,X ; some obj X speed
		RTS
; End of function sub_3000_CD97


; =============== S U B	R O U T	I N E =======================================


sub_3000_CDC4:				; ...
		JSR	background_vs_sprites_pos
		LDA	Level_ID
		CMP	#armageddon
		BEQ	loc_3000_CDD9
		CMP	#clinger_winger
		BEQ	loc_3000_CDD9
		CMP	#terra_tubes
		BEQ	loc_3000_CDD9
		CMP	#arctic_caverns
		BNE	loc_3000_CDE0

loc_3000_CDD9:				; ...
		LDX	#$1B
		LDY	#2		; BANK2:FF23
		JSR	jump_from_bank3

loc_3000_CDE0:				; ...
		LDA	#0
		STA	previous_bankID
		STA	ppu_adr_sbar_H
		JSR	update_info_scores_lifes
		LDA	Level_ID
		CMP	#ragnarok_canyon
		BNE	loc_3000_CDF7
		LDA	#$98
		STA	tmp_var_c8
		LDA	#$40
		STA	Camera_Y_pos_l_2

loc_3000_CDF7:				; ...
		LDA	#$F
		STA	SND_MASTERCTRL_REG ; pAPU Sound/Vertical Clock Signal Register (R)
		RTS
; End of function sub_3000_CDC4

; ---------------------------------------------------------------------------
byte_3000_CDFD:	.BYTE  $88, $86, $86, $86, $86,	$88, $8A, $86, $86, $86, $86, $8A, $97,	$86, $86, $86, $86, $97, $97, $86, $86,	$86, $86, $97 ;	...
		.BYTE  $91, $97, $86, $86, $86,	$88, $92, $97, $86, $86, $86, $8A, $9A,	$97, $86, $86, $86, $97, $9A, $97, $86,	$86, $86, $97
		.BYTE  $88, $86, $86,	4, $7B,	$8F, $8A, $86, $86,   4, $7B, $90, $97,	$86, $86,   4, $97, $96, $97, $86, $86,	  4, $97, $96

; =============== S U B	R O U T	I N E =======================================


sub_3000_CE45:				; ...
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	#$90
		STA	Objects_gfx_frame,X
		LDA	FrameCounter
		AND	#$82
		BNE	loc_3000_CE6D
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#3
		BEQ	loc_3000_CE6D
		LDA	FrameCounter
		AND	#$7F
		CMP	#$30
		LDA	#$FA
		BCC	loc_3000_CE6A
		LDA	#$98
		JSR	sub_3000_CD8F
		LDA	#$AC

loc_3000_CE6A:				; ...
		STA	Objects_gfx_frame,X

loc_3000_CE6D:				; ...
		LDA	Objects_cnt3,X
		BNE	loc_3000_CEA6
		LDA	Objects_Xpos_L,X
		STA	tmp_var_15	;  / Object Counter / various tmp
		CLC
		ADC	objects_some_anim,X ; some obj X speed
		STA	Objects_Xpos_L,X
		CMP	#$CC
		BEQ	loc_3000_CE86
		CMP	#$3A
		BNE	loc_3000_CE9A

loc_3000_CE86:				; ...
		DEC	objects_some_anim,X ; some obj X speed
		LDA	objects_some_anim,X ; some obj X speed
		EOR	#$FF
		STA	objects_some_anim,X ; some obj X speed
		LDA	#$79
		STA	snd_tmp_var_39
		JSR	set_play_sound_ch1
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_3000_CE9A:				; ...
		LDA	Objects_Xpos_L,X
		EOR	tmp_var_15	;  / Object Counter / various tmp
		AND	#$F8
		BEQ	locret_3000_CF16
		INC	Objects_cnt3,X

loc_3000_CEA6:				; ...
		LDA	pal_reduce_value ; dec to color	value
		BNE	locret_3000_CF16
		LDA	players_obj_unk16
		BMI	locret_3000_CF16
		LDA	upd_gfx_flag2	; what to update - attrib,pal or someelse
		CMP	#$80
		BNE	locret_3000_CF16
		DEC	Objects_cnt3,X
		LDX	#$30
		LDY	#0
		JSR	jump_from_bank3
		LDA	#0
		STA	previous_bankID
		LDY	#$17
		LDX	#$2F
		LDA	tmp_var_15	;  / Object Counter / various tmp
		AND	#$1F
		CMP	#6
		BEQ	loc_3000_CED7
		LDX	#$47
		CMP	#$1A
		BEQ	loc_3000_CED7
		LDX	#$17

loc_3000_CED7:				; ...
		LDA	byte_3000_CDFD,X
		STA	bkg_update_buff,Y
		DEX
		DEY
		BPL	loc_3000_CED7
		TXA
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		ROL	A
		BCC	locret_3000_CF16
		LDA	tmp_var_15	;  / Object Counter / various tmp
		AND	#$1F
		STA	tmp_var_15	;  / Object Counter / various tmp
		CMP	#$18
		BCS	loc_3000_CEFB
		BNE	locret_3000_CF16
		LDA	#$97
		STA	bkg_update_buff2+2
		JMP	locret_3000_CF16
; ---------------------------------------------------------------------------

loc_3000_CEFB:				; ...
		LDA	#$1D
		SBC	tmp_var_15	;  / Object Counter / various tmp
		TAY
		LDA	#4
		CPY	#5
		BCS	loc_3000_CF13
		LDA	#$97
		STA	bkg_update_buff2+7
		LDA	#4
		STA	bkg_update_buff,Y
		STA	bkg_update_buff+6,Y

loc_3000_CF13:				; ...
		STA	bkg_update_buff2+2,Y

locret_3000_CF16:			; ...
		RTS
; End of function sub_3000_CE45


; =============== S U B	R O U T	I N E =======================================


sub_3000_CF17:				; ...
		JSR	sub_3000_CF1E
		LDA	#6
		BNE	loc_3000_CF60	; jump
; End of function sub_3000_CF17


; =============== S U B	R O U T	I N E =======================================


sub_3000_CF1E:				; ...
		LDX	#0
		LDA	tmp_var_15	;  / Object Counter / various tmp
		BMI	loc_3000_CF3F
		LDX	#2
		BNE	loc_3000_CF3F	; jump
; End of function sub_3000_CF1E


; =============== S U B	R O U T	I N E =======================================


restart_non_pl_obj_work:		; ...
		LDX	#2
; End of function restart_non_pl_obj_work


; =============== S U B	R O U T	I N E =======================================


restart_objects_work:			; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	#0
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		STA	ppu_ctrl1_val	;  > $80  кадр завершен
		LDA	PPU_STATUS	; PPU Status Register (R)
		SEI			; disable ints
		LDA	#$F
		STA	SND_MASTERCTRL_REG ; pAPU Sound/Vertical Clock Signal Register (R)

loc_3000_CF3F:				; ...
		STX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	Objects_TypeID,X
		CMP	tmp_var_15	;  / Object Counter / various tmp
		BEQ	loc_3000_CF59
		CMP	#$1A
		BEQ	loc_3000_CF59
		CMP	#$19
		BEQ	loc_3000_CF59
		LDX	#$F
		LDY	#0
		JSR	jump_from_bank3
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_3000_CF59:				; ...
		INX
		CPX	#$F
		BNE	loc_3000_CF3F
		LDA	#0

loc_3000_CF60:				; ...
		STA	previous_bankID	; clr
		RTS
; End of function restart_objects_work


; =============== S U B	R O U T	I N E =======================================


restart_on_bikes:			; ...
		LDA	#0
		STA	stop_scroll_flag
		LDA	#$18		; object=18
		JSR	restart_non_pl_obj_work
		LDA	Level_CfgAdr_new ; адрес конфига уровня	от чекпоинта
		STA	LevelCfgAdr_L	; текущий адрес	рома для чтения	объектов уровня
		LDA	Level_CfgAdr_newH
		STA	LevelCfgAdr_H
		JSR	read_lvl_obj_cfg
		LDA	Objects_Xpos_L,X
		SBC	#$30
		STA	Camera_X_pos_l	;  / level_position - on h levels
		LDA	Objects_Xpos_H,X
		SBC	#0
		STA	Camera_X_pos_H
		LDA	Objects_Xpos_L,X
		ADC	#$30
		STA	Objects_Xpos_L
		STA	player2_Xpos_L
		LDA	Objects_Xpos_H,X
		ADC	#0
		STA	Objects_Xpos_H
		STA	player2_Xpos_H
		LDA	#$CC
		STA	Objects_Ypos_L
		LDA	#$DC
		STA	player2_Ypos_L
		LDA	#$50
		LDX	Level_ID
		CPX	#TurboTunnel
		BEQ	loc_3000_CFAF
		LDA	#$70

loc_3000_CFAF:				; ...
		STA	Objects_Zpos_L
		STA	player2_Zpos_L
		LDX	#0
		JSR	playe_on_bikes_init_vars
		INX
		JSR	playe_on_bikes_init_vars
		LDX	#0
		STX	Objects_Zpos_H
		STX	player2_Zpos_H
		STX	Objects_Ypos_H
		STX	player2_Ypos_H
		STX	Objects_death_timer ; undamage time
		STX	pl2_death_timer
		STX	Obj_anims_timer	; timer	used for gfx frames
		STX	pl2_anims_timer

loc_3000_CFD8:				; ...
		LDY	#1

loc_3000_CFDA:				; ...
		TXA
		STA	bikes_speed_sub,Y
		STA	players_cnt_unk,Y
		STA	player1_water_flag,Y ; $80 - in	water (terra tubes)
		STA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		STA	players_obj_unk,Y
		STA	camera_lock_cnt
		STA	player1_endLvL_timer,Y
		STA	players_obj_unk16,Y
		STA	players_gas_slot?,Y
		STA	player1_razdvalen_flag?,Y ; frame 56
		LDA	#$7C
		STA	Objects_X_shadow,Y
		STA	Objects_Y_shad,Y
		LDA	Lives_Player1,Y	; кол-во жизней	(сердечек)
		ROL	A
		LDA	#$2F
		BCC	loc_3000_D00A
		LDA	#0

loc_3000_D00A:				; ...
		STA	Objects_Life,Y
		DEY
		BPL	loc_3000_CFDA
		LDA	Camera_Y_pos_l	;  / level_position - on v levels
		AND	#$F
		ORA	#$40
		STA	Vscroll_value	; $00-$EF
		JSR	background_vs_sprites_pos
		INC	update_ui_flag
		LDA	#0
		STA	previous_bankID
		RTS
; End of function restart_on_bikes


; =============== S U B	R O U T	I N E =======================================


restart_on_checkpoint:			; ...
		LDX	#0
		STX	Objects_Z_speed
		STX	player2_Z_speed
		LDA	#$42
		JSR	restart_objects_work
		LDA	#$42
		JSR	get_slot_with_obj_42
		LDX	#1

loc_3000_D036:				; ...
		LDA	#0
		STA	player1_updown_slide_cnt,X
		LDA	Lives_Player1,X	; кол-во жизней	(сердечек)
		BMI	loc_3000_D04B
		STX	Object_RamSlotID_tmp ; id saved	for objects functions
		TXA
		STA	Objects_TypeID,X
		INC	Objects_TypeID,X
		JSR	copy_player_coord ; координаты из слота	с объектом 42

loc_3000_D04B:				; ...
		DEX
		BPL	loc_3000_D036
		LDA	objects_some_anim,Y ; some obj X speed
		ASL	A
		STA	tmp_var_15	;  / Object Counter / various tmp
		TAX
		LDA	Level_ID
		EOR	#revolution
		BNE	loc_3000_D06E
		STA	Camera_X_pos_H
		LDA	#$E
		STA	Camera_X_pos_l	;  / level_position - on h levels
		LDA	levels_respawn_X,X
		STA	global_var3
		LDA	levels_respawn_X+1,X
		STA	global_var2
		JMP	loc_3000_D078
; ---------------------------------------------------------------------------

loc_3000_D06E:				; ...
		LDA	levels_respawn_X+1,X
		STA	Camera_X_pos_l	;  / level_position - on h levels
		LDA	levels_respawn_X,X
		STA	Camera_X_pos_H

loc_3000_D078:				; ...
		LDA	levels_respawn_Y+1,X
		STA	Camera_Y_pos_l	;  / level_position - on v levels
		LDA	levels_respawn_Y,X
		STA	Camera_Y_pos_H
		JSR	sub_3000_D263
		LDX	#0
		JMP	loc_3000_CFD8
; End of function restart_on_checkpoint


; =============== S U B	R O U T	I N E =======================================


sub_3000_D08A:				; ...
		JSR	get_slot_with_obj_42
		BNE	locret_3000_D098
		STY	Object_RamSlotID_tmp ; id saved	for objects functions
		LDX	#$F
		LDY	#0
		JSR	jump_from_bank3

locret_3000_D098:			; ...
		RTS
; End of function sub_3000_D08A


; =============== S U B	R O U T	I N E =======================================


sub_3000_D099:				; ...
		LDA	#$42
		JSR	sub_3000_D08A
		JSR	sub_3000_D270
		LDA	#$42
		JSR	get_slot_with_obj_42
		LDA	restart_point_id
		CLC
		ADC	#9
		STA	objects_some_anim,Y ; some obj X speed
		JMP	restart_on_checkpoint
; End of function sub_3000_D099

; ---------------------------------------------------------------------------
levels_respawn_X:.WORD	    0,	   2, $E001, $2001 ; ...
		.WORD	   1, $3000,	 1, $3002
		.WORD	   0,	  0,	 0,	0
		.WORD	   1,	  0,	 0,	0
		.WORD	   0,	  0, $1000,	0
		.WORD  $8C76,  $E00,	 0, $1002
		.WORD	   5, $2000, $C001
levels_respawn_Y:.WORD	$E0FF, $E8FF, $E302, $E000 ; ...
		.WORD  $A003, $A004, $E006, $B007
		.WORD	   0,  $302,  $302, $EE01
		.WORD	$302, $C00F, $900D, $8008
		.WORD	   0, $D00C, $B01C,   $17
		.WORD  $F00F, $2C07,	 0,	0
		.WORD  $C003, $E002, $A006

; =============== S U B	R O U T	I N E =======================================


playe_on_bikes_init_vars:		; ...
		LDA	#2
		STA	Objects_Z_speed,X
		LDA	#$80
		STA	Objects_Z_spd_sub,X
		LDA	#0
		STA	players_obj_un3,X
		LDA	#$30
		STA	players_obj_un2,X
		LDA	#1
		STA	Objects_Z_floor,X
		RTS
; End of function playe_on_bikes_init_vars

; ---------------------------------------------------------------------------
level_backgn_Y_pos:.BYTE $23, $23, $23,	$23, $30, $23, $23, $32, $23, $23, $23,	$23, $23 ; ...

; =============== S U B	R O U T	I N E =======================================


background_vs_sprites_pos:		; ...
		LDX	Level_ID
		LDA	bkg_vs_spr_pos_neg
		BEQ	loc_3000_D14C
		INC	bkg_vs_spr_pos_neg

loc_3000_D14C:				; ...
		CLC
		ADC	level_backgn_Y_pos - 1,X ; смещение фона относительно спрайтов
		CLC
		ADC	Vscroll_value	; $00-$EF
		BCS	loc_3000_D159
		CMP	#$F0		; 240
		BCC	loc_3000_D15B

loc_3000_D159:				; ...
		ADC	#$F

loc_3000_D15B:				; ...
		STA	Vscroll_plus_BG_Y
		LDA	upd_gfx_flag2	; what to update - attrib,pal or someelse
		CMP	#$80
		BNE	update_info_scores_lifes_check
		LDA	ppu_adr_sbar_H
		BEQ	loc_3000_D169
		LDA	#$80

loc_3000_D169:				; ...
		SBC	Vscroll_plus_BG_Y
		CMP	#$D0
		BCC	update_info_scores_lifes_check
		LDA	#$82
		BNE	update_info_scores_lifes__ ; jump

update_info_scores_lifes:		; ...
		LDA	#$83

update_info_scores_lifes__:		; ...
		STA	upd_gfx_flag2	; what to update - attrib,pal or someelse

update_info_scores_lifes_check:		; ...
		LDA	upd_gfx_flag2	; what to update - attrib,pal or someelse
		CMP	#$83		; update ui
		BEQ	update_info_scores_lifes_
		CMP	#$82
		BNE	loc_3000_D1E3

update_info_scores_lifes_:		; ...
		LDX	#5

loc_3000_D183:				; ...
		LDA	Score_Player1_100k,X
		CLC
		ADC	#$F5		; score	base tile
		STA	status_bar_buff,X
		LDA	Score_Player2,X
		CLC
		ADC	#$F5
		STA	status_bar_buff+$16,X
		LDA	Objects_Life
		CMP	player_life_for_ui,X
		LDA	#$F3
		ADC	#0
		STA	status_bar_buff+$20,X
		LDA	player2_Life
		CMP	player_life_for_ui,X
		LDA	#$F3
		ADC	#0
		STA	status_bar_buff+$36,X
		CPX	#5
		BCS	loc_3000_D1DD
		LDA	#$F1
		CPX	Lives_Player1	; кол-во жизней	(сердечек)
		BCS	loc_3000_D1BF
		LDY	Lives_Player1	; кол-во жизней	(сердечек)
		BMI	loc_3000_D1BF
		LDA	#$EF

loc_3000_D1BF:				; ...
		STA	status_bar_buff+7,X
		CLC
		ADC	#1
		STA	status_bar_buff+$27,X
		LDA	#$F1
		CPX	Lives_Player2	; кол-во жизней	(сердечек)
		BCS	loc_3000_D1D4
		LDY	Lives_Player2	; кол-во жизней	(сердечек)
		BMI	loc_3000_D1D4
		LDA	#$EF

loc_3000_D1D4:				; ...
		STA	status_bar_buff+$10,X
		CLC
		ADC	#1
		STA	status_bar_buff+$30,X

loc_3000_D1DD:				; ...
		STX	update_ui_flag
		DEX
		BPL	loc_3000_D183
		RTS
; ---------------------------------------------------------------------------

loc_3000_D1E3:				; ...
		EOR	#$88
		BNE	locret_3000_D1FB
		LDA	#$81
		STA	upd_gfx_flag2	; what to update - attrib,pal or someelse
		LDA	ppu_adr_sbar_H
		EOR	#2
		STA	ppu_adr_sbar_H
		LDA	#0
		LDX	#$3C

loc_3000_D1F5:				; ...
		STA	attributes_buff+$3F,X
		DEX
		BNE	loc_3000_D1F5

locret_3000_D1FB:			; ...
		RTS
; End of function background_vs_sprites_pos


; =============== S U B	R O U T	I N E =======================================


get_slot_with_obj_42:			; ...
		LDY	#2

loc_3000_D1FE:				; ...
		CMP	Objects_TypeID,Y
		BEQ	locret_3000_D209
		INY
		CPY	#$F
		BNE	loc_3000_D1FE
		INY

locret_3000_D209:			; ...
		RTS
; End of function get_slot_with_obj_42


; =============== S U B	R O U T	I N E =======================================

; координаты из	слота с	объектом 42

copy_player_coord:			; ...
		LDA	Objects_Zpos_H,Y
		STA	Objects_Zpos_H,X
		LDA	Objects_Zpos_L,Y
		STA	Objects_Zpos_L,X
		LDA	Objects_Xpos_H,Y
		STA	Objects_Xpos_H,X
		LDA	Objects_Xpos_L,Y
		STA	Objects_Xpos_L,X
		LDA	Objects_Ypos_H,Y
		STA	Objects_Ypos_H,X
		LDA	Objects_Ypos_L,Y
		STA	Objects_Ypos_L,X
		RTS
; End of function copy_player_coord

; ---------------------------------------------------------------------------
player_life_for_ui:.BYTE 1, 9, $11, $19, $21, $29 ; ...

; =============== S U B	R O U T	I N E =======================================


load_lvl_obj_config:			; ...
		LDX	Level_ID
		LDA	level_cfg_ptrl,X
		STA	LevelCfgAdr_L	; текущий адрес	рома для чтения	объектов уровня
		LDA	level_cfg_ptrh,X
		STA	LevelCfgAdr_H
		JSR	level_config_reading ; при загрузке читаем сразу 2 первых объекта
		JMP	level_config_reading
; End of function load_lvl_obj_config

; ---------------------------------------------------------------------------
level_cfg_ptrl:	.DL  #level1_cfg,#level1_cfg,#level2_cfg,#level3_cfg,#level4_cfg,#level5_cfg,#level6_cfg,#level7_cfg,#level8_cfg,#level9_cfg,#level10_cfg,#level11_cfg,#level12_cfg,#level13_cfg
level_cfg_ptrh:	.DH  #level1_cfg,#level1_cfg,#level2_cfg,#level3_cfg,#level4_cfg,#level5_cfg,#level6_cfg,#level7_cfg,#level8_cfg,#level9_cfg,#level10_cfg,#level11_cfg,#level12_cfg,#level13_cfg
; level_cfg_ptrl

; =============== S U B	R O U T	I N E =======================================


sub_3000_D263:				; ...
		LDY	tmp_var_15	;  / Object Counter / various tmp
		LDA	levels_sub_ptr,Y
		STA	LevelCfgAdr_L	; текущий адрес	рома для чтения	объектов уровня
		LDA	levels_sub_ptr+1,Y
		STA	LevelCfgAdr_H
		RTS
; End of function sub_3000_D263


; =============== S U B	R O U T	I N E =======================================


sub_3000_D270:				; ...
		LDY	restart_point_id
		LDA	lvl_sub_ptl,Y
		STA	LevelCfgAdr_L	; текущий адрес	рома для чтения	объектов уровня
		LDA	lvl_sub_pth,Y
		STA	LevelCfgAdr_H
		JMP	level_config_reading
; End of function sub_3000_D270

; ---------------------------------------------------------------------------
levels_sub_ptr:	.WORD level4_checkp1	; ...
		.WORD level4_checkp2
		.WORD level4_checkp3
		.WORD level4_checkp4
		.WORD level4_checkp5
		.WORD level4_checkp6
		.WORD level4_checkp7
		.WORD level4_checkp8
		.WORD level4_checkp9
		.WORD level8_checkp1
		.WORD level8_checkp3
		.WORD level8_checkp5
		.WORD level8_checkp7
		.WORD level7_checkp1
		.WORD level7_checkp2
		.WORD level7_checkp3
		.WORD level9_checkp1
		.WORD level9_checkp2
		.WORD level9_checkp3
		.WORD level5_checkp1
		.WORD level5_checkp2
		.WORD level5_checkp3
		.WORD level11_check1
		.WORD level11_check2
		.WORD level11_check3
		.WORD level11_check4
		.WORD level11_check5
		.WORD level11_check6
lvl_sub_ptl:	.DL #level_unk_obj1,#level_unk_obj2,#level_unk_obj3,#level_unk_obj4
lvl_sub_pth:	.DH #level_unk_obj1,#level_unk_obj2,#level_unk_obj3,#level_unk_obj4
; lvl_sub_ptl

; =============== S U B	R O U T	I N E =======================================


stop_read_cfg:				; ...
		RTS
; ---------------------------------------------------------------------------

level_config_reading:			; ...
		LDY	#0
		LDA	(LevelCfgAdr_L),Y ; E834; E9EE;	ED1D; F2D5; F60F; FAB4;	D8D3; D669; D392
					; DB9F;	DBE2; DE51; E036
		CMP	#$FF
		BNE	loc_3000_D2D3
		INY			; set new config adress
		LDA	(LevelCfgAdr_L),Y ; текущий адрес рома для чтения объектов уровня
		TAX
		INY
		LDA	(LevelCfgAdr_L),Y ; текущий адрес рома для чтения объектов уровня
		STA	LevelCfgAdr_H
		STX	LevelCfgAdr_L	; текущий адрес	рома для чтения	объектов уровня

loc_3000_D2D3:				; ...
		CMP	#$FE
		BEQ	stop_read_cfg
		LDY	#2
		LDA	Level_ID
		CMP	#terra_tubes
		BEQ	loc_3000_D2E3
		CMP	#arctic_caverns
		BNE	loc_3000_D2FE

loc_3000_D2E3:				; ...
		LDA	(LevelCfgAdr_L),Y ; текущий адрес рома для чтения объектов уровня
		AND	#3
		BEQ	loc_3000_D324
		CMP	#2
		BEQ	loc_3000_D31B
		CMP	#3
		BEQ	loc_3000_D306
		LDA	(LevelCfgAdr_L),Y ; текущий адрес рома для чтения объектов уровня
		SEC
		SBC	Camera_X_pos_l	;  / level_position - on h levels
		DEY
		LDA	(LevelCfgAdr_L),Y ; текущий адрес рома для чтения объектов уровня
		SBC	Camera_X_pos_H
		JMP	loc_3000_D32F
; ---------------------------------------------------------------------------

loc_3000_D2FE:				; ...
		CMP	#intruder_excluder
		BEQ	loc_3000_D306
		CMP	#revolution
		BNE	loc_3000_D313

loc_3000_D306:				; ...
		LDA	(LevelCfgAdr_L),Y ; текущий адрес рома для чтения объектов уровня
		SEC
		SBC	Camera_Y_pos_l	;  / level_position - on v levels
		DEY
		LDA	(LevelCfgAdr_L),Y ; текущий адрес рома для чтения объектов уровня
		SBC	Camera_Y_pos_H
		JMP	loc_3000_D32F
; ---------------------------------------------------------------------------

loc_3000_D313:				; ...
		CMP	#rat_race
		BEQ	loc_3000_D31B
		CMP	#wookie_hole
		BNE	loc_3000_D324

loc_3000_D31B:				; ...
		LDA	Camera_Y_pos_l	;  / level_position - on v levels
		LDX	Camera_Y_pos_H
		BMI	no_create_obj
		JMP	loc_3000_D328
; ---------------------------------------------------------------------------

loc_3000_D324:				; ...
		LDX	Camera_X_pos_H
		LDA	Camera_X_pos_l	; e836

loc_3000_D328:				; ...
		SEC
		SBC	(LevelCfgAdr_L),Y ; текущий адрес рома для чтения объектов уровня
		DEY
		TXA
		SBC	(LevelCfgAdr_L),Y ; текущий адрес рома для чтения объектов уровня

loc_3000_D32F:				; ...
		BCC	no_create_obj
		DEY
		LDA	(LevelCfgAdr_L),Y ; e834
		CMP	#3
		BCS	read_lvl_obj_cfg
		TAX
		DEX
		LDA	Lives_Player1,X	; кол-во жизней	(сердечек)
		BMI	loc_3000_D386
		BPL	write_object

read_lvl_obj_cfg:			; ...
		JSR	get_object_empty_slot
		BNE	no_create_obj

write_object:				; ...
		LDY	#0
		LDA	(LevelCfgAdr_L),Y ; текущий адрес рома для чтения объектов уровня
		STA	Objects_TypeID,X
		LDY	#3
		LDA	(LevelCfgAdr_L),Y ; текущий адрес рома для чтения объектов уровня
		STA	Objects_Xpos_H,X
		INY
		LDA	(LevelCfgAdr_L),Y ; текущий адрес рома для чтения объектов уровня
		STA	Objects_Xpos_L,X
		INY
		LDA	(LevelCfgAdr_L),Y ; текущий адрес рома для чтения объектов уровня
		STA	Objects_Ypos_H,X
		INY
		LDA	(LevelCfgAdr_L),Y ; текущий адрес рома для чтения объектов уровня
		STA	Objects_Ypos_L,X
		INY
		LDA	(LevelCfgAdr_L),Y ; текущий адрес рома для чтения объектов уровня
		STA	Objects_Zpos_H,X
		INY
		LDA	(LevelCfgAdr_L),Y ; текущий адрес рома для чтения объектов уровня
		STA	Objects_Zpos_L,X
		INY
		LDA	(LevelCfgAdr_L),Y ; текущий адрес рома для чтения объектов уровня
		STA	objects_some_anim,X ; some obj X speed
		INY
		LDA	(LevelCfgAdr_L),Y ; текущий адрес рома для чтения объектов уровня
		AND	#3
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	(LevelCfgAdr_L),Y ; текущий адрес рома для чтения объектов уровня
		ORA	#$F
		STA	Objects_Life,X

loc_3000_D386:				; ...
		LDA	#$B
		CLC
		ADC	LevelCfgAdr_L	; next object
		STA	LevelCfgAdr_L	; текущий адрес	рома для чтения	объектов уровня
		BCC	no_create_obj
		INC	LevelCfgAdr_H

no_create_obj:				; ...
		RTS
; End of function stop_read_cfg

; ---------------------------------------------------------------------------
 include data/levels_cfgs2.asm
; level9_cfg

; =============== S U B	R O U T	I N E =======================================


read_anims_data:			; ...
		CPY	#$FF
		BNE	loc_3000_E08D
		LDY	tmp_var_15	;  / Object Counter / various tmp
		LDA	animations_ptrs	- 2,Y
		STA	tmp_var_19
		LDA	animations_ptrs+1 - 2,Y
		STA	tmp_var_1A
		LDY	Objects_Anim_Ptr,X ; оффсет чтения анимации

loc_3000_E08D:				; ...
		LDA	(tmp_var_19),Y
		STA	Obj_Amindata1_tmp
		INY
		LDA	(tmp_var_19),Y
		STA	Obj_Amindata2_tmp
		INY
		LDA	(tmp_var_19),Y
		STA	Obj_Amindata3_tmp
		DEY
		DEY
		LDA	#0		; return to bank 0
		RTS
; End of function read_anims_data

; ---------------------------------------------------------------------------
 include data/anims_moves.asm
 include data/levels_cfgs1.asm
; animations_ptrs
; level1_cfg

; =============== S U B	R O U T	I N E =======================================


get_object_empty_slot:			; ...
		LDX	#2

loc_3000_FF3A:				; ...
		LDA	Objects_TypeID,X
		BEQ	locret_3000_FF45
		INX
		CPX	#$F
		BNE	loc_3000_FF3A
		DEX

locret_3000_FF45:			; ...
		RTS
; End of function get_object_empty_slot

; ---------------------------------------------------------------------------
bank3_end:
 .PAD $FF6E,$FF
; bank3_end
; ---------------------------------------------------------------------------
		STA	banks_ids3+3
		JSR	read_anims_data	; BANK0:DB06
		STA	banks_ids3
		RTS
; ---------------------------------------------------------------------------
		STA	banks_ids3+3
		JSR	karnath_lair_vram_updates ; BANK0:859D
		LDA	#0
		STA	banks_ids3
		RTS
; ---------------------------------------------------------------------------
		STA	prev_bank_id_m	; saves	mirror,	when jump from bank 0 to bank3 to music	f
		AND	#$10
		ORA	#3
		TAY
		STA	banks_ids3,Y	; BANK0:FF84
		JSR	playing_music
		LDA	prev_bank_id_m	; saves	mirror,	when jump from bank 0 to bank3 to music	f
		TAY
		STA	banks_ids3,Y
		RTS
; ---------------------------------------------------------------------------

NMI3:					; ...
		STX	NMI_Xreg_saver
		STA	NMI_Areg_saver
		LDA	#3
		LDX	#0
		STX	banks_ids3
		JMP	bank3_end
; ---------------------------------------------------------------------------
		LDX	NMI_Xreg_saver
		LDA	previous_bankID_NMI
		TAY
		STA	banks_ids3,Y
		LDY	NMI_Yreg_saver
		LDA	NMI_Areg_saver
		RTI
; ---------------------------------------------------------------------------
banks_ids3:	.BYTE 0, 1, 2, 3, 4, 5,	6, 7, 8, 9, $A,	$B, $C,	$D, $E,	$F, $10, $11, $12, $13,	$14, $15, $16, $17 ; ...

; =============== S U B	R O U T	I N E =======================================


jump_from_bank3:			; ...
		LDA	#0
		ORA	#3
		STA	previous_bankID
		LDA	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		PHA
		STX	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		LDA	banks_ids3,Y
		STA	banks_ids3,Y
		JSR	sub_3000_8000
		LDY	previous_bankID

loc_3000_FFE1:				; ...
		PLA
		STA	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		LDA	banks_ids3,Y
		STA	banks_ids3,Y
		RTS
; End of function jump_from_bank3

; ---------------------------------------------------------------------------

wait3:					; ...
		DEX
		BNE	wait3
		DEY
		BNE	wait3
		RTS
; ---------------------------------------------------------------------------

loc_3000_FFF2:				; ...
		LDA	#0
		STA	banks_ids3
		JMP	loc_3000_FFF2
; ---------------------------------------------------------------------------
		.WORD NMI3
		.WORD loc_3000_FFF2
		.WORD bank3_end
; end of 'BANK3'

.base $8000
; ===========================================================================

; Segment type:	Pure code
		;.segment BANK4

; =============== S U B	R O U T	I N E =======================================


sub_4000_8000:				; ...
		JMP	(JumpTable_ptr_main) ; указатель на функцию при	переходе в другой банк
; End of function sub_4000_8000

; ---------------------------------------------------------------------------
		JMP	unpack_tiles_bank4
; ---------------------------------------------------------------------------

end_bgk_gfx_unpack:			; ...
		RTS

; =============== S U B	R O U T	I N E =======================================


unpack_tiles_bank4:			; ...
		LDX	tmp_var_15	;  / Object Counter / various tmp
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDA	archives_ptrs_bank4,X
		STA	tmp_var_01
		LDA	archives_ptrs_bank4+1,X
		STA	tmp_var_02
		LDY	#0
		LDA	(tmp_var_01),Y
		TAX
		INY
		LDA	(tmp_var_01),Y
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		STX	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		STY	tmp_var_00	; 1

unpack_next_bkg_pack:			; ...
		LDY	tmp_var_00	; get archives list ptr
		INY
		LDA	(tmp_var_01),Y	; 80d1 - read tiles cnt	to unpack
		BEQ	end_bgk_gfx_unpack
		STA	tmp_var_05	; tiles	to unpack cnt
		INY
		LDA	(tmp_var_01),Y	; 80d2
		STA	tmp_var_06	; archive source ptrl
		INY
		LDA	(tmp_var_01),Y
		STA	tmp_var_07	; archive source ptrh
		STY	tmp_var_00	; save read archives list cfg ptr
		LDY	#0
		LDA	(tmp_var_06),Y	; 1st byte - zeros tag
		STA	tmp_var_1B	; zeros	tag
		INY
		LDA	(tmp_var_06),Y	; 2nd byte - ffs tag
		STA	tmp_var_1C	; ffs tag
		INY
		LDA	#0
		STA	tmp_var_1A
		LDA	tmp_var_05	; tiles	to unpack cnt
		ASL	A
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A	; multilty by 16 (tile size) - lenght of unpack
		STA	tmp_var_19
		LDA	#0
		SEC
		SBC	tmp_var_19
		STA	tmp_var_19
		LDA	#0
		SBC	tmp_var_1A	; negate unpack	lenght ($d40 - $f2c0)
		STA	tmp_var_1A

unpack_loop:				; ...
		LDA	(tmp_var_06),Y	; read source byte
		INY			; inc src arhive ptr l
		BNE	loc_4000_806F
		INC	tmp_var_07	; inc src arhive ptr h

loc_4000_806F:				; ...
		CMP	tmp_var_1B	; zeros	tag
		BEQ	unpack_fill_zeros
		CMP	tmp_var_1C	; ffs tag
		BEQ	unpack_fill_ffs
		STA	PPU_DATA	; VRAM I/O Register (RW)
		INC	tmp_var_19	; total	unpack size cnt	l
		BNE	unpack_loop
		INC	tmp_var_1A	; total	unpack size cnt	h
		BNE	unpack_loop

end_unpack_part:			; ...
		JMP	unpack_next_bkg_pack
; ---------------------------------------------------------------------------

unpack_fill_ffs:			; ...
		LDX	#$FF
		BNE	unpack_get_repeat_cnt ;	jump

unpack_fill_zeros:			; ...
		LDX	#0

unpack_get_repeat_cnt:			; ...
		LDA	(tmp_var_06),Y	; music	ptr
		STA	tmp_var_05	; repeat times
		INY
		BNE	unpack_write_repeated
		INC	tmp_var_07

unpack_write_repeated:			; ...
		STX	PPU_DATA	; VRAM I/O Register (RW)
		INC	tmp_var_19	; total	unpack size cnt	l
		BNE	loc_4000_809F
		INC	tmp_var_1A	; total	unpack size cnt	h
		BEQ	end_unpack_part

loc_4000_809F:				; ...
		DEC	tmp_var_05
		BNE	unpack_write_repeated
		BEQ	unpack_loop
; End of function unpack_tiles_bank4

; ---------------------------------------------------------------------------
archives_ptrs_bank4:.WORD intro_logos_set ; ...
		.WORD zastavki_gfx_set
		.WORD zastavki_gfx_set2
		.WORD level1_intro_set
		.WORD zastavki_gfx_set3
		.WORD intro_logos_set_
		.WORD level1_boss_set
		.WORD level1_bkg_set
		.WORD level2_bkg_set
		.WORD level3_bkg_set
		.WORD intr_excl_bkg_set	; and rat race
		.WORD karnathl_bkg_set
		.WORD level4_bkg_set
		.WORD zastavki_gfx_set4
		.WORD clinger_winger_gfx_set ; and armageddon
		.WORD surf_city_bkg_set
		.WORD robomanus_gfx_set
		.WORD armageddon_spr_set ; dark	queen
intro_logos_set:.WORD $12C0		; ...
		.BYTE $D4
		.WORD intro_logos_gfx
		.BYTE 0
intro_logos_set_:.WORD $2C0		; ...
		.BYTE $D4
		.WORD intro_logos_gfx
		.BYTE 0
zastavki_gfx_set:.WORD $1000		; ...
		.BYTE $FF
		.WORD zastavki_bkg_gfx
		.BYTE 0
zastavki_gfx_set2:.WORD	$340		; ...
		.BYTE $80
		.WORD zastavki_spr_gfx
		.BYTE 0
level1_intro_set:.WORD 0		; ...
		.BYTE $FF
		.WORD level1_intro_gfx
		.BYTE 0
zastavki_gfx_set3:.WORD	$1000		; ...
		.BYTE $2B
		.WORD zastavki_bkg_gfx2
		.BYTE 4
		.WORD stars_gfx		; stars	unpack slightly	corrupted (it's a part of intro pack)
		.BYTE 8
		.WORD zastavki_bkg_gfx3
		.BYTE 0
zastavki_gfx_set4:.WORD	$1BC0		; ...
		.BYTE 4
		.WORD stars_gfx		; stars	unpack slightly	corrupted (it's a part of intro pack)
		.BYTE 0
level1_boss_set:.WORD $2A0		; ...
		.BYTE $40
		.WORD level1_boss_gfx
		.BYTE 0
level1_bkg_set:	.WORD $1000		; ...
		.BYTE $FF		; 255 tiles
		.WORD level1_bkg_gfx
		.BYTE 0
level2_bkg_set:	.WORD $1000		; ...
		.BYTE $FF
		.WORD level2_bkg_gfx
		.BYTE 0
level3_bkg_set:	.WORD $1000		; ...
		.BYTE $FF
		.WORD level3_bkg_gfx
		.BYTE 0
level4_bkg_set:	.WORD $1000		; ...
		.BYTE $FF
		.WORD level4_bkg_gfx
		.BYTE 0
clinger_winger_gfx_set:.WORD $1000	; ...
		.BYTE $90
		.WORD clinger_winger_bkg_gfx
		.BYTE 0
surf_city_bkg_set:.WORD	$1000		; ...
		.BYTE $E0
		.WORD surf_city_bkg_gfx
		.BYTE 0
intr_excl_bkg_set:.WORD	$1000		; ...
		.BYTE $FF
		.WORD intr_excl_bkg_gfx
		.BYTE 0
karnathl_bkg_set:.WORD $1000		; ...
		.BYTE $C4
		.WORD karnathl_bkg_gfx
		.BYTE 6
		.WORD karnathl_bkg_gfx2	; snake	(horizontal)
		.BYTE $14
		.WORD karnathl_bkg_gfx2	; snake	(horizontzal) +	gfx elements
		.BYTE 6
		.WORD karnathl_bkg_gfx3	; snake	(vertical)
		.BYTE 6
		.WORD karnathl_bkg_gfx3	; snake	(vertical)
		.BYTE 0
robomanus_gfx_set:.WORD	$2A0		; ...
		.BYTE $44
		.WORD robomanus_spr_gfx
		.BYTE 0
armageddon_spr_set:.WORD $300		; ...
		.BYTE $36
		.WORD armageddon_spr_gfx
		.BYTE 0

zastavki_bkg_gfx3
 incbin	gfx\zastavki_bkg3.4
armageddon_spr_gfx
 incbin	gfx\armageddon_spr.4
robomanus_spr_gfx
 incbin	gfx\robomanus.4
intro_logos_gfx
 incbin	gfx\intro_logos.4
stars_gfx
 incbin	gfx\stars.4
level1_boss_gfx
 incbin	gfx\level1_boss.4
zastavki_bkg_gfx
 incbin	gfx\zastavki_bkg.4
zastavki_spr_gfx
 incbin	gfx\zastavki_spr.4
level1_intro_gfx
 incbin	gfx\level1_intro.4
zastavki_bkg_gfx2
 incbin	gfx\zastavki_bkg2.4
level3_bkg_gfx
 incbin	gfx\level3_bkg.4
level2_bkg_gfx
 incbin	gfx\level2_bkg.4
level1_bkg_gfx
 incbin	gfx\level1_bkg.4
intr_excl_bkg_gfx
 incbin	gfx\intr_excl_bkg.4
karnathl_bkg_gfx
 incbin	gfx\karnathl_bkg.4
karnathl_bkg_gfx3
 incbin	gfx\karnathl_bkg3.4
karnathl_bkg_gfx2
 incbin	gfx\karnathl_bkg2.4
level4_bkg_gfx
 incbin	gfx\level4_bkg.4
clinger_winger_bkg_gfx
 incbin	gfx\clinger_winger_bkg.4
surf_city_bkg_gfx
 incbin	gfx\surf_city_bkg.4

; zastavki_bkg_gfx3
; armageddon_spr_gfx
; robomanus_spr_gfx
; intro_logos_gfx
; stars_gfx
; level1_boss_gfx
; zastavki_bkg_gfx
; zastavki_spr_gfx
; level1_intro_gfx
; zastavki_bkg_gfx2
; level3_bkg_gfx
; level2_bkg_gfx
; level1_bkg_gfx
; intr_excl_bkg_gfx
; karnathl_bkg_gfx
; karnathl_bkg_gfx3
; karnathl_bkg_gfx2
; level4_bkg_gfx
; clinger_winger_bkg_gfx
; surf_city_bkg_gfx
; ---------------------------------------------------------------------------

locret_4000_FF71:			; ...
		RTI
; ---------------------------------------------------------------------------
bank4_end:
 .PAD $FF78,$FF
; bank4_end
; ---------------------------------------------------------------------------
		STA	banks_ids4+3
		JSR	bank4_end
		LDA	#0
		STA	banks_ids4
		RTS
; ---------------------------------------------------------------------------
		STA	prev_bank_id_m	; saves	mirror,	when jump from bank 0 to bank3 to music	f
		AND	#$10
		ORA	#3
		TAY
		STA	banks_ids4,Y
		JSR	bank4_end
		LDA	prev_bank_id_m	; saves	mirror,	when jump from bank 0 to bank3 to music	f
		TAY
		STA	banks_ids4,Y
		RTS
; ---------------------------------------------------------------------------

NMI4:					; ...
		STX	NMI_Xreg_saver
		STA	NMI_Areg_saver
		LDA	#4
		LDX	#0
		STX	banks_ids4
		JMP	locret_4000_FF71
; ---------------------------------------------------------------------------
		LDX	NMI_Xreg_saver
		LDA	previous_bankID_NMI
		TAY
		STA	banks_ids4,Y
		LDY	NMI_Yreg_saver
		LDA	NMI_Areg_saver
		RTI
; ---------------------------------------------------------------------------
banks_ids4:	.BYTE 0, 1, 2, 3, 4, 5,	6, 7, 8, 9, $A,	$B, $C,	$D, $E,	$F, $10, $11, $12, $13,	$14, $15, $16, $17 ; ...
; ---------------------------------------------------------------------------
		LDA	#0
		ORA	#4
		STA	previous_bankID
		LDA	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		PHA
		STX	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		LDA	banks_ids4,Y
		STA	banks_ids4,Y
		JSR	sub_4000_8000
		LDY	previous_bankID
		PLA
		STA	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		LDA	banks_ids4,Y
		STA	banks_ids4,Y
		RTS
; ---------------------------------------------------------------------------

wait4:					; ...
		DEX
		BNE	wait4
		DEY
		BNE	wait4
		RTS
; ---------------------------------------------------------------------------

loc_4000_FFF2:				; ...
		LDA	#0
		STA	banks_ids4
		JMP	loc_4000_FFF2
; ---------------------------------------------------------------------------
		.WORD NMI4
		.WORD loc_4000_FFF2
		.WORD locret_4000_FF71
; end of 'BANK4'

.base $8000
; ===========================================================================

; Segment type:	Pure code
		;.segment BANK5

; =============== S U B	R O U T	I N E =======================================


sub_5000_8000:				; ...
		JMP	(JumpTable_ptr_main) ; указатель на функцию при	переходе в другой банк
; End of function sub_5000_8000

; ---------------------------------------------------------------------------
		JMP	level_backgnd_scroll
; ---------------------------------------------------------------------------
		JMP	level_maps_ptrs_load
; ---------------------------------------------------------------------------
		JMP	count_plus_to_vscroll
; ---------------------------------------------------------------------------
		JMP	write_tiles_of_block
; ---------------------------------------------------------------------------
		JMP	get_vscroll_plus_8
; ---------------------------------------------------------------------------
		JMP	levels_physics
; ---------------------------------------------------------------------------
		JMP	objects_3d_lvls_phys
; ---------------------------------------------------------------------------
		JMP	sub_5000_BBD6
; ---------------------------------------------------------------------------
level3_blk_map:
 incbin	data\level3_blk_map.bin
; level3_blk_map
turbotunnel_screens:.BYTE 0, 1,	4, 1, 2, 2, 4, 0, 0, 0,	0, 0, 0, 0, 0, 0 ; ...
		.BYTE 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0
		.BYTE 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0
		.BYTE 0, 0, 0, 0, 0, 0,	0, 0, 0, 1, 5, 4, 0, 0,	1, 5
		.BYTE 5, 4, 0, 0, 0, 1,	5, 5, 4, 0, 0, 1, 5, 5,	5, 5
		.BYTE 4, 0, 0, 0, 0, 0,	0, 1, 5, 5, 5, 5, 5, 4,	0, 0
		.BYTE 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0
		.BYTE 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 1, 5, 5,	5, 5
		.BYTE 4, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0
		.BYTE 0, 0, 0, 0, 0, 0,	0, 0, 0, 1, 5, 4, 0, 0,	0, 0
		.BYTE 0, 0, 0, 0, 1, 5,	2, 5, 2, 5, 4, 0, 0, 0,	0, 1
		.BYTE 5, 5, 5, 5, 5, 5,	4, 0, 0, 1, 5, 5, 5, 5,	5, 5
		.BYTE 4, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 1, 5,	3, 5
		.BYTE 3, 5, 3, 5, 3, 5,	3, 5, 4, 0, 0, 0, 0, 0,	0, 0
		.BYTE 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0
		.BYTE 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0
volkmire_screens:.BYTE 0, 1, 2,	4, 3, 3, 3, 0, 0, 0, 0,	0, 0, 1, 5, 5, 5, 5, 5,	5, 5, 5, 0, 0, 0, 0, 0,	0, 0, 0	; ...
suftcity_screens:.BYTE	0, 1, 1, 1, 1, 1, 1, 1,	1, 1, 1, 1, 1, 1, 1, 1,	1, 2, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3 ; ...
		.BYTE  3, 3, 4,	5, 5, 6, 7, 1, 1, 1, 1,	1, 1, 1, 1, 8, 9, 1, 1,	1, 1, 1, 1, 1, 1, 1, 1,	1, 1, 8
		.BYTE $A,$A, 9,	1, 1, 1, 1, 1, 1, 1, 1,	1, 1, 1, 1, 1, 1, 1, 1,	8,$A,$A,$A,$A, 9, 1, 1,	1, 1
wookie_hole_screens:.BYTE 1, 2,	2, 4, 0, 1, 3, 3, 3, 1,	1, 1, 4, 1, 0, 1, 4, 2,	2, 0, 5, 1, 4, 0, 5, 1,	1, 5 ; ...
rat_race_screens:.BYTE 0		; ...
rat_race_screens_:.BYTE	1, 1, 2, 3, 2, 3, $A, $A, 3, 2,	4, $B, $D, 2, 4, 6, 6, 8, 8, 9,	9, $C, $C, $A, $A, 5, 5	; ...
		.BYTE $B, $D, 7, 7, 8, 8, 2, 3,	2, 3, $A, $A, $A, 1, 1,	$C, $C,	$A, $A,	1, 1, $A, $A, $B, $B, $B, 1

; =============== S U B	R O U T	I N E =======================================

; input: A-snd_id, X-snd_jmp_id

sound_for_bank5:			; ...
		STA	snd_tmp_var_39
		STY	bank5_yreg_saver
		LDA	previous_bankID
		PHA
		LDY	#3
		JSR	jump_from_bank5
		PLA
		STA	previous_bankID
		LDY	bank5_yreg_saver
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		RTS
; End of function sound_for_bank5

; ---------------------------------------------------------------------------
lvl_maps_cam_cfgs:.BYTE	   7, $F0,   1,	  0 ; ...
		.BYTE	 0, $F0,   1,	1 ; 4
		.BYTE	 0,   8,   0,	1 ; 8
		.BYTE	 0, $F0,   0,	1 ; c
		.BYTE	 0, $F0,   1,	0 ; 10
; ---------------------------------------------------------------------------

camera_not_changed:			; ...
		LDA	obj_slotID_for_scroll ;	check scroll by	object
		BEQ	locret_5000_836E
		LDY	obj_slotID_for_scroll
		LDA	#0
		STA	Obj_various_cnt,Y
		STA	obj_slotID_for_scroll
		LDA	#$10
		BNE	loc_5000_839D	; jump

locret_5000_836E:			; ...
		RTS

; =============== S U B	R O U T	I N E =======================================


level_backgnd_scroll:			; ...
		LDA	#0		; level_backg_scroll
		STA	upd_tilemaps_flags ; 1=update tiles flag, 81 - update atrib flag
		LDA	Camera_X_pos_l	;  / level_position - on h levels
		TAX
		EOR	Camera_X_old
		AND	#$F8
		BEQ	loc_5000_8387
		TXA
		SEC
		SBC	Camera_X_old
		ROL	A
		STX	Camera_X_old
		LDA	#0
		BEQ	loc_5000_8399	; jump

loc_5000_8387:				; ...
		LDA	Camera_Y_pos_l	;  / level_position - on v levels
		TAX
		EOR	Camera_Y_old
		AND	#$F8
		BEQ	camera_not_changed ; check scroll by object
		TXA
		SEC
		SBC	Camera_Y_old
		ROL	A
		STX	Camera_Y_old
		LDA	#8

loc_5000_8399:				; ...
		BCS	loc_5000_839D
		ADC	#4		; 0/4/8/C/10 - scroll dir. cfg index (L/R/U/D/Obj)

loc_5000_839D:				; ...
		TAY
		TSX
		STX	stackp_save
		INC	upd_tilemaps_flags ; 1=update tiles flag, 81 - update atrib flag
		LDX	#110011b	; attributes mask
		LDA	lvl_cam_base_X_l,Y ; 7
		CLC
		ADC	Camera_X_pos_l	;  / level_position - on h levels
		STA	tmp_var_19	; low
		AND	#$10
		BEQ	loc_5000_83B3
		LDX	#11001100b	; attributes mask

loc_5000_83B3:				; ...
		LDA	Camera_X_pos_H
		ADC	lvl_cam_base_X_h,Y ; 00
		STA	tmp_var_1A	; high
		STX	tmp_var_21	; atrib	'and' mask (used for H scrolling)
		LDA	Level_ID
		CMP	#volkmire_inferno
		BNE	loc_5000_83D0
		LDX	tmp_var_1A
		LDA	#5
		CPX	#$10		; for camH>10: screenID=5
		BCS	loc_5000_83CD
		LDA	volkmire_screens,X

loc_5000_83CD:				; ...
		JMP	loc_5000_83E5
; ---------------------------------------------------------------------------

loc_5000_83D0:				; ...
		CMP	#SurfCity
		BNE	loc_5000_83DC
		LDX	tmp_var_1A
		LDA	suftcity_screens,X
		JMP	loc_5000_83E5
; ---------------------------------------------------------------------------

loc_5000_83DC:				; ...
		CMP	#TurboTunnel
		BNE	loc_5000_83E7
		LDX	tmp_var_1A
		LDA	turbotunnel_screens,X

loc_5000_83E5:				; ...
		STA	tmp_var_1A	; camera_X_high

loc_5000_83E7:				; ...
		LDA	Camera_Y_pos_l	;  / level_position - on v levels
		CLC
		ADC	lvl_cam_base_Y_l,Y ; $F0
		STA	tmp_var_1D	; y_low
		LDA	Camera_Y_pos_H
		ADC	#0
		LDX	Level_ID
		CPX	#rat_race
		BNE	loc_5000_8400
		TAX
		LDA	rat_race_screens,X
		JMP	loc_5000_8408
; ---------------------------------------------------------------------------

loc_5000_8400:				; ...
		CPX	#wookie_hole
		BNE	loc_5000_8408
		TAX
		LDA	wookie_hole_screens,X

loc_5000_8408:				; ...
		STA	tmp_var_1E	; y_high
		LDX	tmp_var_21	; atrib	'and' mask (used for H scrolling)
		LDA	X_block_lenght	; level	horiz. lenght (count 32x32 blocks by X)
		STA	tmp_var_21	; level	Horiz block count
		LDA	lvl_vram_inc_by_scrl,Y ; y = 0/4/8/c
		STA	vram_inc_for_maps ; 00/04 = LR scroll, 08/0C=00	UD scroll
		BNE	render_v_column	; h scrolling
		LDA	#1
		STA	tmp_var_21	; X blk	lenght = 1
		LDA	tmp_var_1D	; y_low
		LSR	A
		AND	#$C
		STA	tmp_var_15	;  / Object Counter / various tmp
		ORA	#1
		STA	tmp_var_16
		EOR	#3
		STA	tmp_var_17
		ORA	#1
		STA	tmp_var_18
		LDX	#$FF
		LDA	lvl_cam_base_Y_l,Y ; $F0
		JSR	count_vram_adr_by_Vscroll ; returns: A=adr_low,	tmp_var_9A=adr_h
		STA	ppu_adr_map_l
		LDA	tmp_var_9A
		STA	ppu_adr_map_h
		LDX	#$1F		; update 32 tiles
		LDY	#$F		; 0x0F - attrib. 'and' mask
		LDA	tmp_var_1D	; y_low
		AND	#$10
		BEQ	loc_5000_8448
		LDY	#$F0		; 0xF0 - attrib. 'and' mask

loc_5000_8448:				; ...
		LDA	tmp_var_19	; x_low
		JMP	loc_5000_846A
; ---------------------------------------------------------------------------

render_v_column:			; ...
		TXA			; atrib	'and' mask (used for H scrolling)
		TAY			; atrib	'and' mask (used for H scrolling)
		LDX	#$1D		; update 30 tiles
		LDA	tmp_var_19	; cam_X_low
		LSR	A
		LSR	A
		LSR	A
		STA	ppu_adr_map_l
		AND	#3
		STA	tmp_var_15	;  / Object Counter / various tmp
		ORA	#4
		STA	tmp_var_16
		EOR	#$C
		STA	tmp_var_17
		ORA	#4
		STA	tmp_var_18
		LDA	tmp_var_1D	; cam_y_low

loc_5000_846A:				; ...
		AND	#$18
		STA	tmp_var_20	; cam_Y_or_X_low & #$18
		STY	tmp_var_1F	; atrib	'and' mask
		STX	attribs_tmp+4	; save X (sp/rendrer_buff base)
		JSR	level_get_big_block_ptr	; returns ptr in tmp_var_1B tmp_var_1C
		LDX	attribs_tmp+4	; load X (sp/rendrer_buff base)
		TXS
		LDA	Level_ID
		CMP	#SurfCity
		BNE	loc_5000_8485	; surfcity configs in bank6
		LDA	#6
		JMP	to_bank6	; for surf city	lvl read
; ---------------------------------------------------------------------------

loc_5000_8485:				; ...
		LDX	#1		; BANK6:854B
		BNE	start_render_scroll_buff ; jump

render_scroll_buff_loop:		; ...
		LDX	#8		; 8 blocks
		LDA	attribs_tmp
		STA	attribs_tmp+8
		LDA	tmp_var_20	; camera_Y/X_l and 18?
		BEQ	loc_5000_84B7
		LDY	vram_inc_for_maps ; V or H scroll
		BEQ	loc_5000_84A0
		DEX			; 7 blocks
		LDY	attribs_tmp
		STY	attribs_tmp+7

loc_5000_84A0:				; ...
		CMP	#8
		BEQ	loc_5000_84B2	; 0/8/10 by camera_l pos
		CMP	#$10
		BEQ	loc_5000_84AD

render_scroll_buff_loop2:		; ...
		LDY	tmp_var_18
		LDA	(tmp_var_19),Y
		PHA

loc_5000_84AD:				; ...
		LDY	tmp_var_17
		LDA	(tmp_var_19),Y
		PHA

loc_5000_84B2:				; ...
		LDY	tmp_var_16
		LDA	(tmp_var_19),Y
		PHA

loc_5000_84B7:				; ...
		LDY	tmp_var_15	;  / Object Counter / various tmp
		LDA	(tmp_var_19),Y
		PHA
		LDA	tmp_var_1B
		SEC
		SBC	tmp_var_21	; X blk	lenght
		STA	tmp_var_1B
		BCS	start_render_scroll_buff
		DEC	tmp_var_1C	; loc_6000_858D	(surfcity mirror)

start_render_scroll_buff:		; ...
		LDY	#0
		LDA	(tmp_var_1B),Y	; e25c,	F91c - get lvl block
		STY	tmp_var_1A	; clear
		ASL	A		; sub_6000_8594	(surf city mirror)
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		ADC	lvl_blk_tiles_ptr_l ; tiles of 32x32 block
		STA	tmp_var_19
		LDA	tmp_var_1A
		ADC	lvl_blk_tiles_ptr_h
		STA	tmp_var_1A	; tmp_var_19,tmp_var_1A	- ptr to tiles dat
		LDA	(tmp_var_1B),Y
		TAY
		LDA	(lvl_blk_attrib_ptr_l),Y ; attributes of 32x32 block
		AND	tmp_var_1F	; attributes and value - #$33 /	#$CC
		STA	attribs_tmp - 1,X ; 1a0-1a6 for	hscroll; 1a0-1a7 for vscroll
		DEX			; X=1 for first	time
		BNE	render_scroll_buff_loop2
		TSX			; end of buff?
		BMI	loc_5000_8514
		CPX	#$10
		BCS	render_scroll_buff_loop
		LDY	tmp_var_18
		LDA	(tmp_var_19),Y
		PHA
		TSX
		BMI	loc_5000_8514
		LDY	tmp_var_17
		LDA	(tmp_var_19),Y
		PHA
		TSX
		BMI	loc_5000_8514
		LDY	tmp_var_16
		LDA	(tmp_var_19),Y
		PHA
		TSX
		BMI	loc_5000_8514
		LDY	tmp_var_15	;  / Object Counter / various tmp
		LDA	(tmp_var_19),Y
		PHA

loc_5000_8514:				; ...
		LDX	stackp_save
		TXS
		LDA	vram_inc_for_maps
		BNE	attribs_for_h_scroll
		JMP	attribs_for_vcroll
; ---------------------------------------------------------------------------

attribs_for_h_scroll:			; ...
		LDA	ppu_adr_map_l
		ROR	A
		BCS	need_update_attribs
		RTS
; ---------------------------------------------------------------------------

need_update_attribs:			; ...
		LDA	#$81
		STA	upd_tilemaps_flags ; 1=update tiles flag, 81 - update atrib flag
		LDA	Vscroll_value	; $00-$EF
		STA	tmp_var_99	; vscroll tmp
		LDA	#$9F
		STA	tmp_var_1B
		LDY	#1		; RAM:019F + 8
		STY	tmp_var_1C
		JSR	atrib_count_adr_ ; when	scroll horizontally
		LDA	Vscroll_value	; $00-$EF
		EOR	Camera_Y_pos_l	;  / level_position - on v levels
		AND	#$10
		STA	tmp_var_21
		JSR	fixes_for_attrib_Hscrl
		LDA	tmp_var_21
		BNE	full_atrib
		LDA	tmp_var_20
		BEQ	need_other4bits
		BNE	need_l4bits
; End of function level_backgnd_scroll


; =============== S U B	R O U T	I N E =======================================


fixes_for_attrib_Hscrl:			; ...
		LDA	tmp_var_20	; camera AND #$18
		STA	scroll_info_unused
		BNE	loc_5000_855F
		INC	tmp_var_1B	; $1A0 change base ptr to $1A1
		LDA	attribs_tmp
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	attribs_tmp+8

locret_5000_855E:			; ...
		RTS
; ---------------------------------------------------------------------------

loc_5000_855F:				; ...
		CMP	#8		; camera AND #$18?
		BNE	loc_5000_856E
		LDA	tmp_var_21	; Vscroll Xor CameraL AnD #$10
		BNE	locret_5000_855E
		TXA
		ADC	#7
		AND	#$3F
		TAX
		RTS
; ---------------------------------------------------------------------------

loc_5000_856E:				; ...
		CMP	#$10		; camera AND #$18?
		BEQ	locret_5000_8585
		LDA	attribs_tmp+7
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	attribs_tmp
		AND	#$F0
		ORA	tmp_var_15	;  / Object Counter / various tmp
		STA	attribs_tmp

locret_5000_8585:			; ...
		RTS
; End of function fixes_for_attrib_Hscrl


; =============== S U B	R O U T	I N E =======================================


attribs_for_vcroll:			; ...
		LDA	ppu_adr_map_l
		AND	#$3F
		CMP	#$20
		BCS	need_update_attribs_vscrl

locret_5000_858E:			; ...
		RTS
; End of function attribs_for_vcroll


; =============== S U B	R O U T	I N E =======================================


full_atrib:				; ...
		LDA	attributes_buff,X
		AND	tmp_var_1F	; atrib	and value - #$33/#$CC
		ORA	(tmp_var_1B),Y
		STA	attributes_buff,X
		DEY			; full block count
		BEQ	locret_5000_858E
		TXA
		SEC
		SBC	#8		; -8
		AND	#$3F		; 40 bytes
		TAX
		BCS	full_atrib	; cont normal
		BCC	need_l4bits

need_other4bits:			; ...
		LDA	tmp_var_1F	; atrib	and value - #$33/#$CC
		ORA	#$F
		AND	attributes_buff,X
		STA	attributes_buff,X
		LDA	(tmp_var_1B),Y
		ASL	A
		ASL	A
		ASL	A
		ASL	A
		ORA	attributes_buff,X
		STA	attributes_buff,X
		DEY
		BEQ	locret_5000_858E

need_l4bits:				; ...
		LDA	tmp_var_1F	; atrib	and value - #$33/#$CC
		ORA	#$F0
		AND	attributes_buff,X
		STA	attributes_buff,X
		LDA	(tmp_var_1B),Y
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		ORA	attributes_buff,X
		STA	attributes_buff,X
		TXA
		SEC
		SBC	#8
		AND	#$3F
		TAX
		BCS	need_other4bits
		BCC	full_atrib	; cont normal
; ---------------------------------------------------------------------------
byte_5000_85E1:	.BYTE 1, 0, 0, 0	; ...
; ---------------------------------------------------------------------------

need_update_attribs_vscrl:		; ...
		AND	#3
		TAY
		AND	#2
		BNE	loc_5000_85F5
		LDA	attribs_tmp
		CPY	#1
		BEQ	loc_5000_8605
		BNE	loc_5000_8608

loc_5000_85F5:				; ...
		LDA	attribs_tmp+8
		AND	#110011b
		STA	attribs_tmp+8
		LDA	attribs_tmp
		AND	#11001100b
		ORA	attribs_tmp+8

loc_5000_8605:				; ...
		STA	attribs_tmp+8

loc_5000_8608:				; ...
		LDA	#$81
		STA	upd_tilemaps_flags ; 1=update tiles flag, 81 - update atrib flag
		LDA	ppu_adr_map_l
		EOR	tmp_var_1F
		AND	#$40
		BEQ	loc_5000_8636
		LDX	#8
		LDA	tmp_var_1F	; f0 or	of
		BMI	loc_5000_8629

loc_5000_861A:				; ...
		LDA	attribs_tmp,X
		ASL	A
		ASL	A
		ASL	A
		ASL	A
		STA	attribs_tmp,X
		DEX
		BPL	loc_5000_861A
		BMI	loc_5000_8636	; jump

loc_5000_8629:				; ...
		LDA	attribs_tmp,X
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	attribs_tmp,X
		DEX
		BPL	loc_5000_8629

loc_5000_8636:				; ...
		JSR	atrib_count_adr	; when scroll vertically, returns: X, tmp_var_22

attrib_buff_write_loop_vcrl:		; ...
		LDA	attributes_buff,X
		AND	tmp_var_1F	; #$F0
		ORA	attribs_tmp,Y
		STA	attributes_buff,X
		DEY
		BEQ	locret_5000_8651
		DEX
		TXA
		AND	#7
		ORA	tmp_var_22
		TAX
		JMP	attrib_buff_write_loop_vcrl
; ---------------------------------------------------------------------------

locret_5000_8651:			; ...
		RTS
; End of function full_atrib


; =============== S U B	R O U T	I N E =======================================

; when scroll vertically, returns: X, tmp_var_22

atrib_count_adr:			; ...
		BMI	loc_5000_865A
; End of function atrib_count_adr


; =============== S U B	R O U T	I N E =======================================

; when scroll horizontally

atrib_count_adr_:			; ...
		LDA	tmp_var_1F
		EOR	#$FF
		STA	tmp_var_1F	; F0->0F ; 0F->F0

loc_5000_865A:				; ...
		LDA	tmp_var_99	; vscroll
		LSR	A
		LSR	A
		AND	#$38
		STA	tmp_var_99
		LDA	ppu_adr_map_l
		LSR	A
		LSR	A
		SEC
		SBC	byte_5000_85E1,Y
		AND	#7
		ORA	tmp_var_99
		TAX			; base attrib buff offset
		AND	#$38
		STA	tmp_var_22	; for vertical scroll, OR value	(8,10,18...)
		LDY	#8		; 8 full blocks
		RTS
; End of function atrib_count_adr_


; =============== S U B	R O U T	I N E =======================================

; returns ptr in tmp_var_1B tmp_var_1C

level_get_big_block_ptr:		; ...
		LDA	tmp_var_1A	; 19,1a	- Xpos
		ROL	tmp_var_19
		ROL	A
		ROL	tmp_var_19
		ROL	A
		ROL	tmp_var_19
		ROL	A
		LDX	Level_ID
		ADC	lvl_blk_map_ptr_l,X
		STA	tmp_var_1B
		LDA	lvl_blk_map_ptr_h,X
		ADC	#0
		STA	tmp_var_1C
		LDA	tmp_var_1E	; 1e,1d	- Ypos
		ROL	tmp_var_1D
		ROL	A
		ROL	tmp_var_1D
		ROL	A
		ROL	tmp_var_1D
		ROL	A
		STA	tmp_var_1D
		DEC	tmp_var_1D
		LDA	tmp_var_1D
		CMP	#$F0		; out of map?
		BCS	locret_5000_86C4
		LDA	X_block_lenght	; level	horiz. lenght (count 32x32 blocks by X)
		STA	tmp_var_1E
		LDA	#0
		LDX	#8

multiply:				; ...
		ROR	tmp_var_1E
		BCC	loc_5000_86B2
		ADC	tmp_var_1D

loc_5000_86B2:				; ...
		ROR	A
		DEX
		BNE	multiply
		TAX
		LDA	tmp_var_1E
		ROR	A
		CLC
		ADC	tmp_var_1B
		STA	tmp_var_1B
		TXA
		ADC	tmp_var_1C
		STA	tmp_var_1C

locret_5000_86C4:			; ...
		RTS
; End of function level_get_big_block_ptr


; =============== S U B	R O U T	I N E =======================================


get_vscroll_plus_8:			; ...
		LDA	tmp_var_99	; vscroll
		CLC
		ADC	#8
		LDX	#$FF
		JSR	loc_5000_86DF
		STA	tmp_var_15	;  / Object Counter / various tmp
		RTS
; End of function get_vscroll_plus_8


; =============== S U B	R O U T	I N E =======================================


count_plus_to_vscroll:			; ...
		LDX	tmp_var_15	;  / Object Counter / various tmp
		LDA	tmp_var_16
		JSR	count_vram_adr_by_Vscroll ; returns: A=adr_low,	tmp_var_9A=adr_h
		STA	tmp_var_15	;  / Object Counter / various tmp
		RTS
; End of function count_plus_to_vscroll


; =============== S U B	R O U T	I N E =======================================

; returns: A=adr_low, tmp_var_9A=adr_h

count_vram_adr_by_Vscroll:		; ...
		CLC
		ADC	Vscroll_value	; $00-$EF

loc_5000_86DF:				; ...
		BCS	loc_5000_86E5
		CMP	#$F0
		BCC	loc_5000_86E7

loc_5000_86E5:				; ...
		ADC	#$F

loc_5000_86E7:				; ...
		STX	tmp_var_9A
		AND	tmp_var_9A
		STA	tmp_var_99
		LDX	#8
		STX	tmp_var_9A
		ASL	A
		ROL	tmp_var_9A
		ASL	A
		ROL	tmp_var_9A
		AND	#$E0
		STA	tmp_var_9B
		LDA	tmp_var_19
		ADC	#8
		LSR	A
		LSR	A
		LSR	A
		ORA	tmp_var_9B
		RTS
; End of function count_vram_adr_by_Vscroll


; =============== S U B	R O U T	I N E =======================================


level_maps_ptrs_load:			; ...
		LDY	#$13

loc_5000_8707:				; ...
		LDA	lvl_maps_cam_cfgs,Y
		STA	lvl_cam_base_X_l,Y ; 7
		DEY
		BPL	loc_5000_8707
		LDX	Level_ID
		CPX	#karnath_lair
		BNE	loc_5000_8725
		LDA	previous_bankID
		PHA
		LDX	#9
		LDY	#7
		JSR	jump_from_bank5
		PLA
		STA	previous_bankID
		LDX	#8

loc_5000_8725:				; ...
		LDA	lvl_blk_tiles_ptrs_l,X
		STA	lvl_blk_tiles_ptr_l ; tiles of 32x32 block
		LDA	lvl_blk_tiles_ptrs_h,X
		STA	lvl_blk_tiles_ptr_h
		LDA	lvl_blk_attrib_ptrs_l,X
		STA	lvl_blk_attrib_ptr_l ; attributes of 32x32 block
		LDA	lvl_blk_attrib_ptrs_h,X
		STA	lvl_blk_attrib_ptr_h
		RTS
; End of function level_maps_ptrs_load

; ---------------------------------------------------------------------------
lvl_blk_tiles_ptrs_l:			; ...
		.DL intro_blk_tiles
		.DL level1_blk_tiles
		.DL level2_blk_tiles
		.DL level3_blk_tiles
		.DL level4_blk_tiles
		.DL revolution_blk_tiles
		.DL volkm_infer_blk_tiles
		.DL intr_excluder_blk_tiles
		.DL karnath_lair_blk_tiles
		.DL intr_excluder_blk_tiles
		.DL cling_winger_blk_tiles
		.DL terra_tubes_blk_tiles
		.DL surf_city_blk_tiles
		.DL cling_winger_blk_tiles

lvl_blk_tiles_ptrs_h:			; ...
		.DH intro_blk_tiles
		.DH level1_blk_tiles
		.DH level2_blk_tiles
		.DH level3_blk_tiles
		.DH level4_blk_tiles
		.DH revolution_blk_tiles
		.DH volkm_infer_blk_tiles
		.DH intr_excluder_blk_tiles
		.DH karnath_lair_blk_tiles
		.DH intr_excluder_blk_tiles
		.DH cling_winger_blk_tiles
		.DH terra_tubes_blk_tiles
		.DH surf_city_blk_tiles
		.DH cling_winger_blk_tiles

lvl_blk_attrib_ptrs_l:			; ...
		.DL intro_blk_attrib
		.DL level1_blk_attrib
		.DL level2_blk_attrib
		.DL level3_blk_attrib
		.DL level4_blk_attrib
		.DL revolution_blk_attrib
		.DL volkm_infer_blk_attrib
		.DL intr_excluder_blk_attrib
		.DL karnath_lair_blk_attrib
		.DL intr_excluder_blk_attrib
		.DL cling_winger_blk_attrib
		.DL terra_tubes_blk_attrib
		.DL surf_city_blk_attrib
		.DL cling_winger_blk_attrib

lvl_blk_attrib_ptrs_h:			; ...
		.DH intro_blk_attrib
		.DH level1_blk_attrib
		.DH level2_blk_attrib
		.DH level3_blk_attrib
		.DH level4_blk_attrib
		.DH revolution_blk_attrib
		.DH volkm_infer_blk_attrib
		.DH intr_excluder_blk_attrib
		.DH karnath_lair_blk_attrib
		.DH intr_excluder_blk_attrib
		.DH cling_winger_blk_attrib
		.DH terra_tubes_blk_attrib
		.DH surf_city_blk_attrib
		.DH cling_winger_blk_attrib

lvl_blk_map_ptr_l:			; ...
		.DL intro_blk_map
		.DL level1_blk_map
		.DL level2_blk_map
		.DL level3_blk_map
		.DL level4_blk_map
		.DL revolution_blk_map
		.DL volkm_infer_blk_map
		.DL intr_excluder_blk_map
		.DL level_ram1
		.DL rat_race_blk_map
		.DL cling_winger_blk_map
		.DL terra_tubes_blk_map
		.DL surf_city_blk_map
		.DL cling_winger_blk_map

lvl_blk_map_ptr_h:			; ...
		.DH intro_blk_map
		.DH level1_blk_map
		.DH level2_blk_map
		.DH level3_blk_map
		.DH level4_blk_map
		.DH revolution_blk_map
		.DH volkm_infer_blk_map
		.DH intr_excluder_blk_map
		.DH level_ram1
		.DH rat_race_blk_map
		.DH cling_winger_blk_map
		.DH terra_tubes_blk_map
		.DH surf_city_blk_map
		.DH cling_winger_blk_map

intro_blk_map:
 incbin	data\intro_blk_map.bin
intro_blk_tiles:
 incbin	data\intro_blk_tiles.bin
intro_blk_attrib:
 incbin	data\intro_blk_attrib.bin
level1_blk_map:
 incbin	data\level1_blk_map.bin
level1_blk_tiles:
 incbin	data\level1_blk_tiles.bin
level1_blk_attrib:
 incbin	data\level1_blk_attrib.bin
level2_blk_map:
 incbin	data\level2_blk_map.bin
level2_blk_tiles:
 incbin	data\level2_blk_tiles.bin
level2_blk_attrib:
 incbin	data\level2_blk_attrib.bin
level3_blk_tiles:
 incbin	data\level3_blk_tiles.bin
level3_blk_attrib:
 incbin	data\level3_blk_attrib.bin
revolution_blk_map:
 incbin	data\revolution_blk_map.bin
revolution_blk_tiles:
 incbin	data\revolution_blk_tiles.bin
revolution_blk_attrib:
 incbin	data\revolution_blk_attrib.bin
level4_blk_map:
 incbin	data\level4_blk_map.bin
level4_blk_tiles:
 incbin	data\level4_blk_tiles.bin
level4_blk_attrib:
 incbin	data\level4_blk_attrib.bin
volkm_infer_blk_map:
 incbin	data\volkm_infer_blk_map.bin
volkm_infer_blk_tiles:
 incbin	data\volkm_infer_blk_tiles.bin
volkm_infer_blk_attrib:
 incbin	data\volkm_infer_blk_attrib.bin

; intro_blk_map
; intro_blk_tiles
; intro_blk_attrib
; level1_blk_map
; level1_blk_tiles
; level1_blk_attrib
; level2_blk_map
; level2_blk_tiles
; level2_blk_attrib
; level3_blk_tiles
; level3_blk_attrib
; revolution_blk_map
; revolution_blk_tiles
; revolution_blk_attrib
; level4_blk_map
; level4_blk_tiles
; level4_blk_attrib
; volkm_infer_blk_map
; volkm_infer_blk_tiles
; volkm_infer_blk_attrib
; ---------------------------------------------------------------------------

loc_5000_B257:				; ...
		JMP	set_Z_floor_8_obj_flags_8

; =============== S U B	R O U T	I N E =======================================


clinger_winger_xz:			; ...
		LDA	#0
		STA	Objects_Z_floor,X
		LDA	objects_some_anim,X ; some obj X speed
		CPX	#2
		BCS	loc_5000_B270
		LDA	Objects_Xpos_H,X
		CMP	#6
		BNE	loc_5000_B284
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта

loc_5000_B270:				; ...
		AND	#$40
		BNE	loc_5000_B284

loc_5000_B274:				; ...
		LDA	Objects_Zpos_H,X
		BNE	loc_5000_B257
		LDA	#$2C
		CMP	Objects_Zpos_L,X
		BCC	loc_5000_B257
		STA	Objects_Zpos_L,X
		RTS
; ---------------------------------------------------------------------------

loc_5000_B284:				; ...
		LDA	Objects_Xpos_L,X
		AND	#$1F
		CMP	#$E
		BCC	locret_5000_B2AD
		CMP	#$12
		BCS	locret_5000_B2AD
		LDA	Objects_Ypos_L,X
		AND	#$1F
		CMP	#$E
		BCC	locret_5000_B2AD
		CMP	#$12
		BCS	locret_5000_B2AD
		LDA	(tmp_var_1B),Y
		LDY	#0

loc_5000_B2A2:				; ...
		CMP	byte_5000_B2D0,Y
		BEQ	loc_5000_B2AE
		INY
		INY
		CPY	#$10
		BNE	loc_5000_B2A2

locret_5000_B2AD:			; ...
		RTS
; ---------------------------------------------------------------------------

loc_5000_B2AE:				; ...
		LDA	byte_5000_B2D1,Y
		CMP	Objects_dir,X	; / angle
		BEQ	locret_5000_B2CF
		STA	Objects_dir,X	; / angle
		CPX	#2
		LDA	#$7E
		LDX	#$15
		BCS	loc_5000_B2CC
		LDA	Object_RamSlotID_tmp ; id saved	for objects functions
		ROR	A
		LDA	#$7D
		LDX	#$C
		BCC	loc_5000_B2CC
		LDX	#$F

loc_5000_B2CC:				; ...
		JMP	sound_for_bank5	; input: A-snd_id, X-snd_jmp_id
; ---------------------------------------------------------------------------

locret_5000_B2CF:			; ...
		RTS
; End of function clinger_winger_xz

; ---------------------------------------------------------------------------
byte_5000_B2D0:	.BYTE $A		; ...
byte_5000_B2D1:	.BYTE 0, $E, $C0, $20, $80, $44, $40, $24, $C0,	$43, $80, $10, 0, $D, $40 ; ...

; =============== S U B	R O U T	I N E =======================================


write_tiles_of_block:			; ...
		LDA	tmp_var_15	;  / Object Counter / various tmp
		LDY	#0
		STY	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		ADC	lvl_blk_tiles_ptr_l ; tiles of 32x32 block
		STA	tmp_var_1B
		LDA	tmp_var_1A
		ADC	lvl_blk_tiles_ptr_h
		STA	tmp_var_1C
		LDY	#0

loc_5000_B2FE:				; ...
		LDA	(tmp_var_1B),Y
		STA	bkg_update_buff,Y
		INY
		CPY	#$10
		BNE	loc_5000_B2FE
		RTS
; End of function write_tiles_of_block


; =============== S U B	R O U T	I N E =======================================


objects_3d_lvls_phys:			; ...
		LDX	Object_RamSlotID_tmp ; BANK0:A42E

objects_3d_lvls_phys_more_ptr:		; ...
		JSR	get_cfg_ptr_3d_levels
		TYA
		STA	Objects_Zpos_H,X
		STA	obj_ZposH_tmp
		STA	Objects_Z_speed,X
		STA	Objects_Z_spd_sub,X
		LDA	Level_ID
		CMP	#SurfCity
		BNE	loc_5000_B328
		INY
		LDA	(tmp_var_19),Y
		DEY
		AND	#$10
		BNE	loc_5000_B34B

loc_5000_B328:				; ...
		LDA	(tmp_var_19),Y
		STA	tmp_var_15	;  / Object Counter / various tmp
		INY
		ORA	(tmp_var_19),Y
		BEQ	loc_5000_B34B
		JSR	sub_5000_BE02
		LDA	tmp_var_15	;  / Object Counter / various tmp
		SEC
		SBC	#6
		STA	Objects_Ypos_L,X
		LDA	tmp_var_16
		SBC	#0
		STA	Objects_Ypos_H,X
		LDA	(tmp_var_19),Y
		AND	#$F0
		CMP	#$F0
		BNE	loc_5000_B39A

loc_5000_B34B:				; ...
		LDA	Objects_X_shadow,X
		BPL	loc_5000_B361
		LDA	Objects_Xpos_L,X
		SEC
		SBC	#$10
		STA	Objects_Xpos_L,X
		BCS	loc_5000_B36F
		DEC	Objects_Xpos_H,X
		JMP	loc_5000_B36F
; ---------------------------------------------------------------------------

loc_5000_B361:				; ...
		LDA	#$10
		CLC
		ADC	Objects_Xpos_L,X
		STA	Objects_Xpos_L,X
		BCC	loc_5000_B36F
		INC	Objects_Xpos_H,X

loc_5000_B36F:				; ...
		LDY	#$16
		LDA	Objects_Xpos_L,X
		SEC
		SBC	Camera_X_pos_l	;  / level_position - on h levels
		CMP	#$16
		BCC	loc_5000_B381
		CMP	#$EF
		BCC	loc_5000_B397
		LDY	#$EF

loc_5000_B381:				; ...
		TYA
		CLC
		ADC	Camera_X_pos_l	;  / level_position - on h levels
		STA	Objects_Xpos_L,X
		LDA	Camera_X_pos_H
		ADC	#0
		STA	Objects_Xpos_H,X
		LDA	Objects_X_shadow,X
		EOR	#$80
		STA	Objects_X_shadow,X

loc_5000_B397:				; ...
		JMP	objects_3d_lvls_phys_more_ptr
; ---------------------------------------------------------------------------

loc_5000_B39A:				; ...
		STA	Objects_Zpos_L,X
		STA	obj_ZposL_tmp
		LDA	Level_ID
		CMP	#ragnarok_canyon
		BNE	loc_5000_B3B4
		LDY	flag_boss_1
		BEQ	loc_5000_B3B1
		STA	Objects_Ypos_H,X
		LDA	#$10
		STA	Objects_Ypos_L,X

loc_5000_B3B1:				; ...
		JSR	levels_physics

loc_5000_B3B4:				; ...
		JSR	levels_physics
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#8
		BEQ	locret_5000_B3C9
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$F7
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		JMP	loc_5000_B34B
; ---------------------------------------------------------------------------

locret_5000_B3C9:			; ...
		RTS
; End of function objects_3d_lvls_phys


; =============== S U B	R O U T	I N E =======================================


surfcity_obj_Y_limits:			; ...
		LDA	#$A8
		CMP	Objects_Ypos_L,X
		BCC	loc_5000_B3D4
		STA	Objects_Ypos_L,X

loc_5000_B3D4:				; ...
		LDA	#$E6
		CMP	Objects_Ypos_L,X
		BCS	locret_5000_B3DE
		STA	Objects_Ypos_L,X

locret_5000_B3DE:			; ...
		RTS
; End of function surfcity_obj_Y_limits


; =============== S U B	R O U T	I N E =======================================


Surf_City_gnd_Z:			; ...
		LDA	Objects_Zpos_L,X
		SEC
		SBC	#$12
		BCC	loc_5000_B3EB
		SBC	#$40
		BCS	locret_5000_B418

loc_5000_B3EB:				; ...
		ADC	#7
		BCC	locret_5000_B418
		CPX	#2
		BCS	locret_5000_B418
		LDA	Objects_Z_floor,X
		CMP	#6
		BCS	locret_5000_B418
		LDA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		AND	#$40
		ORA	player1_razdvalen_flag?,X ; frame 56
		BNE	locret_5000_B418
		STA	Objects_Life,X
		INC	update_ui_flag
		LDA	#$C0
		STA	Objects_death_timer,X ;	undamage time
		LDA	#$FF
		STA	Objects_Zpos_H,X
		JSR	Create_water_splash
		LDY	#0

locret_5000_B418:			; ...
		RTS
; End of function Surf_City_gnd_Z

; ---------------------------------------------------------------------------

surfcity_screens:			; ...
		JSR	surfcity_obj_Y_limits
		LDA	suftcity_screens,Y
		JMP	loc_5000_B467

; =============== S U B	R O U T	I N E =======================================


get_cfg_ptr_3d_levels:			; ...
		LDA	#$C0
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDY	Objects_Xpos_H,X
		LDA	Level_ID
		CMP	#SurfCity
		BEQ	surfcity_screens
		CMP	#TurboTunnel
		BEQ	loc_5000_B43B
		CMP	#volkmire_inferno
		BNE	loc_5000_B46E
		LDA	#$B8
		STA	tmp_var_15	;  / Object Counter / various tmp

loc_5000_B43B:				; ...
		LDA	Objects_Ypos_L,X
		BPL	loc_5000_B458
		CMP	tmp_var_15	;  / Object Counter / various tmp
		BCS	loc_5000_B449
		LDA	tmp_var_15	;  / Object Counter / various tmp
		STA	Objects_Ypos_L,X

loc_5000_B449:				; ...
		SEC
		SBC	#$28
		CMP	tmp_var_15	;  / Object Counter / various tmp
		BCC	loc_5000_B458
		LDA	tmp_var_15	;  / Object Counter / various tmp
		CLC
		ADC	#$27
		STA	Objects_Ypos_L,X

loc_5000_B458:				; ...
		LDA	Level_ID
		CMP	#TurboTunnel
		BEQ	loc_5000_B464
		LDA	volkmire_screens,Y
		JMP	loc_5000_B467
; ---------------------------------------------------------------------------

loc_5000_B464:				; ...
		LDA	turbotunnel_screens,Y

loc_5000_B467:				; ...
		TAY
		LDA	turbotunnel_X_flag ; =1, if camH=$DD
		BEQ	loc_5000_B46E
		LDY	#0		; screen #0

loc_5000_B46E:				; ...
		STY	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_Xpos_L,X
		AND	#$E0
		LSR	tmp_var_15	;  / Object Counter / various tmp
		ROR	A
		LSR	tmp_var_15	;  / Object Counter / various tmp
		ROR	A
		LSR	tmp_var_15	;  / Object Counter / various tmp
		ROR	A
		STA	tmp_var_17
		LDA	#2
		STA	tmp_var_1B
		LDY	#0
		LDA	Level_ID
		CMP	#TurboTunnel
		BEQ	loc_5000_B4A9
		CMP	#volkmire_inferno
		BEQ	loc_5000_B4A9
		LDY	tmp_var_15	;  / Object Counter / various tmp
		CMP	#SurfCity
		BEQ	loc_5000_B4A9
		INC	tmp_var_1B
		LDY	#0
		LSR	tmp_var_15	;  / Object Counter / various tmp
		BCC	loc_5000_B49F
		INY

loc_5000_B49F:				; ...
		LDA	tmp_var_17
		ROR	A
		ADC	tmp_var_17
		STA	tmp_var_17
		BCC	loc_5000_B4A9
		INY

loc_5000_B4A9:				; ...
		STY	tmp_var_1A
		LDY	Level_ID
		LDA	tmp_var_17
		CLC
		ADC	lvl_3d_map_ptr_l - 1,Y
		STA	tmp_var_19
		LDA	tmp_var_1A
		ADC	lvl_3d_map_ptr_h - 1,Y
		STA	tmp_var_1A
		LDY	#0
		RTS
; End of function get_cfg_ptr_3d_levels


; =============== S U B	R O U T	I N E =======================================


sub_5000_B4BF:				; ...
		LDA	Objects_Zpos_L,X
		AND	#$10
		CLC
		ADC	#$10
		AND	byte_5000_FE62,Y
		BEQ	loc_5000_B50D
		CPX	#2
		BCS	loc_5000_B510
		LDA	Objects_death_timer,X ;	undamage time
		ORA	timer_end_music
		BNE	loc_5000_B50D
		LDA	#$89
		LDX	#$C
		JSR	sound_for_bank5	; input: A-snd_id, X-snd_jmp_id
		LDA	#$89
		LDX	#$F
		JSR	sound_for_bank5	; input: A-snd_id, X-snd_jmp_id
		LDA	#$81
		LDX	#$15
		JSR	sound_for_bank5	; input: A-snd_id, X-snd_jmp_id
		LDA	#0
		STA	Objects_Life,X
		INC	update_ui_flag
		LDA	#$90
		STA	Objects_death_timer,X ;	undamage time
		LDA	#$F0
		STA	Obj_anims_timer,X ; timer used for gfx frames
		LDA	#3
		STA	Objects_Z_speed,X
		STA	players_obj_unk,X
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		ORA	#damaged_heavy
		STA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage

loc_5000_B50D:				; ...
		JMP	loc_5000_B9FF
; ---------------------------------------------------------------------------

loc_5000_B510:				; ...
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		BNE	loc_5000_B50D
		LDA	Level_ID
		CMP	#terra_tubes
		BEQ	loc_5000_B50D
		LDA	#$81
		LDX	#$15
		JSR	sound_for_bank5	; input: A-snd_id, X-snd_jmp_id
		LDA	#2
		STA	Objects_cnt2,X
		STA	Objects_cnt3,X
		LDA	#4
		STA	Objects_TypeID,X
		LDA	#0
		STA	Objects_Anim_Ptr,X ; оффсет чтения анимации
		STA	Objects_Z_floor,X
		BEQ	loc_5000_B50D

loc_5000_B539:				; ...
		CMP	#$1F
		BEQ	loc_5000_B544
		LDA	some_lvl_flag_cnt ; 0-air,1-h_surf,2-right,3-left naklon
		BEQ	loc_5000_B544
		JMP	loc_5000_B9FF
; ---------------------------------------------------------------------------

loc_5000_B544:				; ...
		LDA	tmp_var_15	;  / Object Counter / various tmp
		CMP	#3
		BEQ	loc_5000_B54D
		JMP	sub_5000_BA87
; ---------------------------------------------------------------------------

loc_5000_B54D:				; ...
		JMP	sub_5000_BA44
; End of function sub_5000_B4BF

; ---------------------------------------------------------------------------

locret_5000_B550:			; ...
		RTS
; ---------------------------------------------------------------------------

revolution_xz_:				; ...
		JMP	revolution_xz
; ---------------------------------------------------------------------------

intr_excl_and_ratrace_xz_:		; ...
		JMP	intr_excl_and_ratrace_xz

; =============== S U B	R O U T	I N E =======================================


sub_5000_B557:				; ...
		LDA	Objects_Xpos_H,X
		STA	tmp_var_1A	; xh
		LDA	Objects_Xpos_L,X
		STA	tmp_var_19	; xl

loc_5000_B561:				; ...
		LDA	#8
		STA	global_var_cnt?
		STA	Objects_Z_floor,X
		ORA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	Objects_TypeID,X
		CMP	#$5D
		BEQ	locret_5000_B550
		CMP	#$5E
		BEQ	locret_5000_B550
		LDA	Level_ID
		CMP	#clinger_winger
		BNE	loc_5000_B58F
		LDA	Objects_Ypos_L,X
		SEC
		SBC	#$40
		STA	tmp_var_1D
		LDA	Objects_Ypos_H,X
		SBC	#0
		JMP	loc_5000_B59D
; ---------------------------------------------------------------------------

loc_5000_B58F:				; ...
		LDA	#$BF
		SEC
		SBC	Objects_Zpos_L,X
		STA	tmp_var_1D
		LDA	Objects_Ypos_H,X
		SBC	Objects_Zpos_H,X

loc_5000_B59D:				; ...
		STA	tmp_var_1E
		BMI	locret_5000_B5E7
		LDX	Level_ID
		CPX	#rat_race
		BNE	loc_5000_B5B8
		TAX
		LDA	tmp_var_1D
		CMP	#$E0
		LDA	rat_race_screens,X
		BCC	loc_5000_B5B6
		LDA	rat_race_screens_,X
		SBC	#1

loc_5000_B5B6:				; ...
		STA	tmp_var_1E

loc_5000_B5B8:				; ...
		JSR	level_get_big_block_ptr	; returns ptr in tmp_var_1B tmp_var_1C
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDY	X_block_lenght	; level	horiz. lenght (count 32x32 blocks by X)
		LDA	Level_ID
		CMP	#revolution
		BEQ	revolution_xz_
		CMP	#intruder_excluder
		BEQ	intr_excl_and_ratrace_xz_
		CMP	#rat_race
		BEQ	intr_excl_and_ratrace_xz_
		CMP	#karnath_lair
		BEQ	some_for_karnath
		CMP	#clinger_winger
		BEQ	clinger_winger_xz_
		CMP	#terra_tubes
		BEQ	terra_tubes_blocks_code_
		JSR	sub_5000_B818
		LDY	some_lvl_flag_cnt ; 0-air,1-h_surf,2-right,3-left naklon
		BNE	locret_5000_B5E7
		CPX	#2
		BCS	loc_5000_B5E8
		JSR	sub_5000_B818

locret_5000_B5E7:			; ...
		RTS
; ---------------------------------------------------------------------------

loc_5000_B5E8:				; ...
		LDA	Objects_TypeID,X
		CMP	#$38
		BNE	locret_5000_B5E7
		LDA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		BNE	locret_5000_B5E7
		LDA	Objects_Z_floor,X
		BEQ	locret_5000_B5E7
		JMP	sub_5000_B818
; ---------------------------------------------------------------------------

loc_5000_B5FC:				; ...
		JMP	locret_5000_BA04
; ---------------------------------------------------------------------------

clinger_winger_xz_:			; ...
		JMP	clinger_winger_xz
; ---------------------------------------------------------------------------

terra_tubes_blocks_code_:		; ...
		JMP	terra_tubes_blocks_code
; ---------------------------------------------------------------------------

some_for_karnath:			; ...
		CPX	#2
		BCS	loc_5000_B612
		LDA	players_obj_unk3,X
		BPL	loc_5000_B612
		INC	players_obj_unk3,X
		RTS
; ---------------------------------------------------------------------------

loc_5000_B612:				; ...
		JMP	sub_5000_B7B3
; End of function sub_5000_B557


; =============== S U B	R O U T	I N E =======================================


sub_5000_B615:				; ...
		LDA	Objects_Zpos_L,X
		AND	#$1F
		STA	tmp_var_20
		LDA	Level_ID
		CMP	#karnath_lair
		BNE	loc_5000_B65C
		CPX	#2
		BCS	loc_5000_B658
		LDA	global_var_cnt?
		CMP	#4
		BNE	loc_5000_B658
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		AND	#button_right|button_left
		BEQ	loc_5000_B63D
		ROR	A
		ROR	A
		ROR	A
		EOR	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$40
		JMP	loc_5000_B63F
; ---------------------------------------------------------------------------

loc_5000_B63D:				; ...
		LDA	#$40

loc_5000_B63F:				; ...
		STA	Objects_X_speed,X
		LDA	#2
		STA	Objects_Z_speed,X
		LDA	#0
		STA	Objects_Z_spd_sub,X
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		BPL	loc_5000_B653
		INC	Objects_Z_speed,X

loc_5000_B653:				; ...
		LDA	#8
		STA	players_obj_unk3,X

loc_5000_B658:				; ...
		LDA	some_lvl_flag_cnt ; 0-air,1-h_surf,2-right,3-left naklon
		BNE	loc_5000_B67A

loc_5000_B65C:				; ...
		LDA	byte_5000_FE62,Y
		CMP	#$2F
		BNE	loc_5000_B669
		LDA	tmp_var_19
		BEQ	loc_5000_B67A
		LDA	#$1F

loc_5000_B669:				; ...
		AND	#$7F
		CMP	tmp_var_20
		ROR	A
		EOR	byte_5000_FE62,Y
		ROL	A
		BCC	loc_5000_B67A
		LDA	byte_5000_FE62,Y
		JMP	loc_5000_B539
; ---------------------------------------------------------------------------

loc_5000_B67A:				; ...
		JMP	loc_5000_B9FF
; End of function sub_5000_B615


; =============== S U B	R O U T	I N E =======================================


revolution_xz:				; ...
		STY	tmp_var_19
		LDA	(tmp_var_1B),Y
		LDY	#$E
		CMP	#9
		BEQ	loc_5000_B68F
		CMP	#$22
		BEQ	loc_5000_B68F
		CMP	#$2B
		BNE	locret_5000_B692

loc_5000_B68F:				; ...
		JMP	loc_5000_B81F
; ---------------------------------------------------------------------------

locret_5000_B692:			; ...
		RTS
; End of function revolution_xz


; =============== S U B	R O U T	I N E =======================================


intr_excl_and_ratrace_xz:		; ...
		STY	tmp_var_19
		LDA	(tmp_var_1B),Y
		STA	global_var_cnt?
		TAY
		LDA	byte_5000_FD7D,Y
		JMP	loc_5000_B822
; End of function intr_excl_and_ratrace_xz


; =============== S U B	R O U T	I N E =======================================

; object #$6C

Create_water_splash_:			; ...
		LDA	#$6C
		STA	Objects_TypeID,Y
		TXA
		STA	Objects_TargetID,Y
		BPL	loc_5000_B6B7

Create_water_splash:			; ...
		LDY	#2

loc_5000_B6AD:				; ...
		LDA	Objects_TypeID,Y
		BEQ	Create_water_splash_ ; object #$6C
		INY
		CPY	#$E
		BNE	loc_5000_B6AD

loc_5000_B6B7:				; ...
		LDY	global_var_cnt?
		RTS
; End of function Create_water_splash_

; ---------------------------------------------------------------------------
byte_5000_B6BA:	.BYTE	 5,   6,  $B,  $C, $6B,	$6B ; ...
byte_5000_B6C0:	.BYTE  $1C, $1D, $48, $39, $38,	$38 ; ...
byte_5000_B6C6:	.BYTE	 3,   4, $49, $35, $34,	$34 ; ...
byte_5000_B6CC:	.BYTE	 7,   8, $46, $3B, $3D,	$4E ; ...

; =============== S U B	R O U T	I N E =======================================


terra_tubes_blocks_code:		; ...
		STY	tmp_var_19
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$DF
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	(tmp_var_1B),Y	; e348
		STA	global_var_cnt?
		LDY	#0

loc_5000_B6E2:				; ...
		CMP	byte_5000_B6BA,Y
		BEQ	loc_5000_B71B
		CMP	byte_5000_B6C0,Y
		BEQ	loc_5000_B707
		CMP	byte_5000_B6C6,Y
		BEQ	loc_5000_B712
		CMP	byte_5000_B6CC,Y
		BEQ	loc_5000_B6FD
		INY
		CPY	#6
		BNE	loc_5000_B6E2
		BEQ	loc_5000_B723

loc_5000_B6FD:				; ...
		LDA	Objects_Zpos_L,X
		AND	#$1F
		CMP	#7
		JMP	loc_5000_B70E
; ---------------------------------------------------------------------------

loc_5000_B707:				; ...
		LDA	Objects_Xpos_L,X
		AND	#$1F
		CMP	#$17

loc_5000_B70E:				; ...
		BCC	loc_5000_B723
		BCS	loc_5000_B71B

loc_5000_B712:				; ...
		LDA	Objects_Xpos_L,X
		AND	#$1F
		CMP	#8
		BCS	loc_5000_B723

loc_5000_B71B:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		ORA	#$20
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?

loc_5000_B723:				; ...
		LDY	global_var_cnt?
		CPX	#2
		BCC	loc_5000_B751
		LDA	byte_5000_FDED,Y
		AND	#$C0
		BNE	loc_5000_B7A3
		LDA	Objects_TypeID,X
		CMP	#$6E
		BCC	loc_5000_B7A3
		CMP	#$73
		BCS	loc_5000_B7A3
		LDA	Objects_dir,X	; / angle
		ADC	#$30
		CMP	#$80
		LDA	#$A0
		BCS	loc_5000_B748
		LDA	#$E0

loc_5000_B748:				; ...
		STA	Objects_dir,X	; / angle
		JSR	Create_water_splash
		JMP	loc_5000_B7A3
; ---------------------------------------------------------------------------

loc_5000_B751:				; ...
		LDA	byte_5000_FDED,Y
		AND	#$C0
		BEQ	loc_5000_B77D
		CMP	#$C0
		BEQ	loc_5000_B7A3
		LDA	Objects_Z_speed,X
		BPL	loc_5000_B776
		LDA	player1_water_flag,X ; $80 - in	water (terra tubes)
		BNE	loc_5000_B776
		STA	Objects_Z_speed,X
		STA	Objects_Z_spd_sub,X
		LDA	#$8F
		LDX	#$15
		JSR	sound_for_bank5	; input: A-snd_id, X-snd_jmp_id
		JSR	Create_water_splash

loc_5000_B776:				; ...
		LDA	byte_5000_FDED,Y
		AND	#$C0
		BNE	loc_5000_B7A0

loc_5000_B77D:				; ...
		LDA	player1_water_flag,X ; $80 - in	water (terra tubes)
		CMP	#$80
		BNE	loc_5000_B78F
		LDA	InputHold_P1,X	; данные первого джойстика на зажатие
		AND	#button_up|button_A
		BEQ	loc_5000_B78F
		LDA	#4
		STA	Objects_Z_speed,X

loc_5000_B78F:				; ...
		LDA	player1_water_flag,X ; $80 - in	water (terra tubes)
		BEQ	loc_5000_B7A3
		LDA	#$91
		LDX	#$15
		JSR	sound_for_bank5	; input: A-snd_id, X-snd_jmp_id
		JSR	Create_water_splash
		LDA	#0

loc_5000_B7A0:				; ...
		STA	player1_water_flag,X ; $80 - in	water (terra tubes)

loc_5000_B7A3:				; ...
		LDA	Objects_TypeID,X
		CMP	#$74
		BEQ	locret_5000_B7B2
		LDA	byte_5000_FDED,Y
		AND	#$3F
		JMP	loc_5000_B822
; ---------------------------------------------------------------------------

locret_5000_B7B2:			; ...
		RTS
; End of function terra_tubes_blocks_code


; =============== S U B	R O U T	I N E =======================================


sub_5000_B7B3:				; ...
		STY	tmp_var_19
		TYA
		CLC
		ADC	tmp_var_1B
		EOR	some_ptr_saver_l
		BNE	loc_5000_B7CD
		LDA	tmp_var_1C
		ADC	#0
		CMP	some_ptr_saver_h
		BNE	loc_5000_B7CD
		LDA	some_dat_saver
		JMP	loc_5000_B7CF
; ---------------------------------------------------------------------------

loc_5000_B7CD:				; ...
		LDA	(tmp_var_1B),Y

loc_5000_B7CF:				; ...
		STA	global_var_cnt?
		TAY
		CPX	#2
		BCS	loc_5000_B809
		LDA	Objects_Zpos_L,X
		AND	#$1F
		CMP	#8
		BCS	loc_5000_B809
		CPY	#1
		BEQ	loc_5000_B7EF
		CPY	#2
		BEQ	loc_5000_B7EF
		CPY	#5
		BEQ	loc_5000_B7EF
		CPY	#$A
		BNE	loc_5000_B809

loc_5000_B7EF:				; ...
		LDA	players_obj_unk3,X
		BEQ	loc_5000_B809
		LDA	#$50
		STA	Objects_X_speed,X
		LDA	#4
		STA	Objects_Z_speed,X
		LDA	#0
		STA	Objects_Z_spd_sub,X
		LDA	#$F6
		STA	players_obj_unk3,X
		RTS
; ---------------------------------------------------------------------------

loc_5000_B809:				; ...
		LDA	byte_5000_FD4D,Y
		JMP	loc_5000_B822
; End of function sub_5000_B7B3


; =============== S U B	R O U T	I N E =======================================


sub_5000_B80F:				; ...
		JMP	sub_5000_B4BF
; End of function sub_5000_B80F

; ---------------------------------------------------------------------------

loc_5000_B812:				; ...
		JMP	loc_5000_B5FC
; ---------------------------------------------------------------------------

loc_5000_B815:				; ...
		JMP	sub_5000_B615

; =============== S U B	R O U T	I N E =======================================


sub_5000_B818:				; ...
		STY	tmp_var_19
		LDA	(tmp_var_1B),Y
		STA	global_var_cnt?
		TAY

loc_5000_B81F:				; ...
		LDA	byte_5000_FD0C,Y

loc_5000_B822:				; ...
		TAY

loc_5000_B823:				; ...
		LDA	byte_5000_FE61,Y
		BEQ	loc_5000_B812
		AND	#$F
		STA	tmp_var_15	;  / Object Counter / various tmp
		CMP	#3
		BEQ	loc_5000_B815
		BCC	loc_5000_B83A
		CMP	#4
		BEQ	loc_5000_B815
		CMP	#7
		BEQ	sub_5000_B80F

loc_5000_B83A:				; ...
		LDA	byte_5000_FE62,Y
		LSR	A
		LSR	A
		LSR	A
		AND	#$7E
		STA	tmp_var_16
		LDA	Objects_Xpos_L,X
		AND	#$1F
		CMP	tmp_var_16
		BCC	loc_5000_B8BD
		STA	tmp_var_18
		LDA	byte_5000_FE61,Y
		LSR	A
		LSR	A
		LSR	A
		ORA	#1
		STA	tmp_var_17
		CMP	tmp_var_18
		BCC	loc_5000_B8BD
		LDA	byte_5000_FE62,Y
		AND	#$F
		ASL	A
		STA	tmp_var_1F
		LDA	Objects_Zpos_L,X
		AND	#$1F
		STA	tmp_var_20
		LDA	tmp_var_15	;  / Object Counter / various tmp
		BEQ	loc_5000_B8C0
		CMP	#9
		BEQ	loc_5000_B8C0
		STA	tmp_var_22
		CMP	#8
		BEQ	loc_5000_B892
		LDA	tmp_var_18
		SEC
		SBC	tmp_var_16
		ROR	tmp_var_22
		BCC	loc_5000_B888
		LDA	tmp_var_17
		SBC	tmp_var_18
		CLC

loc_5000_B888:				; ...
		ADC	tmp_var_1F
		STA	tmp_var_1F
		LDA	tmp_var_15	;  / Object Counter / various tmp
		CMP	#5
		BCC	loc_5000_B8C0

loc_5000_B892:				; ...
		LDA	Objects_TypeID,X
		CMP	#$38
		BEQ	loc_5000_B89D
		LDA	tmp_var_19
		BNE	loc_5000_B8BD

loc_5000_B89D:				; ...
		LDA	tmp_var_1F
		SBC	tmp_var_20
		BEQ	loc_5000_B8A5
		BCS	loc_5000_B8BD

loc_5000_B8A5:				; ...
		CMP	#$EC
		BCC	loc_5000_B8BD
		SEC
		ADC	Objects_Zpos_L,X
		STA	Objects_Zpos_L,X
		BCS	loc_5000_B8B5
		DEC	Objects_Zpos_H,X

loc_5000_B8B5:				; ...
		LDA	#$FE
		STA	Objects_Z_speed,X
		LSR	Objects_X_speed,X

loc_5000_B8BD:				; ...
		JMP	loc_5000_B9FF
; ---------------------------------------------------------------------------

loc_5000_B8C0:				; ...
		CPX	#2
		BCS	loc_5000_B8C9
		LDA	players_obj_unk16,X
		BNE	loc_5000_B8BD

loc_5000_B8C9:				; ...
		LDA	Objects_TypeID,X
		CMP	#$46
		BNE	loc_5000_B8D5
		LDA	Objects_TargetID,X
		BNE	loc_5000_B8BD

loc_5000_B8D5:				; ...
		LDA	tmp_var_19
		BEQ	loc_5000_B8BD
		LDA	tmp_var_15	;  / Object Counter / various tmp
		CMP	#9
		BNE	loc_5000_B8F9
		LDA	tmp_var_20
		SBC	tmp_var_1F
		CMP	#5
		BCS	loc_5000_B8BD
		LDA	Objects_Z_speed,X
		BMI	loc_5000_B8BD
		LDA	Objects_Zpos_L,X
		AND	#$E0
		ORA	tmp_var_1F
		STA	Objects_Zpos_L,X
		JMP	loc_5000_B9B3
; ---------------------------------------------------------------------------

loc_5000_B8F9:				; ...
		LDA	tmp_var_1F
		SEC
		SBC	tmp_var_20
		BCC	loc_5000_B8BD
		CMP	#$A
		BCS	loc_5000_B8BD
		CLC
		ADC	Objects_Zpos_L,X
		STA	Objects_Zpos_L,X
		BCC	loc_5000_B910
		INC	Objects_Zpos_H,X

loc_5000_B910:				; ...
		LDA	Level_ID
		CMP	#rat_race
		BEQ	loc_5000_B91A
		CMP	#intruder_excluder
		BNE	loc_5000_B96B

loc_5000_B91A:				; ...
		CPX	#2
		BCS	loc_5000_B92D
		LDA	Objects_AnimID,X ; номер движения для запуска
		CMP	#$10
		BEQ	loc_5000_B92A
		LDA	players_gas_slot?,X
		BEQ	loc_5000_B92D

loc_5000_B92A:				; ...
		JMP	loc_5000_B9B3
; ---------------------------------------------------------------------------

loc_5000_B92D:				; ...
		STY	tmp_var_21
		LDY	#2

loc_5000_B931:				; ...
		LDA	Objects_TypeID,Y
		CMP	#$4A
		BNE	loc_5000_B94C
		LDA	Objects_Zpos_L,X
		CMP	Objects_Zpos_L,Y
		BNE	loc_5000_B94C
		LDA	objects_some_anim,Y ; some obj X speed
		CLC
		ADC	Objects_Xpos_L,X
		STA	Objects_Xpos_L,X
		BNE	loc_5000_B967

loc_5000_B94C:				; ...
		INY
		CPY	#$F
		BNE	loc_5000_B931
		LDA	global_var_cnt?
		CMP	#$A
		BEQ	loc_5000_B95B
		CMP	#$3B
		BNE	loc_5000_B967

loc_5000_B95B:				; ...
		LDA	Objects_TypeID,X
		CMP	#$46
		BNE	loc_5000_B967
		LDA	#$10
		STA	Objects_TargetID,X

loc_5000_B967:				; ...
		LDY	tmp_var_21
		LDA	#1

loc_5000_B96B:				; ...
		CMP	#8
		BNE	loc_5000_B9B3
		LDY	#0
		LDA	(tmp_var_1B),Y
		CMP	#$27
		BNE	loc_5000_B97A
		JMP	sub_5000_B7B3
; ---------------------------------------------------------------------------

loc_5000_B97A:				; ...
		LDY	X_block_lenght	; level	horiz. lenght (count 32x32 blocks by X)
		LDA	global_var_cnt?
		CMP	#1
		BEQ	loc_5000_B9A5
		CMP	#5
		BEQ	loc_5000_B9A5
		CMP	#6
		BEQ	loc_5000_B9A5
		CMP	#2
		BEQ	loc_5000_B996
		CMP	#9
		BEQ	loc_5000_B996
		CMP	#$A
		BNE	loc_5000_B9B3

loc_5000_B996:				; ...
		LDA	Objects_Xpos_L,X
		SBC	karnath_gfx_base_add
		STA	Objects_Xpos_L,X
		BCS	loc_5000_B9B3
		DEC	Objects_Xpos_H,X
		BCC	loc_5000_B9B3

loc_5000_B9A5:				; ...
		LDA	Objects_Xpos_L,X
		CLC
		ADC	karnath_gfx_base_add
		STA	Objects_Xpos_L,X
		BCC	loc_5000_B9B3
		INC	Objects_Xpos_H,X

loc_5000_B9B3:				; ...
		STY	tmp_var_21	; X_block_lenght
		LDY	tmp_var_15	;  / Object Counter / various tmp
		STY	some_lvl_flag_cnt ; 0-air,1-h_surf,2-right,3-left naklon
		INC	some_lvl_flag_cnt ; 0-air,1-h_surf,2-right,3-left naklon
		CPX	#2
		BCS	loc_5000_BA05
		LDA	player1_updown_slide_cnt,X
		CPY	#1
		BNE	loc_5000_B9D2
		ADC	#5
		BMI	loc_5000_B9E0
		CMP	#$60
		BCC	loc_5000_B9E0
		LDA	#$60
		BNE	loc_5000_B9E0	; jump

loc_5000_B9D2:				; ...
		CPY	#2
		BNE	loc_5000_B9E3
		SBC	#6
		BPL	loc_5000_B9E0
		CMP	#$A0
		BCS	loc_5000_B9E0
		LDA	#$A0

loc_5000_B9E0:				; ...
		STA	player1_updown_slide_cnt,X

loc_5000_B9E3:				; ...
		LDY	tmp_var_21	; X_block_lenght
		LDA	tmp_var_15	;  / Object Counter / various tmp
		EOR	#9
		BEQ	loc_5000_B9F7
		LDA	#0
		STA	Objects_Z_floor,X
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BNE	loc_5000_B9FF
		LDA	#$FE

loc_5000_B9F7:				; ...
		STA	Objects_Z_speed,X
		LDA	#0
		STA	Objects_Z_spd_sub,X

loc_5000_B9FF:				; ...
		INY
		INY
		JMP	loc_5000_B823
; ---------------------------------------------------------------------------

locret_5000_BA04:			; ...
		RTS
; ---------------------------------------------------------------------------

loc_5000_BA05:				; ...
		LDA	#0
		CPY	#1
		BCC	loc_5000_B9E3
		BEQ	loc_5000_BA0F
		LDA	#$80

loc_5000_BA0F:				; ...
		CPY	#3
		BCS	loc_5000_B9E3
		EOR	Objects_dir,X	; / angle
		ROL	A
		BCC	loc_5000_BA2C
		LDA	Objects_X_speed,X
		SBC	#3
		BCS	loc_5000_BA34
		LDA	Objects_dir,X	; / angle
		EOR	#$80
		STA	Objects_dir,X	; / angle
		LDA	#$10
		BNE	loc_5000_BA34

loc_5000_BA2C:				; ...
		LDA	#6
		JSR	add_to_obj_X_speed
		JMP	loc_5000_B9E3
; ---------------------------------------------------------------------------

loc_5000_BA34:				; ...
		STA	Objects_X_speed,X
		JMP	loc_5000_B9E3
; End of function sub_5000_B818


; =============== S U B	R O U T	I N E =======================================


add_to_obj_X_speed:			; ...
		CLC
		ADC	Objects_X_speed,X
		BCS	locret_5000_BA43
		STA	Objects_X_speed,X

locret_5000_BA43:			; ...
		RTS
; End of function add_to_obj_X_speed


; =============== S U B	R O U T	I N E =======================================


sub_5000_BA44:				; ...
		LDA	byte_5000_FE61,Y
		LSR	A
		LSR	A
		LSR	A
		BEQ	loc_5000_BA6E
		STA	tmp_var_1F
		LDA	Level_ID
		CMP	#karnath_lair
		BNE	loc_5000_BA60
		LDA	Objects_Xpos_L,X
		AND	#$1F
		CMP	#$18
		BCS	loc_5000_BA6E

loc_5000_BA5D:				; ...
		JMP	loc_5000_BAF0
; ---------------------------------------------------------------------------

loc_5000_BA60:				; ...
		LDA	Objects_Xpos_L,X
		AND	#$1F
		SEC
		SBC	tmp_var_1F
		CMP	#$FA
		BCC	loc_5000_BA5D
		BCS	loc_5000_BAAE

loc_5000_BA6E:				; ...
		LDA	Objects_Xpos_L,X
		CLC
		ADC	#$20
		AND	#$E0
		STA	Objects_Xpos_L,X
		BCC	loc_5000_BA7E
		INC	Objects_Xpos_H,X

loc_5000_BA7E:				; ...
		INC	tmp_var_1B
		BNE	loc_5000_BA84
		INC	tmp_var_1C

loc_5000_BA84:				; ...
		JMP	loc_5000_BB0D
; End of function sub_5000_BA44


; =============== S U B	R O U T	I N E =======================================


sub_5000_BA87:				; ...
		LDA	byte_5000_FE61,Y
		LSR	A
		LSR	A
		LSR	A
		BEQ	loc_5000_BAF3
		CMP	#$1E
		BNE	loc_5000_BA9E
		LDA	Objects_Xpos_L,X
		AND	#$1F
		CMP	#6
		BCC	loc_5000_BAF3
		BCS	loc_5000_BAF0

loc_5000_BA9E:				; ...
		STA	tmp_var_1F
		LDA	Objects_Xpos_L,X
		AND	#$1F
		SEC
		SBC	tmp_var_1F
		CMP	#6
		BCS	loc_5000_BAF0
		DEC	tmp_var_1F

loc_5000_BAAE:				; ...
		LDA	Objects_Xpos_L,X
		AND	#$F0
		ORA	tmp_var_1F
		STA	Objects_Xpos_L,X
		CPX	#2
		BCC	loc_5000_BADF
		LDA	Level_ID
		CMP	#terra_tubes
		BEQ	loc_5000_BAD5
		LDA	#$10
		JSR	add_to_obj_X_speed
		JSR	sub_5000_BB59
		LDA	Objects_dir,X	; / angle
		EOR	#$80

loc_5000_BACF:				; ...
		STA	Objects_dir,X	; / angle
		JMP	loc_5000_B9FF
; ---------------------------------------------------------------------------

loc_5000_BAD5:				; ...
		LDA	Objects_dir,X	; / angle
		EOR	#$7F
		ADC	#0
		JMP	loc_5000_BACF
; ---------------------------------------------------------------------------

loc_5000_BADF:				; ...
		LDA	tmp_var_15	;  / Object Counter / various tmp
		ROR	A
		ROR	A
		EOR	Objects_dir,X	; / angle
		BMI	loc_5000_BAF0
		LDA	#0
		STA	Objects_X_speed,X
		STA	player1_updown_slide_cnt,X

loc_5000_BAF0:				; ...
		JMP	loc_5000_B9FF
; ---------------------------------------------------------------------------

loc_5000_BAF3:				; ...
		LDA	Objects_Xpos_L,X
		ORA	#$1F
		SEC
		SBC	#$20
		STA	Objects_Xpos_L,X
		BCS	loc_5000_BB03
		DEC	Objects_Xpos_H,X

loc_5000_BB03:				; ...
		DEC	tmp_var_1B
		LDA	tmp_var_1B
		CMP	#$FF
		BNE	loc_5000_BB0D
		DEC	tmp_var_1C

loc_5000_BB0D:				; ...
		CPX	#2
		BCC	loc_5000_BB34
		LDA	Level_ID
		CMP	#terra_tubes
		BEQ	loc_5000_BB2A
		LDA	#4
		JSR	add_to_obj_X_speed
		JSR	sub_5000_BB59
		LDA	Objects_dir,X	; / angle
		EOR	#$80

loc_5000_BB24:				; ...
		STA	Objects_dir,X	; / angle
		JMP	loc_5000_BB42
; ---------------------------------------------------------------------------

loc_5000_BB2A:				; ...
		LDA	Objects_dir,X	; / angle
		EOR	#$7F
		ADC	#0
		JMP	loc_5000_BB24
; ---------------------------------------------------------------------------

loc_5000_BB34:				; ...
		LDA	Level_ID
		CMP	#karnath_lair
		BEQ	loc_5000_BB54
		LDA	#0
		STA	Objects_X_speed,X
		STA	player1_updown_slide_cnt,X

loc_5000_BB42:				; ...
		LDY	tmp_var_19
		LDA	Level_ID
		CMP	#intruder_excluder
		BEQ	loc_5000_BB51
		CMP	#rat_race
		BEQ	loc_5000_BB51
		JMP	sub_5000_B818
; ---------------------------------------------------------------------------

loc_5000_BB51:				; ...
		JMP	intr_excl_and_ratrace_xz
; ---------------------------------------------------------------------------

loc_5000_BB54:				; ...
		LDY	tmp_var_19
		JMP	sub_5000_B7B3
; End of function sub_5000_BA87


; =============== S U B	R O U T	I N E =======================================


sub_5000_BB59:				; ...
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	locret_5000_BBB1
		LDA	#$82
		LDX	#$C
		JMP	sound_for_bank5	; input: A-snd_id, X-snd_jmp_id
; ---------------------------------------------------------------------------

loc_5000_BB65:				; ...
		LDA	#$D6
		CMP	Objects_Xpos_L,X
		BCC	loc_5000_BB75
		LDA	Objects_Xpos_L,X
		CMP	#$28
		BCS	loc_5000_BBC4
		LDA	#$28

loc_5000_BB75:				; ...
		STA	Objects_Xpos_L,X
		CPX	#2
		BCS	loc_5000_BBA5
		LDA	Objects_AnimID,X ; номер движения для запуска
		BNE	loc_5000_BB86
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BEQ	loc_5000_BBC4

loc_5000_BB86:				; ...
		LDA	Objects_X_speed,X
		CMP	#$FF
		BNE	loc_5000_BBA5
		LDA	#$14
		STA	some_sound_flag	; by tables
		LDA	#6
		STA	lvl_moving?
		LDA	Objects_Xpos_L,X
		CMP	#$80
		LDA	#$FA
		BCS	loc_5000_BBA0
		LDA	#6

loc_5000_BBA0:				; ...
		STA	camera_speed?
		DEC	Objects_X_speed,X

loc_5000_BBA5:				; ...
		LDA	Objects_TypeID,X
		EOR	#$2D
		BNE	sub_5000_BBB2

loc_5000_BBAC:				; ...
		LDA	#0
		STA	Objects_X_speed,X

locret_5000_BBB1:			; ...
		RTS
; End of function sub_5000_BB59


; =============== S U B	R O U T	I N E =======================================


sub_5000_BBB2:				; ...
		LDA	Objects_dir,X	; / angle
		EOR	#$80
		STA	Objects_dir,X	; / angle
		LDA	Objects_TypeID,X
		CMP	#$31
		BNE	loc_5000_BBC4
		JSR	sub_5000_BB59

loc_5000_BBC4:				; ...
		CPX	#2

loc_5000_BBC6:
		BCS	locret_5000_BBCD
		LDA	#$10

loc_5000_BBCA:
		STA	Objects_Z_floor,X

locret_5000_BBCD:			; ...
		RTS
; End of function sub_5000_BBB2

; ---------------------------------------------------------------------------
byte_5000_BBCE:	.BYTE $50, $20,	$40, $38 ; ...
byte_5000_BBD2:	.BYTE $E9, $E0,	$F0, $F5 ; ...

; =============== S U B	R O U T	I N E =======================================


sub_5000_BBD6:				; ...
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDY	#9
; End of function sub_5000_BBD6


; =============== S U B	R O U T	I N E =======================================


sub_5000_BBDA:				; ...
		LDA	Objects_Xpos_L,X
		CMP	byte_5000_BBCE - 7,Y
		LDA	byte_5000_BBCE - 7,Y ;	 carry is unaffected
		BCC	loc_5000_BBF2
		LDA	Objects_Xpos_L,X
		CMP	byte_5000_BBD2 - 7,Y
		BCC	locret_5000_BBFE
		LDA	byte_5000_BBD2 - 7,Y
		SBC	#1

loc_5000_BBF2:				; ...
		STA	Objects_Xpos_L,X
		CPX	#2
		BCC	loc_5000_BBAC
		AND	#$80
		STA	Objects_dir,X	; / angle

locret_5000_BBFE:			; ...
		RTS
; End of function sub_5000_BBDA


; =============== S U B	R O U T	I N E =======================================


sub_5000_BBFF:				; ...
		LDA	Objects_TypeID,X
		AND	#$FE
		CMP	#$7C
		BNE	loc_5000_BC0D
		LDY	Level_ID
		JSR	sub_5000_BBDA

loc_5000_BC0D:				; ...
		CPX	#2
		BCS	loc_5000_BC24
		LDA	players_obj_unk,X
		BNE	loc_5000_BC2A
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$10
		BEQ	loc_5000_BC24
		LDA	#1
		STA	some_lvl_flag_cnt ; 0-air,1-h_surf,2-right,3-left naklon
		JMP	loc_5000_BCA2
; ---------------------------------------------------------------------------

loc_5000_BC24:				; ...
		JMP	sub_5000_B557
; ---------------------------------------------------------------------------

loc_5000_BC27:				; ...
		JMP	loc_5000_BB65
; ---------------------------------------------------------------------------

loc_5000_BC2A:				; ...
		JMP	set_Z_floor_8_obj_flags_8
; End of function sub_5000_BBFF


; =============== S U B	R O U T	I N E =======================================


sub_5000_BC2D:				; ...
		CPX	#2
		BCS	loc_5000_BC36
		LDY	#$A
		JSR	sub_5000_BBDA

loc_5000_BC36:				; ...
		JMP	sub_5000_BBFF
; End of function sub_5000_BC2D


; =============== S U B	R O U T	I N E =======================================


levels_physics:				; ...
		LDA	#0
		STA	some_lvl_flag_cnt ; 0-air,1-h_surf,2-right,3-left naklon
		STA	some_for_Z?
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		CPX	#2
		BCS	levels_physics_all ; bge
		LDA	players_obj_unk16,X
		BEQ	levels_physics_all
		DEC	players_obj_unk16,X
		JSR	levels_physics_all
		JMP	set_Z_floor_8_obj_flags_8
; End of function levels_physics


; =============== S U B	R O U T	I N E =======================================


levels_physics_all:			; ...
		LDA	Level_ID
		CMP	#TurboTunnel
		BEQ	loc_5000_BCD2
		CMP	#SurfCity
		BEQ	loc_5000_BCD2
		CMP	#volkmire_inferno
		BEQ	sub_5000_BCBC
		CMP	#wookie_hole
		BEQ	loc_5000_BC27
		BCC	loc_5000_BCD2
		CMP	#arctic_caverns
		BEQ	loc_5000_BC0D
		CMP	#clinger_winger
		BEQ	loc_5000_BC0D
		CMP	#terra_tubes
		BEQ	loc_5000_BC0D
		CMP	#karnath_lair
		BEQ	loc_5000_BC0D
		CMP	#intruder_excluder
		BEQ	sub_5000_BC2D
		CMP	#rat_race
		BEQ	sub_5000_BC2D
		CMP	#armageddon
		BNE	loc_5000_BC94
		LDA	#0
		STA	Objects_Z_floor,X
		CPX	#2
		BCC	loc_5000_BC91
		LDY	#8
		JSR	sub_5000_BBDA

loc_5000_BC91:				; ...
		JMP	loc_5000_B274
; ---------------------------------------------------------------------------

loc_5000_BC94:				; ...
		CMP	#revolution
		BNE	locret_5000_BCBB
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$10
		BEQ	sub_5000_BCB0
		JSR	sub_5000_BCB0

loc_5000_BCA2:				; ...
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$EF
		STA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		LDA	#0
		STA	Objects_Z_floor,X
		RTS
; End of function levels_physics_all


; =============== S U B	R O U T	I N E =======================================


sub_5000_BCB0:				; ...
		LDA	#0
		STA	tmp_var_1A
		LDA	#$90
		STA	tmp_var_19
		JMP	loc_5000_B561
; End of function sub_5000_BCB0

; ---------------------------------------------------------------------------

locret_5000_BCBB:			; ...
		RTS

; =============== S U B	R O U T	I N E =======================================


sub_5000_BCBC:				; ...
		LDA	Objects_state,X	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$10
		BEQ	loc_5000_BCC9
		JSR	get_cfg_ptr_3d_levels
		JMP	loc_5000_BCA2
; ---------------------------------------------------------------------------

loc_5000_BCC9:				; ...
		LDA	Camera_X_pos_H
		CMP	#$E
		BCC	loc_5000_BCD2
		JMP	set_Z_floor_8_obj_flags_8
; ---------------------------------------------------------------------------

loc_5000_BCD2:				; ...
		JSR	get_cfg_ptr_3d_levels
		STY	tmp_var_1F
		LDA	Level_ID
		CMP	#SurfCity
		BNE	loc_5000_BCE0
		JSR	Surf_City_gnd_Z

loc_5000_BCE0:				; ...
		LDA	(tmp_var_19),Y
		STA	tmp_var_15	;  / Object Counter / various tmp
		INY
		ORA	(tmp_var_19),Y
		BEQ	loc_5000_BD3F
		JSR	sub_5000_BE02
		LDA	Objects_Ypos_L,X
		SEC
		SBC	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_Ypos_H,X
		SBC	tmp_var_16
		BCS	loc_5000_BD3F
		LDA	tmp_var_1F
		STA	tmp_var_20
		LDA	Level_ID
		CMP	#SurfCity
		BNE	loc_5000_BD16
		LDA	(tmp_var_19),Y
		AND	#$F0
		CMP	#$20
		BEQ	loc_5000_BD0F
		CMP	#$60
		BNE	loc_5000_BD16

loc_5000_BD0F:				; ...
		SBC	#8
		STA	tmp_var_1F
		JMP	loc_5000_BD1A
; ---------------------------------------------------------------------------

loc_5000_BD16:				; ...
		LDA	(tmp_var_19),Y
		AND	#$F0

loc_5000_BD1A:				; ...
		STA	tmp_var_1F
		SBC	#$A
		SBC	Objects_Zpos_L,X
		BCC	loc_5000_BD32
		LDA	Level_ID
		CMP	#TurboTunnel
		BEQ	loc_5000_BD32
		LDA	Objects_Zpos_H,X
		BNE	loc_5000_BD32
		LDA	#1
		STA	tmp_var_1B

loc_5000_BD32:				; ...
		LDA	tmp_var_15	;  / Object Counter / various tmp
		STA	tmp_var_17
		LDA	tmp_var_16
		STA	tmp_var_18
		INY
		DEC	tmp_var_1B
		BNE	loc_5000_BCE0

loc_5000_BD3F:				; ...
		LDA	tmp_var_1F
		STA	some_for_Z?
		BEQ	loc_5000_BD5E
		CMP	#$F0
		BEQ	loc_5000_BD6C
		LDA	Objects_Zpos_L,X
		SEC
		SBC	tmp_var_1F
		STA	Objects_Z_floor,X
		LDA	Objects_Zpos_H,X
		SBC	#0
		BCC	loc_5000_BD61
		BNE	set_Z_floor_8_obj_flags_8
		JMP	loc_5000_BDDB
; ---------------------------------------------------------------------------

loc_5000_BD5E:				; ...
		JMP	set_Z_floor_8_obj_flags_8
; ---------------------------------------------------------------------------

loc_5000_BD61:				; ...
		LDA	obj_ZposH_tmp
		BNE	locret_5000_BDCB
		LDA	obj_ZposL_tmp
		SEC
		SBC	tmp_var_1F
		BCS	loc_5000_BDB6

loc_5000_BD6C:				; ...
		LDA	#$80
		STA	some_lvl_flag_cnt ; 0-air,1-h_surf,2-right,3-left naklon
		LDA	Level_ID
		CMP	#TurboTunnel
		BEQ	set_Z_floor_8_obj_flags_8
		CMP	#volkmire_inferno
		BEQ	set_Z_floor_8_obj_flags_8
		LDA	tmp_var_17
		STA	Objects_Ypos_L,X
		LDA	tmp_var_18
		STA	Objects_Ypos_H,X
		LDA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$EF
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	#$40
		CMP	Objects_X_speed,X
		BCS	loc_5000_BD9E
		STA	Objects_X_speed,X
		LDA	#4
		ADC	Obj_various_cnt,X
		STA	Obj_various_cnt,X

loc_5000_BD9E:				; ...
		LDY	Objects_Zpos_H,X
		BNE	loc_5000_BDA9
		LDA	tmp_var_20
		BEQ	set_Z_floor_8_obj_flags_8
		STA	tmp_var_1F

loc_5000_BDA9:				; ...
		LDA	Objects_Zpos_L,X
		SEC
		SBC	tmp_var_20
		LDY	Objects_Zpos_H,X
		BNE	loc_5000_BDC8
		BCS	loc_5000_BDD8

loc_5000_BDB6:				; ...
		LDA	tmp_var_1F
		STA	Objects_Zpos_L,X
		LDA	Obj_anims_timer,X ; timer used for gfx frames
		BNE	loc_5000_BDC6
		STA	Objects_Z_speed,X
		STA	Objects_Z_spd_sub,X

loc_5000_BDC6:				; ...
		LDA	#0

loc_5000_BDC8:				; ...
		STA	Objects_Z_floor,X

locret_5000_BDCB:			; ...
		RTS
; ---------------------------------------------------------------------------

set_Z_floor_8_obj_flags_8:		; ...
		LDA	#8
		ORA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	#8
		BNE	loc_5000_BDC8	; jump

loc_5000_BDD8:				; ...
		STA	Objects_Z_floor,X

loc_5000_BDDB:				; ...
		LDA	obj_ZposH_tmp
		BNE	locret_5000_BDCB
		LDA	obj_ZposL_tmp
		CMP	#8
		BCC	locret_5000_BDCB
		SBC	tmp_var_1F
		BCC	loc_5000_BDB6
		RTS
; End of function sub_5000_BCBC

; ---------------------------------------------------------------------------
lvl_3d_map_ptr_l:			; ...
		 .DL level1_3d_map
		 .DL level1_3d_map
		 .DL level3_3d_map
		 .DL level3_3d_map
		 .DL level3_3d_map
		 .DL volkm_infer_3d_map
		 .DL level3_3d_map
		 .DL level3_3d_map
		 .DL level3_3d_map
		 .DL level3_3d_map
		 .DL level3_3d_map
		 .DL surf_city_3d_map
lvl_3d_map_ptr_h:			; ...
		 .DH level1_3d_map
		 .DH level1_3d_map
		 .DH level3_3d_map
		 .DH level3_3d_map
		 .DH level3_3d_map
		 .DH volkm_infer_3d_map
		 .DH level3_3d_map
		 .DH level3_3d_map
		 .DH level3_3d_map
		 .DH level3_3d_map
		 .DH level3_3d_map
		 .DH surf_city_3d_map

; =============== S U B	R O U T	I N E =======================================


sub_5000_BE02:				; ...
		LDA	#0
		ASL	tmp_var_15	;  / Object Counter / various tmp
		ROL	A
		ASL	tmp_var_15	;  / Object Counter / various tmp
		ROL	A
		STA	tmp_var_16
		LDA	(tmp_var_19),Y
		AND	#$F
		BEQ	locret_5000_BE3C
		CMP	#1
		BEQ	loc_5000_BE22
		CMP	#2
		BNE	locret_5000_BE3C
		LDA	Objects_Xpos_L,X
		EOR	#$1F
		JMP	loc_5000_BE25
; ---------------------------------------------------------------------------

loc_5000_BE22:				; ...
		LDA	Objects_Xpos_L,X

loc_5000_BE25:				; ...
		AND	#$1F
		STA	tmp_var_8b
		LDA	Level_ID
		CMP	#volkmire_inferno
		BNE	loc_5000_BE31
		ASL	tmp_var_8b

loc_5000_BE31:				; ...
		LDA	tmp_var_8b
		CLC
		ADC	tmp_var_15	;  / Object Counter / various tmp
		STA	tmp_var_15	;  / Object Counter / various tmp
		BCC	locret_5000_BE3C
		INC	tmp_var_16

locret_5000_BE3C:			; ...
		RTS
; End of function sub_5000_BE02

; ---------------------------------------------------------------------------

level1_3d_map:
 incbin	data\level1_3d_map.bin
level3_3d_map:
 incbin	data\level3_3d_map.bin
volkm_infer_3d_map:
 incbin	data\volkm_infer_3d_map.bin
surf_city_3d_map:
 incbin	data\surf_city_3d_map.bin
intr_excluder_blk_map:
 incbin	data\intr_excluder_blk_map.bin
intr_excluder_blk_tiles:
 incbin	data\intr_excluder_blk_tiles.bin
intr_excluder_blk_attrib:
 incbin	data\intr_excluder_blk_attrib.bin
karnath_lair_blk_tiles:
 incbin	data\karnath_lair_blk_tiles.bin
karnath_lair_blk_attrib:
 incbin	data\karnath_lair_blk_attrib.bin
cling_winger_blk_map:
 incbin	data\cling_winger_blk_map.bin
cling_winger_blk_tiles:
 incbin	data\cling_winger_blk_tiles.bin
cling_winger_blk_attrib:
 incbin	data\cling_winger_blk_attrib.bin
terra_tubes_blk_map:
 incbin	data\terra_tubes_blk_map.bin
terra_tubes_blk_tiles:
 incbin	data\terra_tubes_blk_tiles.bin
terra_tubes_blk_attrib:
 incbin	data\terra_tubes_blk_attrib.bin
surf_city_blk_map:
 incbin	data\surf_city_blk_map.bin
rat_race_blk_map:
 incbin	data\rat_race_blk_map.bin

; level1_3d_map
; level3_3d_map
; volkm_infer_3d_map
; surf_city_3d_map
; intr_excluder_blk_map
; intr_excluder_blk_tiles
; intr_excluder_blk_attrib
; karnath_lair_blk_tiles
; karnath_lair_blk_attrib
; cling_winger_blk_map
; cling_winger_blk_tiles
; cling_winger_blk_attrib
; terra_tubes_blk_map
; terra_tubes_blk_tiles
; terra_tubes_blk_attrib
; surf_city_blk_map
; rat_race_blk_map
byte_5000_FD0C:	.BYTE $43, $43,	$43, $58, $58, $81, $46, $4E, $43, $60,	$49, $9F, $5D, $4C, $58, $5B, $60, $65,	$6A, $6F, $A2, $43, $43	; ...
		.BYTE $43, $43,	$51, $9F, $44, $43, $49, $A5, $74, $7B,	$7E, $9F, $43, $9F, $A2, $A2, $9F, $8F,	$92, $95, $9F, $9A, $9A
		.BYTE $95, $A2,	$43, $43, $43, $81, $88, $43, $43, $43,	$43, $43, $6F, $8F, $8F, $8F, $92, $43,	$43
byte_5000_FD4D:	.BYTE $43, $56,	$56, $B6, $B6, $A8, $AF, $BB, $BB, $A8,	$AF, $BB, $BB, $43, $43, $43, $9F, $9F,	$9F, $58, $A2, $A2, $A2	; ...
		.BYTE $43, $58,	$58, $58, $9F, $9F, $9F, $A2, $A2, $A2,	$43, $43, $43, $43, $A2, $9F, $A5, $43,	$43, $43, $43, $43, $43
		.BYTE $43, $43
byte_5000_FD7D:	.BYTE $43, $43,	$C6, $C6, $43, $43, $43, $43, $43, $C2,	$56, $43, $43, $43, $43, $43, $43, $43,	$43, $43, $43, $C6, $C6	; ...
		.BYTE $C6, $C6,	$C6, $43, $C6, $43, $43, $43, $D0, $56,	$56, $C2, $43, $43, $43, $43, $43, $43,	$43, $43, $43, $43, $43
		.BYTE $43, $43,	$43, $43, $43, $43, $43, $43, $C9, $C9,	$43, $CD, $CD, $56, $CD, $CD, $43, $43,	$43, $CD, $43, $C6, $43
		.BYTE $43, $CD,	$CD, $CD, $43, $43, $43, $C2, $D5, $43,	$43, $C9, $CD, $CD, $43, $43, $43, $43,	$43, $43, $43, $CD, $43
		.BYTE $CD, $43,	$D0, $56, $56, $C9, $D5, $D0, $56, $D0,	$D0, $43, $43, $CD, $CD, $CD, $43, $56,	$43, $43
byte_5000_FDED:	.BYTE $B, 9, $22, $22, 9, $C9, $E2, $13, $16, $13, $16,	$D6, $D3, $B, 2, $2C, $27, $3E,	$1B, $36, $E, $31, $B, $B, $B ;	...
		.BYTE $B, $B, $B, $22, 9, $13, $16, $62, $5B, $67, $71,	$53, $6C, $56, $B, $93,	$8B, $E2, $96, $E7, $DB, $8B, $96, $93
		.BYTE $82, $8E,	$89, $89, $A2, $AC, $B6, $89, $A2, $BE,	$93, $93, $96, $96, $B1, $AC, $8B, $B, $A0, $99, $A5, $B, $B
		.BYTE $62, $62,	$B, $8B, $8B, $96, $96,	$B, $B,	$B, $8B, $8B, $8B, $8B,	$8B, $8B, $8B, $8B, $8B, $8B, $8B, $8B,	$8B
		.BYTE $8B, $8B,	$8B, $8B, $8B, $8B, $8B, $8B, $8C, $87,	$80, $BB, $B, $76, $7E,	$19, $25, $20, $3B, $B,	$B
byte_5000_FE61:	.BYTE 7			; ...
byte_5000_FE62:	.BYTE $10, $63,	$1F, $F9, 3, 0,	7, $10,	$F9, 3,	0, 7, $10, $A4,	$1F, $F9, 3, 0,	$63, $1F, 0, $A4, $1F, 0, 7, $10, $63 ;	...
		.BYTE $1F, $F0,	3, 0, 7, $10, $F0, 3, 0, 7, $10, $A4, $1F, $F0,	3, 0, $F0, $A3,	$A4, 4,	0, $40,	3, $63,	4, 0, $A4, $86
		.BYTE $F9, $A3,	0, 7, $30, 0, $63, $86,	$49, 3,	0, 0, $71, 0, $F2, $80,	0, $71,	0, 0, $F0, $F, $F2, $7F, 0, $81, $F
		.BYTE $F2, $8F,	0, $F9,	0, $F0,	$F, 0, $F0, $8F, $81, $F, 0, $80, $F, $F1, $78,	0, $F0,	$7F, $82, 8, 0,	$C2, 8,	4, $C
		.BYTE 0, $F1, $48, 3, $C, 0, $F0, $7F, $82, 8, 4, $C, 0, $C2, 8, 0, $F1, $48, 0, $F4, $2F, $A3,	$2F, $F0, $F, 0, $A0
		.BYTE $F, $F4, $3F, $A3, $3F, 0, $F6, 6, 0, $F5, $66, 0, $65, 0, $F8, $70, 0, $F6, $A0,	$98, 0,	0, 3, $1F, 0, 4, $1F
		.BYTE 0, 7, $30, 0, $F4, $1F, $F0, $F, $F3, $1F, 0, $F3, $1F, $F0, $F, $F4, $1F, 0, $F4, $1F, $F3, $1F,	0, $F4,	$1F
		.BYTE $F3, $1F,	$F9, 0,	0, $F0,	$F, $F9, 0, $C3, $1F, 0, $F0, $F, $F9, 0, $B4, $1F, 0, $F0, $8F, $F9, $80, 0, $F0, $6F
		.BYTE $F9, $60,	$B4, $1F, 0
; ---------------------------------------------------------------------------

locret_5000_FF3D:			; ...
		RTI
; ---------------------------------------------------------------------------
bank5_end:
 .PAD $FF50,$FF
; bank5_end
; ---------------------------------------------------------------------------

loc_5000_FF50:				; ...
		STA	banks_ids5+6
		JMP	loc_5000_FF50
; ---------------------------------------------------------------------------

to_bank6:				; ...
		TAY			; for surf city	lvl read
		STA	banks_ids5,Y	; BANK6:FF57
		JMP	loc_5000_8514
; ---------------------------------------------------------------------------
		LDA	#5
		STA	banks_ids5+5
		LDA	(tmp_var_1B),Y
		LDY	#6
		STY	banks_ids5+6

loc_5000_FF69:				; ...
		JMP	loc_5000_FF69
; ---------------------------------------------------------------------------
 .PAD $FF78,$FF
; BANK5:FF6C
; ---------------------------------------------------------------------------
		STA	banks_ids5+3
		JSR	bank5_end
		LDA	#0
		STA	banks_ids5
		RTS
; ---------------------------------------------------------------------------
		STA	prev_bank_id_m	; saves	mirror,	when jump from bank 0 to bank3 to music	f
		AND	#$10
		ORA	#3
		TAY
		STA	banks_ids5,Y
		JSR	bank5_end
		LDA	prev_bank_id_m	; saves	mirror,	when jump from bank 0 to bank3 to music	f
		TAY
		STA	banks_ids5,Y
		RTS
; ---------------------------------------------------------------------------

NMI5:					; ...
		STX	NMI_Xreg_saver
		STA	NMI_Areg_saver
		LDA	#5
		LDX	#0
		STX	banks_ids5
		JMP	locret_5000_FF3D
; ---------------------------------------------------------------------------
		LDX	NMI_Xreg_saver
		LDA	previous_bankID_NMI
		TAY
		STA	banks_ids5,Y
		LDY	NMI_Yreg_saver
		LDA	NMI_Areg_saver
		RTI
; ---------------------------------------------------------------------------
banks_ids5:	.BYTE 0, 1, 2, 3, 4, 5,	6, 7, 8, 9, $A,	$B, $C,	$D, $E,	$F, $10, $11, $12, $13,	$14, $15, $16, $17 ; ...

; =============== S U B	R O U T	I N E =======================================


jump_from_bank5:			; ...
		LDA	#0
		ORA	#5
		STA	previous_bankID
		LDA	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		PHA
		STX	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		LDA	banks_ids5,Y
		STA	banks_ids5,Y
		JSR	sub_5000_8000
		LDY	previous_bankID
		PLA
		STA	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		LDA	banks_ids5,Y
		STA	banks_ids5,Y
		RTS
; End of function jump_from_bank5

; ---------------------------------------------------------------------------

wait5:					; ...
		DEX
		BNE	wait5
		DEY
		BNE	wait5
		RTS
; ---------------------------------------------------------------------------

loc_5000_FFF2:				; ...
		LDA	#0
		STA	banks_ids5
		JMP	loc_5000_FFF2
; ---------------------------------------------------------------------------
		.WORD NMI5
		.WORD loc_5000_FFF2
		.WORD locret_5000_FF3D
; end of 'BANK5'

.base $8000
; ===========================================================================

; Segment type:	Pure code
		;.segment BANK6

; =============== S U B	R O U T	I N E =======================================


sub_6000_8000:				; ...
		JMP	(JumpTable_ptr_main) ; указатель на функцию при	переходе в другой банк
; End of function sub_6000_8000

; ---------------------------------------------------------------------------
		JMP	obj_sprites_
; ---------------------------------------------------------------------------
		JMP	level_base_load
; ---------------------------------------------------------------------------
		JMP	level_values_load
; ---------------------------------------------------------------------------
		JMP	first_load
; ---------------------------------------------------------------------------
		JMP	sub_6000_A4F5
; ---------------------------------------------------------------------------
		JMP	loc_6000_A68E
; ---------------------------------------------------------------------------
		JMP	sub_6000_90E8
; ---------------------------------------------------------------------------
		JMP	sub_6000_9154
; ---------------------------------------------------------------------------
		JMP	sub_6000_91BA
; ---------------------------------------------------------------------------
		JMP	sub_6000_91DB
; ---------------------------------------------------------------------------
		JMP	Cont_screen_sprites?
; ---------------------------------------------------------------------------
		JMP	loc_6000_9CB9
; ---------------------------------------------------------------------------
		JMP	starship_sprites?
; ---------------------------------------------------------------------------
		.BYTE $4C ; L		; unused
		.BYTE $89 ; Й
		.BYTE $AE ; о
; ---------------------------------------------------------------------------
		JMP	sub_6000_90B2
; ---------------------------------------------------------------------------
		JMP	game_over_event
; ---------------------------------------------------------------------------
		JMP	sub_6000_A88A
; ---------------------------------------------------------------------------
		JMP	sub_6000_A9B9
; ---------------------------------------------------------------------------
		JMP	sub_6000_AA70
; ---------------------------------------------------------------------------
		JMP	sub_6000_AB3B
; ---------------------------------------------------------------------------
		JMP	sub_6000_AB8A
; ---------------------------------------------------------------------------
		JMP	sub_6000_ABE5
; ---------------------------------------------------------------------------
		JMP	sub_6000_AC24
; ---------------------------------------------------------------------------
		JMP	load_palettes_2_22_or_4_6
; ---------------------------------------------------------------------------
		JMP	continue_game_end
; ---------------------------------------------------------------------------
		JMP	sub_6000_A9AB
; ---------------------------------------------------------------------------
		JMP	sub_6000_ACF7
; ---------------------------------------------------------------------------
		JMP	sub_6000_A994
; ---------------------------------------------------------------------------
		JMP	sub_6000_AD7A
; ---------------------------------------------------------------------------
		JMP	sub_6000_AE15
; ---------------------------------------------------------------------------
		JMP	sub_6000_8E74
; ---------------------------------------------------------------------------
		JMP	sub_6000_8F1B
; ---------------------------------------------------------------------------
		JMP	sub_6000_8FB2
; ---------------------------------------------------------------------------
		.WORD $FFFF, $FFFF, $FFFF, $FFFF, $FFFF

; =============== S U B	R O U T	I N E =======================================


some_waiting:				; ...
		LDX	#$13

loc_6000_8072:				; ...
		DEX
		BNE	loc_6000_8072
		NOP
		NOP
		TYA
		AND	#7
		CMP	#3
		BCS	loc_6000_807E

loc_6000_807E:
		INY
		BNE	some_waiting
		RTS
; End of function some_waiting

; ---------------------------------------------------------------------------
byte_6000_8082:	.BYTE $21		; ...
byte_6000_8083:	.BYTE $E3		; ...
byte_6000_8084:	.BYTE 0			; ...
byte_6000_8085:	.BYTE 0			; ...
byte_6000_8086:	.BYTE $7A		; ...
byte_6000_8087:	.BYTE $7B		; ...
byte_6000_8088:	.BYTE $7C		; ...
byte_6000_8089:	.BYTE $7D		; ...
byte_6000_808A:	.BYTE $7E		; ...
byte_6000_808B:	.BYTE $7F		; ...
byte_6000_808C:	.BYTE $80		; ...
byte_6000_808D:	.BYTE $81		; ...
byte_6000_808E:	.BYTE $82		; ...
		.BYTE  $22,   3,   0,  $C, $8F,	$90, $91, $92, $93, $94, $95, $96, $97
		.BYTE  $22, $23,   0, $A6, $A7,	$A8, $A9, $AA, $AB, $AC, $AD, $AE, $AF
		.BYTE  $22, $43,   0, $C0, $C1,	$C2, $C3, $C4, $C5, $C6, $C7, $C8, $C9
		.BYTE  $22, $63,   0, $DC, $DD,	$DE, $DF, $E0, $E1, $E2, $E3, $E4, $E5
		.BYTE  $22, $83,   0,	1,   2,	  3,   4,   5,	 6,   7,   8,	9,  $A
		.BYTE  $22, $A3, $17, $18, $19,	$1A, $1B, $1C, $1D, $1E, $1F, $20, $21
		.BYTE  $22, $C3, $2E, $2F, $30,	$31, $32, $33, $34, $35, $36, $37, $38
		.BYTE  $22, $E3, $44, $45, $46,	$47, $48, $49, $4A, $4B, $4C, $4D, $4E
		.BYTE  $23,   3,   0, $5B, $5C,	$5D, $5E, $5F, $60, $61, $62, $63, $64
		.BYTE  $23, $23, $71, $72, $73,	$74, $75, $76, $77, $78, $79, $7A, $7B
		.BYTE  $23, $43, $84, $85, $86,	$87, $88,   0,	 0, $89, $8A, $8B, $8C
		.BYTE  $23, $63,   0,	0, $93,	  0,   0,   0,	 0,   0,   0,	0, $94

surf_city_blk_tiles:
 incbin	data\surf_city_blk_tiles.bin
surf_city_blk_attrib:
 incbin	data\surf_city_blk_attrib.bin

; surf_city_blk_tiles
; surf_city_blk_attrib

; =============== S U B	R O U T	I N E =======================================


sub_6000_854B:				; ...
		LDX	#1
		BNE	loc_6000_858D	; jump

loc_6000_854F:				; ...
		LDX	#8
		LDA	attribs_tmp
		STA	attribs_tmp+8
		LDA	tmp_var_20
		BEQ	loc_6000_857D
		LDY	vram_inc_for_maps
		BEQ	loc_6000_8566
		DEX
		LDY	attribs_tmp
		STY	attribs_tmp+7

loc_6000_8566:				; ...
		CMP	#8
		BEQ	loc_6000_8578
		CMP	#$10
		BEQ	loc_6000_8573

loc_6000_856E:				; ...
		LDY	tmp_var_18
		LDA	(tmp_var_19),Y
		PHA

loc_6000_8573:				; ...
		LDY	tmp_var_17
		LDA	(tmp_var_19),Y
		PHA

loc_6000_8578:				; ...
		LDY	tmp_var_16
		LDA	(tmp_var_19),Y
		PHA

loc_6000_857D:				; ...
		LDY	tmp_var_15	;  / Object Counter / various tmp
		LDA	(tmp_var_19),Y
		PHA
		LDA	tmp_var_1B
		SEC
		SBC	tmp_var_21
		STA	tmp_var_1B
		BCS	loc_6000_858D
		DEC	tmp_var_1C

loc_6000_858D:				; ...
		LDY	#0
		STY	tmp_var_1A
		JMP	get_byte_from_bank5
; End of function sub_6000_854B


; =============== S U B	R O U T	I N E =======================================


sub_6000_8594:				; ...
		TAY
		ASL	A
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		ADC	lvl_blk_tiles_ptr_l ; tiles of 32x32 block
		STA	tmp_var_19
		LDA	tmp_var_1A
		ADC	lvl_blk_tiles_ptr_h
		STA	tmp_var_1A
		LDA	(lvl_blk_attrib_ptr_l),Y ; attributes of 32x32 block
		AND	tmp_var_1F
		STA	attribs_tmp - 1,X
		DEX
		BNE	loc_6000_856E
		TSX
		BMI	loc_6000_85D9
		CPX	#$10
		BCS	loc_6000_854F
		LDY	tmp_var_18
		LDA	(tmp_var_19),Y
		PHA
		TSX
		BMI	loc_6000_85D9
		LDY	tmp_var_17
		LDA	(tmp_var_19),Y
		PHA
		TSX
		BMI	loc_6000_85D9
		LDY	tmp_var_16
		LDA	(tmp_var_19),Y
		PHA
		TSX
		BMI	loc_6000_85D9
		LDY	tmp_var_15	;  / Object Counter / various tmp
		LDA	(tmp_var_19),Y
		PHA

loc_6000_85D9:				; ...
		LDA	#5
		JMP	to_bank5
; End of function sub_6000_8594

; ---------------------------------------------------------------------------

locret_6000_85DE:			; ...
		RTS

; =============== S U B	R O U T	I N E =======================================


inferno_electro_sprites:		; ...
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		ROR	A
		ROR	A
		ROR	A
		AND	#$C0
		ORA	#2
		STA	tmp_var_19
		LDA	Objects_Y_shad,Y
		SBC	objects_some_anim,Y ; some obj X speed
		STA	tmp_var_8c
		LDA	#$F8

loc_6000_85F4:				; ...
		STA	tmp_var_8b

loc_6000_85F6:				; ...
		LDA	Objects_X_shadow,Y
		STA	Sprites_Xpos,X
		LDA	#$BD
		STA	Sprites_Adress,X
		LDA	tmp_var_19
		STA	Sprites_Attrib,X
		CLC
		ADC	#$40
		STA	tmp_var_19
		LDA	tmp_var_8c
		STA	Sprites_Ypos,X
		INX
		INX
		INX
		INX
		BEQ	locret_6000_85DE
		CLC
		ADC	tmp_var_8b
		STA	tmp_var_8c
		CMP	#$20
		BCS	loc_6000_85F6
		LDA	tmp_var_8b
		BPL	loc_6000_862C
		LDA	Objects_Y_shad,Y
		STA	tmp_var_8c
		LDA	#8
		BNE	loc_6000_85F4

loc_6000_862C:				; ...
		JMP	object_sprites_cycle
; End of function inferno_electro_sprites


; =============== S U B	R O U T	I N E =======================================


obj_sprites_:				; ...
		LDX	#$E		; ???
		LDX	#4
		LDA	FrameCounter
		AND	#1
		BEQ	loc_6000_863B
		LDA	#$E		; count	from E or 0

loc_6000_863B:				; ...
		TAY			; 0 or E

object_sprites:				; ...
		STY	tmp_var_15	;  / Object Counter / various tmp
		LDA	obj_slotIDs_for_spr,Y ;	not really used/removed	in BTDD
		TAY
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		BMI	skip_obj_sprites
		LDA	Level_ID
		CMP	#revolution
		BNE	object_sprites_
		LDA	Objects_X_shadow,Y
		BEQ	skip_obj_sprites
		CMP	#$FF
		BNE	object_sprites_

skip_obj_sprites:			; ...
		JMP	object_sprites_cycle
; ---------------------------------------------------------------------------

object_sprites_:			; ...
		STY	tmp_var_16	; slotID
		LDA	Objects_TypeID,Y ; btdd	uses table for specific	object sprites
		CMP	#$67
		BEQ	inferno_electro_spr
		CMP	#$5F
		BEQ	stick_wall_spr?
		CMP	#$30
		BEQ	powerups_spr
		CMP	#$2D
		BEQ	toadtrap_spr
		CMP	#$2E
		BEQ	electro_spr
		CMP	#$11
		BEQ	hoduli_spr
		CMP	#$12
		BEQ	hoduli_spr
		CMP	#$F
		BEQ	level1_boss_spr
		CMP	#6
		BEQ	ropes_spr
		CMP	#7
		BEQ	ropes_spr
		CMP	#9
		BEQ	tongue_spr
		CMP	#4
		BEQ	hit_spr
		CMP	#$22
		BEQ	hit_spr
		CMP	#3
		BNE	std_objects_sprites

hit_spr:				; ...
		JMP	hit_sprites
; ---------------------------------------------------------------------------

ropes_spr:				; ...
		JMP	rope_sprites
; ---------------------------------------------------------------------------

tongue_spr:				; ...
		JMP	tongue_sprites
; ---------------------------------------------------------------------------

level1_boss_spr:			; ...
		JMP	level1_boss_sprites
; ---------------------------------------------------------------------------

hoduli_spr:				; ...
		JMP	tall_walker_sprites
; ---------------------------------------------------------------------------

electro_spr:				; ...
		JMP	electro_sprites
; ---------------------------------------------------------------------------

toadtrap_spr:				; ...
		JMP	saturn_toadtrap_sprites
; ---------------------------------------------------------------------------

stick_wall_spr?:			; ...
		JMP	stick_wall_sprites?
; ---------------------------------------------------------------------------

powerups_spr:				; ...
		JMP	powerups_sprites
; ---------------------------------------------------------------------------

inferno_electro_spr:			; ...
		JMP	inferno_electro_sprites
; ---------------------------------------------------------------------------

std_objects_sprites:			; ...
		LDA	Objects_death_timer,Y ;	undamage time
		BMI	loc_6000_86BF
		CMP	#$20
		BCC	loc_6000_86C6
		BCS	loc_6000_86C2

loc_6000_86BF:				; ...
		LSR	A
		LSR	A
		LSR	A

loc_6000_86C2:				; ...
		AND	#1		; srpite blink when dead
		BNE	object_sprites_cycle

loc_6000_86C6:				; ...
		JSR	objects_set_sprites
		TXA			; sprite limit?
		BEQ	locret_6000_86EE

cont_obj_spr_c:				; ...
		LDA	tmp_var_16	; slot id-1
		BEQ	is_player1_spr
		BPL	object_sprites_cycle

is_player1_spr:				; ...
		JSR	objects_second_pal ; для спрайтов головы и пуза	Реша - ставит желтую палитру

object_sprites_cycle:			; ...
		LDA	FrameCounter
		AND	#1
		BEQ	odd_or_even_frame
		LDY	tmp_var_15	;  / Object Counter / various tmp
		DEY			; object rotation back
		BMI	object_sprites_shadows?
		JMP	object_sprites
; ---------------------------------------------------------------------------

odd_or_even_frame:			; ...
		INC	tmp_var_15	; object rotation forw
		LDY	tmp_var_15	;  / Object Counter / various tmp
		CPY	#$F
		BEQ	object_sprites_shadows?
		JMP	object_sprites
; ---------------------------------------------------------------------------

locret_6000_86EE:			; ...
		RTS
; End of function obj_sprites_


; =============== S U B	R O U T	I N E =======================================


objects_second_pal:			; ...
		LDY	tmp_var_8F	; player spr id
		BEQ	locret_6000_86EE

loc_6000_86F3:				; ...
		LDA	tmp_var_8e	; count	of spr to change pal
		AND	#3		; count	of next	4 spr
		BEQ	locret_6000_870B
		DEC	tmp_var_8e	; count	of spr to change pal
		LDA	Sprites_Attrib,Y
		AND	#$FC
		ORA	#2		; id of	second palette
		STA	Sprites_Attrib,Y
		INY
		INY
		INY
		INY
		BNE	loc_6000_86F3

locret_6000_870B:			; ...
		RTS
; End of function objects_second_pal


; =============== S U B	R O U T	I N E =======================================


object_sprites_shadows?:		; ...
		LDY	#0		; from obj 0

object_sprites_cycle_2:			; ...
		CPX	#$F9
		BCS	hide_sprites_by_Y
		LDA	Objects_TypeID,Y
		BEQ	loc_6000_8773
		LDA	Objects_Z_floor,Y
		BEQ	loc_6000_8773
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		CMP	#3
		BCC	loc_6000_8726
		LDA	#3

loc_6000_8726:				; ...
		STA	tmp_var_8b
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$88
		BNE	loc_6000_8773
		LDA	Objects_Y_shad,Y
		CLC
		ADC	#5
		STA	Sprites_Ypos,X
		STA	sprite2_Ypos,X
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		ASL	A
		ASL	A
		AND	#$20
		STA	sprite2_attrib,X
		ORA	#$40
		STA	Sprites_Attrib,X
		LDA	#0
		STA	sprite2_adress,X
		STA	Sprites_Adress,X
		LDA	Objects_X_shadow,Y
		SEC
		SBC	tmp_var_8b
		BCC	loc_6000_8773
		STA	Sprites_Xpos,X
		LDA	Objects_X_shadow,Y
		ADC	tmp_var_8b
		SBC	#8
		BCC	loc_6000_876D
		STA	sprite2_Xpos,X
		INX
		INX
		INX
		INX

loc_6000_876D:				; ...
		INX
		INX
		INX
		INX
		BEQ	locret_6000_8783

loc_6000_8773:				; ...
		INY
		CPY	#$F		; to object 15
		BNE	object_sprites_cycle_2
; End of function object_sprites_shadows?


; =============== S U B	R O U T	I N E =======================================


hide_sprites_by_Y:			; ...
		LDA	#$F8

loc_6000_877A:				; ...
		STA	Sprites_Ypos,X
		INX
		INX
		INX
		INX
		BNE	loc_6000_877A

locret_6000_8783:			; ...
		RTS
; End of function hide_sprites_by_Y


; =============== S U B	R O U T	I N E =======================================


get_shadow_xy:				; ...
		LDA	#0
		STA	tmp_var_1B
		STA	tmp_var_18
		LDA	Objects_X_shadow,Y
		SEC
		SBC	#3
		STA	tmp_var_8b
		LDA	Objects_Y_shad,Y
		STA	tmp_var_8c
		RTS
; End of function get_shadow_xy


; =============== S U B	R O U T	I N E =======================================


rope_sprites:				; ...
		JSR	get_shadow_xy
		SEC
		SBC	#$2F
		BCC	loc_6000_87E5
		STA	tmp_var_8c
		LDA	FrameCounter
		STA	tmp_var_1F
		LDA	tmp_var_8c
		CLC
		ADC	#8
		ROR	tmp_var_1F
		BCC	loc_6000_87B3
		STA	tmp_var_8c
		BCS	loc_6000_87CA

loc_6000_87B3:				; ...
		LDA	Obj_various_cnt,Y
		CMP	#$80
		ROR	A
		STA	tmp_var_1F
		LDA	Objects_cnt2,Y
		ROR	A
		CLC
		ADC	tmp_var_18
		STA	tmp_var_18
		LDA	tmp_var_1F
		ADC	tmp_var_8b
		STA	tmp_var_8b

loc_6000_87CA:				; ...
		LDA	tmp_var_c8
		ASL	A
		BCC	loc_6000_87D5
		ADC	#$80
		BMI	loc_6000_87D5
		STA	tmp_var_1B

loc_6000_87D5:				; ...
		JSR	sub_6000_8815
		BEQ	locret_6000_87F4
		SEC
		SBC	#$10
		STA	tmp_var_8c
		BCC	loc_6000_87E5
		CMP	tmp_var_1B
		BCS	loc_6000_87D5

loc_6000_87E5:				; ...
		LDA	Obj_various_cnt,Y
		ASL	A
		ASL	A
		EOR	#$FF
		ADC	tmp_var_8b
		STA	Objects_TargetID,Y
		JMP	object_sprites_cycle
; ---------------------------------------------------------------------------

locret_6000_87F4:			; ...
		RTS
; End of function rope_sprites

; ---------------------------------------------------------------------------
byte_6000_87F5:	.BYTE  $27, $27, $28, $28, $29,	$29, $29, $29, $29, $29, $29, $29, $29,	$29, $29, $29, $29 ; ...
					; unused?
hoduli_tiles:	.BYTE $D0, $D0,	$D1, $D2, $D4, $D4, $D4, $D4, $D4, $D4,	$D4, $D4, $D4, $D4, $D4	; ...

; =============== S U B	R O U T	I N E =======================================


sub_6000_8815:				; ...
		LDA	Objects_cnt3,Y
		STA	Sprites_Adress,X
		LDA	Obj_various_cnt,Y
		AND	#$40
		ORA	#2
		STA	Sprites_Attrib,X
		LDA	tmp_var_18
		CLC
		ADC	Objects_cnt2,Y
		STA	tmp_var_18
		LDA	tmp_var_8b
		STA	Sprites_Xpos,X
		ADC	Obj_various_cnt,Y
		STA	tmp_var_8b

loc_6000_8837:				; ...
		LDA	tmp_var_8c
		STA	Sprites_Ypos,X
		INX
		INX
		INX
		INX

locret_6000_8840:			; ...
		RTS
; End of function sub_6000_8815


; =============== S U B	R O U T	I N E =======================================


electro_sprites:			; ...
		JSR	objects_set_sprites
		TXA
		BEQ	locret_6000_8840
		LDY	tmp_var_16
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		ORA	#$40
		STA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	objects_some_anim,Y ; some obj X speed
		STA	Objects_X_shadow,Y
		JSR	objects_set_sprites
		LDY	tmp_var_16
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$BF
		STA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		LDA	#$5B
		STA	Objects_gfx_frame,Y
		TXA
		BEQ	locret_6000_8840
		LDA	Objects_cnt3,Y
		BEQ	loc_6000_887A
		LDA	Objects_Life,Y
		STA	Objects_X_shadow,Y
		JMP	loc_6000_86C6
; ---------------------------------------------------------------------------

loc_6000_887A:				; ...
		JMP	cont_obj_spr_c
; End of function electro_sprites


; =============== S U B	R O U T	I N E =======================================


saturn_toadtrap_sprites:		; ...
		JSR	objects_set_sprites
		TXA
		BEQ	locret_6000_8840
		LDY	tmp_var_16
		LDA	Objects_X_shadow,Y
		STA	tmp_var_1F
		LDA	Objects_cnt2,Y
		SEC
		SBC	Camera_X_pos_l	;  / level_position - on h levels
		STA	Objects_X_shadow,Y
		LDA	Objects_cnt3,Y
		EOR	#$FF
		SEC
		SBC	Camera_Y_pos_l	;  / level_position - on v levels
		CMP	#$C
		BCS	loc_6000_88A6
		LDA	#0
		STA	objects_some_anim,Y ; some obj X speed
		BEQ	loc_6000_8914

loc_6000_88A6:				; ...
		STA	Objects_Y_shad,Y
		LDA	#$5C
		STA	Objects_gfx_frame,Y
		JSR	objects_set_sprites
		TXA
		BEQ	locret_6000_8840
		LDY	tmp_var_16
		LDA	Objects_cnt3,Y
		SEC
		SBC	Objects_Zpos_L,Y
		JSR	loc_6000_8A4F
		STA	tmp_var_1A
		LDA	tmp_var_1B
		STA	tmp_var_19
		LDA	tmp_var_1F
		SEC
		SBC	Objects_X_shadow,Y
		JSR	loc_6000_8A4F
		LDA	#3
		STA	tmp_var_18

loc_6000_88D3:				; ...
		LDA	tmp_var_1F
		CLC
		ADC	tmp_var_1B
		STA	tmp_var_1F
		LDA	tmp_var_1C
		ADC	Objects_X_shadow,Y
		STA	Objects_X_shadow,Y
		LDA	tmp_var_20
		CLC
		ADC	tmp_var_19
		STA	tmp_var_20
		LDA	tmp_var_1A
		ADC	Objects_Y_shad,Y
		STA	Objects_Y_shad,Y
		LDA	#$7F
		STA	Sprites_Adress,X
		LDA	#2
		STA	Sprites_Attrib,X
		LDA	Objects_Y_shad,Y
		STA	Sprites_Ypos,X
		LDA	Objects_X_shadow,Y
		SEC
		SBC	#4
		STA	Sprites_Xpos,X
		INX
		INX
		INX
		INX
		BEQ	locret_6000_8917
		DEC	tmp_var_18
		BNE	loc_6000_88D3

loc_6000_8914:				; ...
		JMP	object_sprites_cycle
; ---------------------------------------------------------------------------

locret_6000_8917:			; ...
		RTS
; End of function saturn_toadtrap_sprites


; =============== S U B	R O U T	I N E =======================================


powerups_sprites:			; ...
		LDA	Objects_X_shadow,Y
		STA	tmp_var_8b
		LDA	Objects_Y_shad,Y
		SEC
		SBC	Objects_Z_floor,Y
		BCC	loc_6000_8914
		STA	tmp_var_8c
		LDA	Objects_gfx_frame,Y
		ASL	A
		ASL	A
		TAY
		LDA	tmp_var_8b
		SBC	byte_6000_8965,Y
		BCC	loc_6000_8914
		STA	tmp_var_8b

loc_6000_8937:				; ...
		LDA	byte_6000_8966,Y
		BEQ	loc_6000_8914
		STA	Sprites_Adress,X
		LDA	#2
		STA	Sprites_Attrib,X
		LDA	tmp_var_8c
		STA	Sprites_Ypos,X
		LDA	tmp_var_8b
		STA	Sprites_Xpos,X
		CLC
		ADC	#8
		BCS	loc_6000_8914
		STA	tmp_var_8b
		INX
		INX
		INX
		INX
		BEQ	locret_6000_8917
		INY
		TYA
		AND	#3
		CMP	#3
		BNE	loc_6000_8937
		BEQ	loc_6000_8914
; End of function powerups_sprites

; ---------------------------------------------------------------------------
byte_6000_8965:	.BYTE 6			; ...
byte_6000_8966:	.BYTE $ED		; ...
		.BYTE  $F2,   0,   6, $EE, $F2,	  0,   6, $EF, $F2,   0,   6, $F0, $F2,	  0,   8, $ED, $F1,   0,   8
		.BYTE  $EE, $F1,   0,	8, $EF,	$F1,   0,   8, $F0, $F1,   0,  $A, $ED,	$F1, $F2,  $C, $EA, $EB, $EC
; ---------------------------------------------------------------------------

loc_6000_898D:				; ...
		JMP	object_sprites_cycle

; =============== S U B	R O U T	I N E =======================================


tall_walker_sprites:			; ...
		LDA	Objects_TypeID,Y
		CMP	#$12
		LDA	#$E8
		BCS	loc_6000_899B
		LDA	#$C8

loc_6000_899B:				; ...
		STA	tmp_var_8d
		CLC
		ADC	Objects_Y_shad,Y
		SEC
		SBC	Objects_Z_floor,Y
		BCC	loc_6000_898D
		STA	Objects_Y_shad,Y
		LDA	Objects_death_timer,Y ;	undamage time
		BEQ	loc_6000_89B4
		LDA	#0
		STA	Objects_gfx_frame,Y

loc_6000_89B4:				; ...
		LDA	Objects_death_timer,Y ;	undamage time
		AND	#8
		BNE	loc_6000_89DB
		LDA	objects_some_anim,Y ; some obj X speed
		JSR	hoduli_spr_sub
		TXA
		BEQ	locret_6000_89FD
		LDA	Objects_Y_shad,Y
		SEC
		SBC	#2
		STA	Objects_Y_shad,Y
		LDA	Objects_death_timer,Y ;	undamage time
		BNE	loc_6000_89DB
		LDA	Objects_cnt3,Y
		JSR	hoduli_spr_sub
		TXA
		BEQ	locret_6000_89FD

loc_6000_89DB:				; ...
		LDA	Objects_Y_shad,Y
		CLC
		ADC	Objects_Z_floor,Y
		SBC	#3
		SBC	tmp_var_8d
		STA	Objects_Y_shad,Y
		LDA	Objects_Z_floor,Y
		STA	Objects_various_flags,Y	; для пушек ID прицепленного объекта
		SEC
		SBC	tmp_var_21
		SEC
		SBC	#4
		SBC	tmp_var_8d

level4_stick_bug:			;  if Y	= 3D
		STA	Objects_Z_floor,Y
		JMP	std_objects_sprites
; ---------------------------------------------------------------------------

locret_6000_89FD:			; ...
		RTS
; End of function tall_walker_sprites


; =============== S U B	R O U T	I N E =======================================


hoduli_spr_sub:				; ...
		STA	tmp_var_22
		JSR	get_shadow_xy
		BCC	locret_6000_8A4A
		LDA	tmp_var_22
		JSR	sub_6000_8A4B
		JSR	checkit_bug????
		STY	tmp_var_21	; saved->  89F0

loc_6000_8A0F:				; ...
		LDA	hoduli_tiles,Y
		STA	Sprites_Adress,X
		LDA	tmp_var_1C
		AND	#$40
		EOR	#$42
		STA	Sprites_Attrib,X
		LDA	tmp_var_18
		CLC
		ADC	tmp_var_1B
		STA	tmp_var_18
		LDA	tmp_var_8b
		STA	Sprites_Xpos,X
		ADC	tmp_var_1C
		STA	tmp_var_8b
		ROR	A
		EOR	tmp_var_1C
		BMI	loc_6000_8A48
		JSR	loc_6000_8837
		BEQ	locret_6000_8A4A
		LDA	tmp_var_8c
		CLC
		ADC	#8
		STA	tmp_var_8c
		DEC	tmp_var_22
		BNE	loc_6000_8A0F
		LDA	#$D3
		STA	Sprites_Adress - 4,X

loc_6000_8A48:				; ...
		LDY	tmp_var_16

locret_6000_8A4A:			; ...
		RTS
; End of function hoduli_spr_sub


; =============== S U B	R O U T	I N E =======================================


sub_6000_8A4B:				; ...
		SEC
		SBC	Objects_Xpos_L,Y

loc_6000_8A4F:				; ...
		STA	tmp_var_1C
		LDA	#4
		STA	tmp_var_22
		LDA	Objects_TypeID,Y
		CMP	#$12
		LDA	tmp_var_1C
		BCS	loc_6000_8A63
		ASL	tmp_var_22
		LSR	A
		ROR	tmp_var_1B

loc_6000_8A63:				; ...
		LSR	A
		ROR	tmp_var_1B
		LSR	A
		ROR	tmp_var_1B
		ROL	tmp_var_1C
		BCC	loc_6000_8A6F
		ORA	#$E0

loc_6000_8A6F:				; ...
		STA	tmp_var_1C
		RTS
; End of function sub_6000_8A4B

; ---------------------------------------------------------------------------
byte_6000_8A72:	.BYTE $F		; ...
byte_6000_8A73:	.BYTE $F		; ...
byte_6000_8A74:	.BYTE $EA, $15,	9, $F0	; ...

; =============== S U B	R O U T	I N E =======================================


tongue_sprites:				; ...
		LDA	Objects_AnimID,Y ; номер движения для запуска
		LSR	A
		LSR	A
		LSR	A
		STA	tmp_var_17
		STX	tmp_var_1F
		LDX	#0
		LDA	Level_ID
		CMP	#wookie_hole
		BNE	loc_6000_8A8C
		LDX	#3

loc_6000_8A8C:				; ...
		LDA	byte_6000_8A72,X
		STA	tmp_var_8b
		LDA	byte_6000_8A73,X
		CMP	Objects_cnt3,Y
		BCS	loc_6000_8A9C
		LDA	byte_6000_8A74,X

loc_6000_8A9C:				; ...
		LDX	tmp_var_1F
		BNE	loc_6000_8AA3

loc_6000_8AA0:				; ...
		LDA	Objects_cnt3,Y

loc_6000_8AA3:				; ...
		CLC
		ADC	Objects_X_shadow,Y
		STA	Sprites_Xpos,X
		STA	Objects_X_shadow,Y
		ROR	A
		EOR	Objects_cnt3,Y
		BMI	loc_6000_8AED
		LDA	#$FA
		STA	Sprites_Adress,X
		LDA	#2
		STA	Sprites_Attrib,X
		LDA	Objects_Y_shad,Y
		SEC
		SBC	tmp_var_8b
		BCC	loc_6000_8AED
		STA	Sprites_Ypos,X
		SEC
		SBC	Objects_Life,Y
		BEQ	loc_6000_8ADA
		LDA	#1
		BCC	loc_6000_8AD4
		LDA	#$FE

loc_6000_8AD4:				; ...
		ADC	Objects_Y_shad,Y
		STA	Objects_Y_shad,Y

loc_6000_8ADA:				; ...
		INX
		INX
		INX
		INX
		BEQ	locret_6000_8B31
		DEC	tmp_var_17
		BPL	loc_6000_8AA0
		TXA
		BEQ	loc_6000_8AED
		LDA	Objects_X_speed,Y
		STA	Sprites_Adress - 4,X

loc_6000_8AED:				; ...
		JMP	object_sprites_cycle
; ---------------------------------------------------------------------------

level1_boss_sprites:			; ...
		LDA	Objects_cnt3,Y
		LSR	A
		STA	tmp_var_8b
		LDY	#0

loc_6000_8AF8:				; ...
		STY	tmp_var_8c
		LDA	byte_6000_8B72,Y
		TAY
		LDA	global_var2,Y
		BEQ	loc_6000_8B12
		LDA	global_var1,Y
		EOR	tmp_var_8c
		LDY	tmp_var_8c
		AND	#8
		BEQ	loc_6000_8B12
		AND	FrameCounter
		BNE	loc_6000_8B2B

loc_6000_8B12:				; ...
		LDY	tmp_var_8c
		LDA	tmp_var_8b
		STA	Sprites_Xpos,X
		LDA	byte_6000_8B6F,Y
		STA	Sprites_Adress,X
		LDA	byte_6000_8B70,Y
		STA	Sprites_Attrib,X
		LDA	byte_6000_8B71,Y
		STA	Sprites_Ypos,X

loc_6000_8B2B:				; ...
		INX
		INX
		INX
		INX
		BNE	loc_6000_8B32

locret_6000_8B31:			; ...
		RTS
; ---------------------------------------------------------------------------

loc_6000_8B32:				; ...
		INY
		INY
		INY
		INY
		CPY	#$14
		BNE	loc_6000_8AF8
		LDY	tmp_var_16
		JMP	std_objects_sprites
; End of function tongue_sprites


; =============== S U B	R O U T	I N E =======================================


stick_wall_sprites?:			; ...
		LDY	#$C

loc_6000_8B41:				; ...
		LDA	byte_6000_BF5E,Y
		STA	level_ram1,Y
		DEY
		BPL	loc_6000_8B41
		LDY	tmp_var_16
		LDA	Objects_cnt2,Y
		CMP	level_ram1+5
		BCS	loc_6000_8B57
		STA	level_ram1+5

loc_6000_8B57:				; ...
		CMP	level_ram1+8
		BCS	loc_6000_8B5F
		STA	level_ram1+8

loc_6000_8B5F:				; ...
		CMP	#8
		BCS	loc_6000_8B66
		DEC	level_ram1+3

loc_6000_8B66:				; ...
		LSR	A
		ADC	#3
		STA	level_ram1
		JMP	std_objects_sprites
; End of function stick_wall_sprites?

; ---------------------------------------------------------------------------
byte_6000_8B6F:	.BYTE $2A		; ...
byte_6000_8B70:	.BYTE 3			; ...
byte_6000_8B71:	.BYTE $30		; ...
byte_6000_8B72:	.BYTE 0			; ...
		.BYTE  $2B,   3, $40,	2
		.BYTE  $2A, $43, $50,	0
		.BYTE  $2B, $83, $60,	2
		.BYTE  $2C,   3, $78,	4

; =============== S U B	R O U T	I N E =======================================


hit_sprites:				; ...
		LDA	Objects_cnt2,Y
		STA	tmp_var_18
		LDA	Objects_X_shadow,Y
		STA	tmp_var_19
		LDA	Objects_Y_shad,Y
		STA	tmp_var_1A
		LDA	FrameCounter
		AND	#1
		BEQ	loc_6000_8BA3
		LSR	tmp_var_18
		LDA	tmp_var_18
		LSR	A
		ADC	tmp_var_18
		STA	tmp_var_18
		LDA	#$10

loc_6000_8BA3:				; ...
		TAY

loc_6000_8BA4:				; ...
		LDA	byte_6000_8E47,Y
		BEQ	loc_6000_8BBF
		STA	tmp_var_1B
		ROR	A
		LDA	tmp_var_18
		BCC	loc_6000_8BB1
		LSR	A

loc_6000_8BB1:				; ...
		ROL	tmp_var_1B
		BCC	loc_6000_8BBF
		STA	tmp_var_1B
		LDA	tmp_var_19
		SBC	tmp_var_1B
		BCC	loc_6000_8BF8
		BCS	loc_6000_8BC3

loc_6000_8BBF:				; ...
		ADC	tmp_var_19
		BCS	loc_6000_8BF8

loc_6000_8BC3:				; ...
		STA	Sprites_Xpos,X
		LDA	byte_6000_8E48,Y
		BEQ	loc_6000_8BE1
		STA	tmp_var_1B
		ROR	A
		LDA	tmp_var_18
		BCC	loc_6000_8BD3
		LSR	A

loc_6000_8BD3:				; ...
		ROL	tmp_var_1B
		BCC	loc_6000_8BE1
		STA	tmp_var_1B
		LDA	tmp_var_1A
		SBC	tmp_var_1B
		BCC	loc_6000_8BF8
		BCS	loc_6000_8BE5

loc_6000_8BE1:				; ...
		ADC	tmp_var_1A
		BCS	loc_6000_8BF8

loc_6000_8BE5:				; ...
		STA	Sprites_Ypos,X
		LDA	#2
		STA	Sprites_Attrib,X
		LDA	#$26
		STA	Sprites_Adress,X
		INX
		INX
		INX
		INX
		BEQ	locret_6000_8C09

loc_6000_8BF8:				; ...
		INY
		INY
		CPY	#$10
		BEQ	loc_6000_8C02
		CPY	#$20
		BNE	loc_6000_8BA4

loc_6000_8C02:				; ...
		JMP	object_sprites_cycle
; ---------------------------------------------------------------------------

no_obj_sprite:				; ...
		LDA	#8
		STA	tmp_var_16

locret_6000_8C09:			; ...
		RTS
; End of function hit_sprites


; =============== S U B	R O U T	I N E =======================================


objects_set_sprites:			; ...
		LDA	Objects_X_shadow,Y
		STA	tmp_var_17	; x_shadow_ 18
		LDA	Objects_Y_shad,Y
		SEC			; a8
		SBC	Objects_Z_floor,Y ; a8
		BCC	no_obj_sprite
		STA	tmp_var_8c	; y-z_shadow
		LDA	Objects_gfx_frame,Y
		BEQ	no_obj_sprite
		LDA	Objects_state,Y	; $20 -have stick,$40-damaged heavy,$80-making damage
		AND	#$20
		BNE	sprites_hold_stick_or_w
		JMP	read_obj_frame
; ---------------------------------------------------------------------------

sprites_hold_stick_or_w:		; ...
		STY	tmp_var_16	; save obj slot	id
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		STA	tmp_var_1B	; save obj flags
		LDA	Objects_gfx_frame,Y ; B
		CMP	#$3F
		BCC	good_frames_for_stick1
		CMP	#$41
		BCS	good_frames_for_stick1
		SBC	#$3E		; 3F and 40 - sprites stick on dragon
		ASL	A
		ADC	#$35		; base +$35+$86
		BNE	write_large_stick_spr

good_frames_for_stick1:			; ...
		CMP	#$26
		BCC	good_frames_for_stick2
		CMP	#$29
		BCS	good_frames_for_stick2
		ADC	#$F		; $26,$27,$28 -	stick hit move;	base cfg+$86+$F

write_large_stick_spr:			; ...
		ADC	#$86		; base cfg + $86
		STA	tmp_var_18	; frame
		LDA	Objects_Flags,Y	; $40 -	turned left; $10 - running; $80	- delete?
		AND	#$63
		STA	tmp_var_1B	; set obj flags	tmp
		AND	#$40
		STA	tmp_var_90	; obj_dir_tmp (для спрайтов - направление объекта)
		JSR	write_obj_sprites
		TXA			; sprite limit check
		BEQ	locret_6000_8C09
		BNE	objects_sprite_write ; jump

good_frames_for_stick2:			; ...
		CMP	#$16
		BCC	good_frames_for_stick3
		SBC	#9		; if gfx frame>16, -9

good_frames_for_stick3:			; ...
		ASL	A		; frame	id * 4
		ASL	A
		BCC	loc_6000_8C6F
		ADC	#$3B		; +#60

loc_6000_8C6F:				; ...
		TAY			; frame	id * 4

write_stick_sprites:			; ...
		LDA	tmp_var_1B	; obj flags
		AND	#turned_left
		BEQ	write_stick_attrib
		LDA	#$42		; mirror sprite	(palette #2)
		STA	Sprites_Attrib,X
		LDA	tmp_var_17	; x shadow
		SEC
		SBC	stick_spr_posX,Y
		SEC
		SBC	#7
		JMP	write_stick_spr_X
; ---------------------------------------------------------------------------

write_stick_attrib:			; ...
		LDA	#2		; stick	- palette #2
		STA	Sprites_Attrib,X
		LDA	stick_spr_posX,Y
		CLC
		ADC	tmp_var_17	; x shadow

write_stick_spr_X:			; ...
		STA	Sprites_Xpos,X
		LDA	stick_spr_posY,Y
		CLC
		ADC	tmp_var_8c	; y-z shadow
		STA	Sprites_Ypos,X	; write	stick spr Y
		LDA	Level_ID
		CMP	#wookie_hole
		BNE	std_stick_tile
		TYA
		AND	#2
		LSR	A
		ADC	#$80
		BNE	wookie_kluv_spr_adr

std_stick_tile:				; ...
		LDA	#$DA		; horizontal stick

wookie_kluv_spr_adr:			; ...
		STA	Sprites_Adress,X
		INX
		INX
		INX
		INX
		BEQ	locret_6000_8CE9 ; spr limit check
		INY
		INY
		TYA
		AND	#2		; stick	from 2 sprite parts
		BNE	write_stick_sprites

objects_sprite_write:			; ...
		LDY	tmp_var_16	; obj slot id
		LDA	Objects_Y_shad,Y
		SEC
		SBC	Objects_Z_floor,Y
		STA	tmp_var_8c

read_obj_frame:				; ...
		LDA	Objects_gfx_frame,Y
		CPY	#2
		BCS	write_std_obj_spr ; for	players	- large	sprites	frames?
		CMP	#$1E		; big bad boot
		BEQ	write_two_sprlist_players
		CMP	#$1A		; big appercut
		BEQ	write_two_sprlist_players
		CMP	#$4C		; level	2 - dmg	with 2 legs
		BEQ	write_two_sprlist_players
		CMP	#$4D		; level	2 - big	punch
		BNE	write_std_obj_spr

write_two_sprlist_players:		; ...
		JSR	write_std_obj_spr
		TXA
		BEQ	locret_6000_8CE9 ; sprite limit
		JMP	sprite_writing_part
; ---------------------------------------------------------------------------

locret_6000_8CE9:			; ...
		RTS
; End of function objects_set_sprites


; =============== S U B	R O U T	I N E =======================================


write_std_obj_spr:			; ...
		STA	tmp_var_18	; anim frame tmp
		LDA	Objects_Flags,Y	; 40
; End of function write_std_obj_spr


; =============== S U B	R O U T	I N E =======================================


obj_sprite_flags:			; ...
		AND	#$63
		STA	tmp_var_1B	; 40
		AND	#$40
		STA	tmp_var_90	; 40
		LDA	Level_ID
		CMP	#clinger_winger
		BEQ	loc_6000_8D11
		CMP	#armageddon
		BEQ	loc_6000_8D11
		CPY	#2		; compare player or object spr
; End of function obj_sprite_flags


; =============== S U B	R O U T	I N E =======================================


write_obj_sprites:			; ...
		LDY	tmp_var_18	; frame	id tmp
		BCC	load_player_spr_cfg ; расстановка спрайтов жабы

loc_6000_8D07:				; ...
		LDA	obj_sprcfg_ptr_l,Y ; BAC9; B9BD; B9EE; BA57
		STA	tmp_var_19
		LDA	obj_sprcfg_ptr_h,Y
		BNE	read_sprites_from_ptr ;	jump

loc_6000_8D11:				; ...
		CPY	#2		; compare player or obj	spr
		LDY	tmp_var_18	; frame	id tmp
		BCC	load_player_spr_cfg ; расстановка спрайтов жабы
		CPY	#$F		; frame	$F?
		BEQ	loc_6000_8D07

load_player_spr_cfg:			; ...
		LDA	rash_sprcfg_ptr_l,Y ; расстановка спрайтов жабы
		STA	tmp_var_19	; pointer tmp L
		LDA	rash_sprcfg_ptr_h,Y

read_sprites_from_ptr:			; ...
		STA	tmp_var_1A	; pointer tmp H
		LDY	#0
		LDA	tmp_var_90	; obj_dir_tmp (для спрайтов - направление объекта)
		BEQ	turned_right
		LDA	(tmp_var_19),Y	; spr cfg ptr
		CLC
		ADC	tmp_var_17
		SEC
		SBC	#7
		JMP	loc_6000_8D3B
; ---------------------------------------------------------------------------

turned_right:				; ...
		LDA	tmp_var_17
		SEC
		SBC	(tmp_var_19),Y

loc_6000_8D3B:				; ...
		STA	tmp_var_8b	; sprite X
		EOR	tmp_var_17
		BPL	loc_6000_8D48
		LDA	tmp_var_17	; sprite count value?
		SBC	#64		; max 64 spr?
		BPL	loc_6000_8D48

locret_6000_8D47:			; ...
		RTS
; ---------------------------------------------------------------------------

loc_6000_8D48:				; ...
		INY
		LDA	tmp_var_8c	; sprite Y
		CLC
		ADC	(tmp_var_19),Y
		STA	tmp_var_8c	; sprite Y
		ROR	A
		EOR	(tmp_var_19),Y
		BMI	locret_6000_8D47
		INY
		LDA	(tmp_var_19),Y
		EOR	tmp_var_1B	; attributes?
		STA	tmp_var_8d	; attributes?
		INY

sprite_writing_part:			; ...
		LDA	(tmp_var_19),Y	; 0 is end, plus - spr parts cnt
		BPL	non_player_spr
		AND	#$7F
		STA	tmp_var_91	; sprites parts	count
		INY
		LDA	(tmp_var_19),Y
		STA	tmp_var_92	; player flag?
		CMP	#3
		BCS	loc_6000_8DA8
		LDA	tmp_var_8d	; attributes?
		STA	tmp_var_8e	; count	of spr to change pal
		AND	#$FC
		ORA	tmp_var_16	; obj slot id
		STA	tmp_var_8d	; attributes without pal?  (6)
		STX	tmp_var_8F	; srpite IDX
		LDA	tmp_var_18
		CMP	#$5D		; shocked by electro
		BEQ	shocked_spr_pal
		CMP	#$42		; shocked by electro on	rope
		BEQ	shocked_spr_pal
		AND	#$FE
		CMP	#$64		; 64 and 65 - clinger winger holding swap dir
		BNE	loc_6000_8D9C
		LDA	tmp_var_8d
		ORA	#$80
		STA	tmp_var_1B	; mirror sprites up/down
		STA	tmp_var_8d	; flag - spr list have attributes
		BNE	loc_6000_8D9C

shocked_spr_pal:			; ...
		LDA	tmp_var_8d	; attributes when shocked (white pal)
		AND	#$FC
		EOR	#2
		STA	tmp_var_8d

loc_6000_8D9C:				; ...
		DEC	tmp_var_16	; obj slot id (used for	check p1,p2)
		BNE	loc_6000_8DA8
		LDA	tmp_var_92
		ORA	#$10
		STA	tmp_var_92
		BNE	loc_6000_8DA8

loc_6000_8DA8:				; ...
		INY
		LDA	tmp_var_90	; obj_dir_tmp (для спрайтов - направление объекта)
		BNE	sprites_left
		BEQ	loc_6000_8DC3

non_player_spr:				; ...
		BEQ	locret_6000_8E02
		STA	tmp_var_91
		INY
		LDA	#0
		STA	tmp_var_92
		LDA	tmp_var_90	; obj_dir_tmp (для спрайтов - направление объекта)
		BNE	sprites_left_
		BEQ	loc_6000_8DCB

next_sprite_particle?:			; ...
		INY

same_sprite_particle_?:			; ...
		DEC	tmp_var_91	; sprite parts count
		BEQ	locret_6000_8E02

loc_6000_8DC3:				; ...
		LDA	tmp_var_92
		BEQ	loc_6000_8DCB
		INC	tmp_var_92	; cnt2
		BNE	loc_6000_8DCE

loc_6000_8DCB:				; ...
		LDA	(tmp_var_19),Y
		INY

loc_6000_8DCE:				; ...
		STA	Sprites_Adress,X
		LDA	(tmp_var_19),Y	; C937
		CLC
		ADC	tmp_var_8b	; sprite X
		BCS	skip_sprite_particleX
		STA	Sprites_Xpos,X
		INY
		LDA	tmp_var_8c	; sprite Y
		SEC
		SBC	(tmp_var_19),Y
		BCC	skip_sprite_particleY
		STA	Sprites_Ypos,X
		INY
		LDA	tmp_var_8d	; sprite attributes
		BPL	loc_6000_8DF0
		LDA	(tmp_var_19),Y	; attribute in spr cfg
		EOR	tmp_var_1B
		INY

loc_6000_8DF0:				; ...
		STA	Sprites_Attrib,X
		INX
		INX
		INX
		INX
		BNE	same_sprite_particle_?
		RTS
; ---------------------------------------------------------------------------

skip_sprite_particleX:			; ...
		INY

skip_sprite_particleY:			; ...
		INY
		LDA	tmp_var_8d
		BPL	same_sprite_particle_?
		BMI	next_sprite_particle?

locret_6000_8E02:			; ...
		RTS
; ---------------------------------------------------------------------------

loc_6000_8E03:				; ...
		INY

loc_6000_8E04:				; ...
		DEC	tmp_var_91
		BEQ	locret_6000_8E02

sprites_left:				; ...
		LDA	tmp_var_92
		BEQ	sprites_left_
		INC	tmp_var_92
		BNE	loc_6000_8E13

sprites_left_:				; ...
		LDA	(tmp_var_19),Y
		INY

loc_6000_8E13:				; ...
		STA	Sprites_Adress,X
		LDA	tmp_var_8b
		SEC
		SBC	(tmp_var_19),Y
		BCC	loc_6000_8E3F
		STA	Sprites_Xpos,X
		INY
		LDA	tmp_var_8c
		SEC
		SBC	(tmp_var_19),Y
		BCC	loc_6000_8E40
		STA	Sprites_Ypos,X
		INY
		LDA	tmp_var_8d
		BPL	loc_6000_8E35
		LDA	(tmp_var_19),Y
		INY
		EOR	tmp_var_1B

loc_6000_8E35:				; ...
		STA	Sprites_Attrib,X
		INX
		INX
		INX
		INX
		BNE	loc_6000_8E04
		RTS
; ---------------------------------------------------------------------------

loc_6000_8E3F:				; ...
		INY

loc_6000_8E40:				; ...
		INY
		LDA	tmp_var_8d
		BPL	loc_6000_8E04
		BMI	loc_6000_8E03
; End of function write_obj_sprites

; ---------------------------------------------------------------------------
byte_6000_8E47:	.BYTE 1			; ...
byte_6000_8E48:	.BYTE 0, 2, 0, $81, 0, $82, 0, 0, $81, 0, $82, 0, 1, 0,	2, 1, 1, 2, 2, 1, $81, 2, $82, $81, 1, $82, 2, $81, $81, $82 ; ...
		.BYTE $82

; =============== S U B	R O U T	I N E =======================================


checkit_bug????:			; ...
		CMP	#$10
		BCC	loc_6000_8E6F
		EOR	#$FF
		ADC	#0

loc_6000_8E6F:				; ...
		TAY
		LDA	byte_6000_87F5,Y ; unused?
		RTS
; End of function checkit_bug????


; =============== S U B	R O U T	I N E =======================================


sub_6000_8E74:				; ...
		LDA	#0
		STA	Objects_state	; $20 -have stick,$40-damaged heavy,$80-making damage
		STA	player2_state
		LDA	#6
		STA	Camera_X_pos_H
		LDA	#$C0
		STA	Camera_X_pos_l	;  / level_position - on h levels
		LDA	#0
		STA	Camera_Y_pos_H
		LDA	#8
		STA	Camera_Y_pos_l	;  / level_position - on v levels
		STA	Camera_Y_pos_l_2
		LDX	#1

loc_6000_8E90:				; ...
		LDA	#$48
		SBC	Objects_Ypos_L,X
		ASL	A
		ADC	#$E0
		STA	Objects_Xpos_L,X
		LDA	#6
		ADC	#0
		STA	Objects_Xpos_H,X
		LDA	#8
		STA	Objects_Ypos_L,X
		LDA	#1
		STA	Objects_Ypos_H,X
		LDA	Objects_Zpos_L,X
		ADC	#$40
		STA	Objects_Zpos_L,X
		LDA	Objects_Zpos_H,X
		ADC	#0
		STA	Objects_Zpos_H,X
		DEX
		BPL	loc_6000_8E90
		LDA	#9
		STA	camera_pos_inf?
		JSR	screen_off_bank6
		JSR	load_palettes_2_22_or_4_6
		LDA	#$D
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDX	#$51
		LDY	#3
		JSR	jump_from_bank6
		LDA	#$C
		LDY	#4
		JSR	sub_6000_DB94
		LDA	#$36
		JSR	sub_6000_DB92
		LDA	#$38
		JSR	sub_6000_DB92
		LDA	#0
		STA	Objects_Linker_ID ; флаг/id какой объект меня прицепил
		STA	player2_Linker2_ID
		LDX	#$12
		LDY	#0
		JSR	jump_from_bank6

loc_6000_8EF4:				; ...
		LDX	#4
		JSR	hide_sprites_from_n
		JSR	dma_for_sprites
		LDX	#$4B
		LDY	#3
		JSR	jump_from_bank6
		LDX	#$45
		LDY	#3
		JSR	jump_from_bank6
		JMP	set_previous_bank_as_0
; End of function sub_6000_8E74


; =============== S U B	R O U T	I N E =======================================


screen_off_bank6:			; ...
		LDA	#$10		; disable NMI
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		JSR	wait_vblank_bank6
		LDY	#0		; disable spr and bg
		STY	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		RTS
; End of function screen_off_bank6


; =============== S U B	R O U T	I N E =======================================


sub_6000_8F1B:				; ...
		JSR	screen_off_bank6
		JSR	load_palettes_2_22_or_4_6
		LDX	#$51
		STX	tmp_var_15	;  / Object Counter / various tmp
		LDY	#3
		JSR	jump_from_bank6
		LDA	#5
		STA	Camera_X_pos_H
		LDA	#$20
		STA	Camera_X_pos_l	;  / level_position - on h levels
		LDA	#$60
		STA	Camera_Y_pos_l	;  / level_position - on v levels
		STA	Camera_Y_pos_l_2
		LDX	#1

loc_6000_8F3A:				; ...
		LDA	#0
		STA	Objects_Linker_ID,X ; флаг/id какой объект меня	прицепил
		STA	Objects_LinkedObj_ID,X ; флаг/id присоединённого объекта
		STA	Camera_Y_pos_H
		STA	Objects_Flags,X	; $40 -	turned left; $10 - running; $80	- delete?
		STA	Objects_dir,X	; / angle
		STA	Objects_death_timer,X ;	undamage time
		STA	Obj_anims_timer,X ; timer used for gfx frames
		STA	Objects_AnimID,X ; номер движения для запуска
		DEX
		BPL	loc_6000_8F3A
		LDA	#5
		STA	Objects_Xpos_H
		STA	player2_Xpos_H
		LDA	#$60
		STA	Objects_Xpos_L
		LDA	#$6C
		STA	player2_Xpos_L
		LDA	#0
		STA	Objects_Zpos_H
		STA	player2_Zpos_H
		LDA	#$10
		STA	Objects_Zpos_L
		STA	player2_Zpos_L
		LDA	#1
		STA	Objects_Ypos_H
		STA	player2_Ypos_H
		LDA	#$18
		STA	Objects_Ypos_L
		LDA	#$20
		STA	player2_Ypos_L
		LDA	#$FF		; level	1 write	act end	timer
		STA	player1_endLvL_timer
		LDA	#$F0
		STA	player2_endLvL_timer
		LDA	#$88
		STA	timer_end_music
		LDX	#$12
		LDY	#0
		JSR	jump_from_bank6
		LDA	#0
		STA	Objects_X_speed
		STA	Objects_X_speed
		STA	flag_boss_1
		INC	LevelCfgAdr_L	; текущий адрес	рома для чтения	объектов уровня
		BNE	loc_6000_8FAF
		INC	LevelCfgAdr_H

loc_6000_8FAF:				; ...
		JMP	loc_6000_8EF4
; End of function sub_6000_8F1B


; =============== S U B	R O U T	I N E =======================================


sub_6000_8FB2:				; ...
		JSR	sub_6000_901D
		JSR	clear_tilemaps
		LDA	#$3F
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#3
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$25
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDX	#<text_d9d5
		LDY	#>text_d9d5
		LDA	#7
		JSR	write_some_text_to_vram
		JSR	sub_6000_8FD9
		JSR	sub_6000_A1D2
		JMP	set_previous_bank_as_0
; End of function sub_6000_8FB2


; =============== S U B	R O U T	I N E =======================================


sub_6000_8FD9:				; ...
		LDA	#4
		JSR	sub_6000_DB92
		LDA	#$A
		LDY	#4
		JSR	sub_6000_DB94
		LDA	#$C
		JMP	sub_6000_9047
; End of function sub_6000_8FD9


; =============== S U B	R O U T	I N E =======================================


sub_6000_8FEA:				; ...
		LDA	Object_RamSlotID_tmp ; id saved	for objects functions
		EOR	#$21
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDX	#$D2
		STX	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDY	#$6B
		STY	PPU_DATA	; VRAM I/O Register (RW)
		LDY	#0
		STY	PPU_DATA	; VRAM I/O Register (RW)
		STY	PPU_DATA	; VRAM I/O Register (RW)
		ROR	A
		BCS	loc_6000_9008
		LDY	#6

loc_6000_9008:				; ...
		LDA	Score_Player1_100k,Y
		CLC
		ADC	#$5F
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	#0
		STA	Score_Player1_100k,Y
		INY
		INX
		CPX	#$D8
		BNE	loc_6000_9008
		RTS
; End of function sub_6000_8FEA


; =============== S U B	R O U T	I N E =======================================


sub_6000_901D:				; ...
		JSR	clear_tilemaps

loc_6000_9020:				; ...
		JSR	clear_sprites
		LDX	#0
		JSR	load_attributes
		LDA	#0
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDY	#7
		LDX	#$12
		JSR	jump_from_bank6
		LDA	#2
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDY	#7
		LDX	#$12
		JSR	jump_from_bank6
		LDX	#$24
		LDY	#$26
		JSR	load_palettes	; input	X - bkg	pal id,	Y - spr	pal id
		LDA	#$1C
; End of function sub_6000_901D


; =============== S U B	R O U T	I N E =======================================


sub_6000_9047:				; ...
		PHA
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$70
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#0
		LDX	#4
		LDY	#$90

loc_6000_9056:				; ...
		STA	PPU_DATA	; VRAM I/O Register (RW)
		DEY
		BNE	loc_6000_9056
		DEX
		BNE	loc_6000_9056
		PLA
		SEC
		SBC	#$10
		BCS	sub_6000_9047
		LDA	#$C
		STA	ppu_adr_map_h
		LDA	#$70
		STA	ppu_adr_map_l
		LDX	#$3F
		LDA	#1
		STA	tmp_var_15	;  / Object Counter / various tmp

loc_6000_9073:				; ...
		TXA
		LSR	A
		LSR	A
		LSR	A
		STA	gfx_buff_adr_h,X
		LDA	tmp_var_15	;  / Object Counter / various tmp
		STA	byte_0_740,X
		ASL	tmp_var_15	;  / Object Counter / various tmp
		BCC	loc_6000_9085
		ROL	tmp_var_15	;  / Object Counter / various tmp

loc_6000_9085:				; ...
		DEX
		BPL	loc_6000_9073
		RTS
; End of function sub_6000_9047


; =============== S U B	R O U T	I N E =======================================


sub_6000_9089:				; ...
		LDX	#$22

loc_6000_908B:				; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDY	#0

loc_6000_908F:				; ...
		STX	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		STY	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		BEQ	loc_6000_90A9
		CLC
		ADC	tmp_var_15	;  / Object Counter / various tmp
		STX	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		STY	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		STA	PPU_DATA	; VRAM I/O Register (RW)

loc_6000_90A9:				; ...
		INY
		BNE	loc_6000_908F
		INX
		CPX	#$24
		BNE	loc_6000_908F
		RTS
; End of function sub_6000_9089


; =============== S U B	R O U T	I N E =======================================


sub_6000_90B2:				; ...
		JSR	clear_tilemaps
		LDX	#<text_d827
		LDY	#>text_d827
		LDA	#4
		JSR	write_some_text_to_vram
		LDA	#$C8
		JSR	sub_6000_9089
		JSR	loc_6000_9020
		LDX	#$4E
		JSR	load_attributes
		LDA	#$20
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$85
		LDX	#7
		LDY	#$94		; $9407
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h
		LDA	#$30
		JSR	sub_6000_DB92
		LDX	#$34
		LDY	#$26
		JSR	load_palettes	; input	X - bkg	pal id,	Y - spr	pal id
		JMP	set_previous_bank_as_0
; End of function sub_6000_90B2


; =============== S U B	R O U T	I N E =======================================


sub_6000_90E8:				; ...
		LDA	#0
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		STA	Objects_X_speed
		STA	global_counter
		STA	global_flags
		STA	check_xz0
		STA	global_var7
		JSR	sub_6000_901D
		LDA	Levels_passed_cnt
		BEQ	loc_6000_9113
		JSR	sub_6000_8FD9
		LDA	#$A
		JSR	sub_6000_DB92
		LDX	#<text_da6d
		LDY	#>text_da6d
		LDA	#2
		JSR	write_some_text_to_vram
		JMP	loc_6000_9121
; ---------------------------------------------------------------------------

loc_6000_9113:				; ...
		LDA	#$20
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$85
		LDX	#7
		LDY	#$94		; #$9407
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h

loc_6000_9121:				; ...
		LDA	#$21
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$CD
		JSR	sub_6000_9257
		LDA	#$22
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$84
		JSR	sub_6000_9257
		LDA	#$22
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$96
		JSR	sub_6000_9257
		LDA	#$40
		STA	pal_reduce_value ; dec to color	value
		JMP	set_previous_bank_as_0
; End of function sub_6000_90E8


; =============== S U B	R O U T	I N E =======================================


clear_scrolls_reg:			; ...
		LDA	#0
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
; End of function clear_scrolls_reg


; =============== S U B	R O U T	I N E =======================================


write_scroll_by_V:			; ...
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		LDA	ppu_ctrl2_val
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		RTS
; End of function write_scroll_by_V


; =============== S U B	R O U T	I N E =======================================


sub_6000_9154:				; ...
		LDA	pal_reduce_value ; dec to color	value
		BEQ	loc_6000_9176
		LDA	FrameCounter
		AND	#3
		BNE	loc_6000_9165
		LDA	pal_reduce_value ; dec to color	value
		SEC
		SBC	#$10
		STA	pal_reduce_value ; dec to color	value

loc_6000_9165:				; ...
		LDA	#0
		STA	pal_vram_upd_off ; BKG=$00, SPR=$10
		JSR	jump_to_bank0_func1
		LDA	#$10
		STA	pal_vram_upd_off ; BKG=$00, SPR=$10
		JSR	jump_to_bank0_func1
		JMP	loc_6000_9179
; ---------------------------------------------------------------------------

loc_6000_9176:				; ...
		JSR	sub_6000_91EF

loc_6000_9179:				; ...
		JSR	clear_scrolls_reg
		LDA	global_flags
		AND	#3
		BNE	loc_6000_919B
		LDA	global_var7
		SEC
		SBC	#$D
		CMP	#$20
		BCS	loc_6000_918D
		LDA	#$20

loc_6000_918D:				; ...
		STA	global_var7
		CMP	#$21
		BCC	loc_6000_919B
		INC	global_counter
		INC	global_counter
		INC	global_counter
		INC	global_counter

loc_6000_919B:				; ...
		LDY	#7
		LDX	#3
		JSR	jump_from_bank6
		JMP	set_previous_bank_as_0
; End of function sub_6000_9154

; ---------------------------------------------------------------------------
		LDX	#$15		; unused?
		LDY	#0
		JMP	jump_from_bank6

; =============== S U B	R O U T	I N E =======================================


game_end_event_starter:			; ...
		LDA	#$FE
		STA	Level_ID
		LDA	#$10
		STA	ppu_ctrl1_val	;  > $80  кадр завершен
		ORA	#$80
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		RTS
; End of function game_end_event_starter


; =============== S U B	R O U T	I N E =======================================


sub_6000_91BA:				; ...
		JSR	game_end_event_starter
		JSR	clear_tilemaps
		JSR	clear_sprites
		LDA	#4
		JSR	sub_6000_DB92
		LDX	#$32
		LDY	#$32
		JSR	load_palettes	; input	X - bkg	pal id,	Y - spr	pal id
		LDX	#<text_d81d
		LDY	#>text_d81d
		LDA	#1
		JSR	write_some_text_to_vram
		JMP	set_previous_bank_as_0
; End of function sub_6000_91BA


; =============== S U B	R O U T	I N E =======================================


sub_6000_91DB:				; ...
		JSR	clear_scrolls_reg
		LDA	FrameCounter
		CMP	#$40
		BEQ	loc_6000_91EC
		LDY	#5
		JSR	wait6
		JMP	set_previous_bank_as_0
; ---------------------------------------------------------------------------

loc_6000_91EC:				; ...
		JMP	game_over_event
; End of function sub_6000_91DB


; =============== S U B	R O U T	I N E =======================================


sub_6000_91EF:				; ...
		LDY	#$E
		TSX
		STX	stackp_save
		LDX	#$6F
		TXS
		LDA	ppu_adr_map_h
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	ppu_adr_map_l
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDX	#0
		LDA	global_counter
		SEC
		SBC	#$10
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	check_xz0
		CLC
		ADC	#$10
		EOR	tmp_var_15	;  / Object Counter / various tmp
		AND	#$20
		BNE	loc_6000_9218
		INY
		BNE	loc_6000_9238

loc_6000_9218:				; ...
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		PLA
		STA	PPU_DATA	; VRAM I/O Register (RW)

loc_6000_9238:				; ...
		STX	PPU_DATA	; VRAM I/O Register (RW)
		STX	PPU_DATA	; VRAM I/O Register (RW)
		STX	PPU_DATA	; VRAM I/O Register (RW)
		STX	PPU_DATA	; VRAM I/O Register (RW)
		STX	PPU_DATA	; VRAM I/O Register (RW)
		STX	PPU_DATA	; VRAM I/O Register (RW)
		STX	PPU_DATA	; VRAM I/O Register (RW)
		STX	PPU_DATA	; VRAM I/O Register (RW)
		DEY
		BNE	loc_6000_9218
		LDX	stackp_save
		TXS
		RTS
; End of function sub_6000_91EF


; =============== S U B	R O U T	I N E =======================================


sub_6000_9257:				; ...
		LDX	#<tilemap_pack0
		LDY	#>tilemap_pack0	; 93cc
; End of function sub_6000_9257


; =============== S U B	R O U T	I N E =======================================

; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h

unpack_tilemap:				; ...
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		STX	tmp_var_19
		STY	tmp_var_1A
		LDY	#0
		LDA	(tmp_var_19),Y
		STA	tmp_var_15	;  / Object Counter / various tmp
		SEC
		SBC	#1
		EOR	#$1F
		STA	tmp_var_16
		INY
		LDA	(tmp_var_19),Y
		STA	tmp_var_17
		INY
		LDX	tmp_var_15	;  / Object Counter / various tmp
		STX	tmp_var_18

unpack_tilemap_loop:			; ...
		LDA	#0
		STA	tmp_var_20
		LDA	(tmp_var_19),Y
		CMP	#$40
		BCC	loc_6000_9294
		AND	#$3F
		STA	tmp_var_1F
		LDA	(tmp_var_19),Y
		ROL	A
		LDA	tmp_var_1F
		BCS	loc_6000_9292
		DEC	tmp_var_20
		DEC	tmp_var_20

loc_6000_9292:				; ...
		INC	tmp_var_20

loc_6000_9294:				; ...
		STA	tmp_var_1F
		INY

unpack_tilemap_loop2:			; ...
		LDA	(tmp_var_19),Y
		INY

unpack_tilemap_loop3:			; ...
		STA	PPU_DATA	; VRAM I/O Register (RW)
		CLC
		ADC	tmp_var_20
		DEC	tmp_var_18
		BNE	loc_6000_92C6
		DEC	tmp_var_17
		BEQ	end_unpack_tilemap
		STA	tmp_var_21
		TYA
		CLC
		ADC	tmp_var_19
		STA	tmp_var_19
		BCC	loc_6000_92B4
		INC	tmp_var_1A

loc_6000_92B4:				; ...
		LDY	#0
		LDX	tmp_var_16
		BEQ	loc_6000_92C0

loc_6000_92BA:				; ...
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		DEX
		BNE	loc_6000_92BA

loc_6000_92C0:				; ...
		LDA	tmp_var_21
		LDX	tmp_var_15	;  / Object Counter / various tmp
		STX	tmp_var_18

loc_6000_92C6:				; ...
		DEC	tmp_var_1F
		BEQ	unpack_tilemap_loop
		LDX	tmp_var_20
		BEQ	unpack_tilemap_loop2
		BPL	unpack_tilemap_loop3
		CLC
		ADC	#1
		JMP	unpack_tilemap_loop3
; ---------------------------------------------------------------------------

end_unpack_tilemap:			; ...
		RTS
; End of function unpack_tilemap

; ---------------------------------------------------------------------------
		LDA	#<tilemap_pack18 ; <- unused unpacker
		LDA	#<tilemap_pack23
		LDA	#<tilemap_pack21
		LDA	#<tilemap_pack22
		LDA	#<tilemap_pack24
		LDA	#<tilemap_pack25
		LDA	#<tilemap_pack26
		STA	tmp_var_19	; low ptr
		LDA	#>tilemap_pack18
		LDA	#>tilemap_pack23
		LDA	#>tilemap_pack21
		LDA	#>tilemap_pack22
		LDA	#>tilemap_pack24
		LDA	#>tilemap_pack25
		LDA	#>tilemap_pack26
		STA	tmp_var_1A	; high ptr
		LDY	#0
		STY	tmp_var_15	;  / Object Counter / various tmp
		STY	tmp_var_16
		LDX	#0
		LDA	(tmp_var_19),Y
		STA	gfx_buff_adr_h,X
		INY
		LDA	(tmp_var_19),Y
		INY
		STA	gfx_buff_adr_l,X
		STA	tmp_var_17

loc_6000_930D:				; ...
		LDA	gfx_buff_adr_h
		CLC
		ADC	tmp_var_15	;  / Object Counter / various tmp
		STA	tmp_var_15	;  / Object Counter / various tmp
		BCC	loc_6000_9319
		INC	tmp_var_16

loc_6000_9319:				; ...
		DEC	tmp_var_17
		BNE	loc_6000_930D
		LDA	#0
		SEC
		SBC	tmp_var_15	;  / Object Counter / various tmp
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	#0
		SBC	tmp_var_16
		STA	tmp_var_16
		LDX	#$FE
		JMP	loc_6000_93A4
; ---------------------------------------------------------------------------

loc_6000_932F:				; ...
		LDY	#0
		LDA	(tmp_var_19),Y
		STA	gfx_buff_dat2,X
		STA	tmp_var_18
		INY
		SEC
		SBC	(tmp_var_19),Y
		BEQ	loc_6000_9344
		CMP	#$FF
		BEQ	loc_6000_935B
		BNE	loc_6000_9374

loc_6000_9344:				; ...
		LDA	#$41
		STA	gfx_buff_dat1,X
		JSR	unused_map_unpack_inc_src_ptr

loc_6000_934C:				; ...
		LDA	(tmp_var_19),Y
		CMP	tmp_var_18
		BNE	loc_6000_93A4
		INC	gfx_buff_dat1,X
		INY
		JSR	unused_map_unpack_inc_src_ptr
		BNE	loc_6000_934C

loc_6000_935B:				; ...
		LDA	#$81
		STA	gfx_buff_dat1,X
		JSR	unused_map_unpack_inc_src_ptr

loc_6000_9363:				; ...
		INC	tmp_var_18
		LDA	(tmp_var_19),Y
		CMP	tmp_var_18
		BNE	loc_6000_93A4
		INY
		INC	gfx_buff_dat1,X
		JSR	unused_map_unpack_inc_src_ptr
		BNE	loc_6000_9363

loc_6000_9374:				; ...
		LDA	#0
		STA	tmp_var_18
		LDA	#1
		STA	gfx_buff_dat1,X
		STX	tmp_var_1B

loc_6000_937F:				; ...
		JSR	unused_map_unpack_inc_src_ptr
		INC	tmp_var_18
		INX
		LDA	(tmp_var_19),Y
		STA	gfx_buff_dat2,X
		INY
		LDA	(tmp_var_19),Y
		SEC
		SBC	gfx_buff_dat2,X
		BEQ	loc_6000_9397
		CMP	#1
		BNE	loc_6000_937F

loc_6000_9397:				; ...
		DEY
		STX	tmp_var_1C
		LDX	tmp_var_1B
		LDA	tmp_var_18
		STA	gfx_buff_dat1,X
		LDX	tmp_var_1C
		DEX

loc_6000_93A4:				; ...
		TYA
		CLC
		ADC	tmp_var_19
		STA	tmp_var_19
		BCC	loc_6000_93AE
		INC	tmp_var_1A

loc_6000_93AE:				; ...
		INX
		INX
		JMP	loc_6000_932F
; ---------------------------------------------------------------------------

unused_map_unpack_inc_src_ptr:		; ...
		INC	tmp_var_15	;  / Object Counter / various tmp
		BNE	locret_6000_93CB
		INC	tmp_var_16
		BNE	locret_6000_93CB
		INX			; if unpack error happens
		INX
		INX
		INX
		STX	$7FF
		LDA	#$81

loc_6000_93C4:				; ...
		EOR	#$18		; $99/81 - monochrome show/off bg/sprites
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		BNE	loc_6000_93C4

locret_6000_93CB:			; ...
		RTS
; ---------------------------------------------------------------------------
tilemap_pack0:	.BYTE 7, 8, $38, $C7, $C9, $CB,	$CD, $CF, $D1, $D3, $C8, $CA, $CC, $CE,	$D0, $D2, $D4, $D5, $D7, $D9, $DB, $DD,	$DF ; ...
		.BYTE $E1, $D6,	$D8, $DA, $DC, $DE, $E0, $E2, $E3, $E5,	$E7, $E9, $EB, $ED, $EF, $E4, $E6, $E8,	$EA, $EC, $EE, $F0, $F1
		.BYTE $F3, $F5,	$F7, $F9, $FB, $FD, $F2, $F4, $F6, $F8,	$FA, $FC, $FE
tilemap_pack1:	.BYTE $17, $B, 6, 0, 0,	0, 0, 0, 0, $8B, 1, 6, 0, 0, 0,	0, 0, 0, 4, 0, 0, 0, 0,	$90, $C, 5, 0, 0, 0, 0,	$B, $93, $1C
		.BYTE 2, 0, 0, $96, $2F, 1, 0, $96, $45, 1, 0, $96, $5B, 1, 0, $8A, $71, 2, 0, 0, $8A, $7B, 1, 0, $8A, $85, 2, 0, 0
		.BYTE $8A, $8F,	2, 0, 0, $88, $99, 4, 0, 0, 0, 0, $89, $A1, 2, 0, 0, $88, $AA, 5, 0, 0,	0, 0, 0, $87, $B2, 5, 0, 0, 0
		.BYTE 0, $8F, $85, $B9,	7, 0, 0, 0, 0, 0, 0, 0,	$84, $BE, 4, 0,	0, 0, 0
tilemap_pack13:	.BYTE $E, $12, $4E, $F8, 3, 1, 2, $F, $8B, 3, 6, $E, 0,	0, 0, 0, 0, $89, $10, 5, 0, 0, 0, 0, 0,	$88, $19, 6, $21, 0
		.BYTE 0, 0, 0, 0, $85, $23, 3, 0, $28, 0, $8A, $29, 4, 0, 0, $33, 0, $A0, $34, 1, $C1, $8D, $54, 3, 0, 0, $C2, $8C, $61
		.BYTE 3, 0, 0, $6D, $86, $6F, 1, $68, $8D, $75,	1, $68,	$A9, $82, 1, 0,	$8B, $AC, 4, 0,	$B8, 0,	$B7, $86, $B9, 6, $AB
		.BYTE $BF, $C0,	0, 0, 0, $4E, $FB
tilemap_pack19:	.BYTE 9, 5, $88, $D5, 1, $D5, $9F, $DD,	5, $D5,	$FC, $FD, $FE, $FF, $B,	$D, $42, 0, $89, $7A, 2, 0, $C,	$89, $8F, 1
		.BYTE 0, $8A, $A6, 1, 0, $8A, $C0, 1, 0, $8A, $DC, $8B,	0, $8B,	$17, $8B, $2E, $8B, $44, 1, 0, $8A, $5B, $8B, $71, $85
		.BYTE $84, $42,	0, $84,	$89, $42, 0, 1,	$93, $47, 0, 1,	$94
tilemap_pack20:	.BYTE $11, $18,	$4E, 0,	$83, 1,	$4E, 0,	$83, 4,	$4C, 0,	$85, 7,	$48, 0,	$89, $C, $48, 0, $89, $15, $47,	0, $8A,	$1E
		.BYTE $45, 0, $8C, $28,	$43, 0,	$8E, $34, $42, 0, $8F, $42, 1, 0, $90, $51, 1, 0, $90, $6A, 2, 0, $7A, $85, $83, $83
		.BYTE $80, $87,	$88, 1,	0, $87,	$98, $82, $96, $87, $9F, $89, $B0, 1, $AF, $87,	$B9, $91, $CB, $83, $E6, 1, 0, $8D, $E9
		.BYTE $42, 0, $82, $B, $42, 0, $83, $D,	1, $A, $87, $10, $42, 0, $83, $22, 1, 0, $82, $25, $82,	$20, $87, $27, 1, 0
		.BYTE $86, $39,	$83, $36, $85, $3F, $42, 0, $86, $4F, $84, $4B,	$84, $55, 1, 0,	$82, $59, $85, $65, $85, $60, $87, $6A
		.BYTE $8A, $72,	$87, $7D, 2, $85, $8E, $82, $87, $42, 0, $84, $89, $84,	$8F, $4C, 0, $84, $94, $44, 0
tilemap_pack21:	.BYTE $B, 9, 1,	$83, $82, $81, $48, 0, $89, $84, $42, 0, $8A, $8D, 1, 0, $86, $97, 1, 0, $8A, $9D, 1, 0, $8F, $A7, 1 ; ...
		.BYTE 0, $8A, $B6, 1, 0, $89, $C0, $44,	0, $84,	$C9, $44, 0
tilemap_pack22:	.BYTE $D, $F, $44, $40,	$85, $41, $47, $40, $88, $46, $44, $40,	$89, $4E, $43, $40, $87, $57, 1, $40, $83, $5E,	$42 ; ...
		.BYTE $40, $82,	$61, 1,	$40, $84, $63, 1, $40, $83, $67, 1, $40, $B4, $6A, 1, $40, $8C,	$9E, 1,	$40, $8B, $AA, $42, $40
		.BYTE $8B, $B5,	$43, $40, $89, $C0, $45, $40, $87, $C9,	$47, $40, $85, $D0, $44, $40
tilemap_pack23:	.BYTE 7, 8, $43, 0, $82, $81, $43, 0, $84, $83,	$43, 0,	$82, $87, 1, 0,	$82, $89, 1, 0,	$83, $8B, 1, 0,	$89, $8E, 1 ; ...
		.BYTE 0, $83, $97, $44,	0, $82,	$9A, $45, 0, 1,	$9C, $46, 0
tilemap_pack12:	.BYTE $1C, 8, 1, $FC, $5A, $F8,	2, $FD,	$F9, $5A, 0, 2,	$FA, $F9, $5A, 0, 2, $FA, $F9, $5A, 0, 2, $FA, $F9, $5A, 0, 2
		.BYTE $FA, $F9,	$5A, 0,	2, $FA,	$F9, $5A, 0, 2,	$FA, $FE, $5A, $FB, 1, $FF
tilemap_pack24:	.BYTE $C, $10, $4F, 0, 1, 1, $4A, 0, $84, 2, $42, 0, $82, 6, $43, 0, $89, 8, $43, 0, $8A, $11, 1, 0, $8B, $1B, 1, 0 ; ...
		.BYTE $98, $26,	$42, 0,	$83, $3E, 1, 0,	$86, $41, 1, 0,	$84, $47, 1, 0,	$84, $4B, $43, 0, $84, $4F, $42, 0, $83, $53
		.BYTE $42, 0, $86, $56,	1, 0, $84, $5C,	$42, 0,	$84, $60, $42, 0, $84, $64, $43, 0, $83, $68, $42, 0, $83, $6B,	$42
		.BYTE 0, $85, $6E, 1, 0, $84, $73, $42,	0, $82,	$77, 1,	0, $89,	$79
tilemap_pack25:	.BYTE $14, $12,	$43, 0,	$83, 1,	$49, 0,	1, 4, $47, 0, $84, 5, $42, 0, $89, 9, $44, 0, $90, $12,	$44, 0,	$90, $22, $43 ;	...
		.BYTE 0, $91, $32, $43,	0, $91,	$43, $43, 0, $92, $54, $43, 0, $91, $66, $42, 0, $92, $77, $42,	0, $92,	$89, $42, 0
		.BYTE $93, $9B,	3, 0, $AE, 0, $8E, $AF,	1, 0, $82, $BD,	3, 0, $BF, 0, $91, $C0,	$43, 0,	$84, $D1, 1, $92, $85, $D5, 1
		.BYTE 0, $86, $DA, $43,	0, $84,	$E0, $42, 0, $88, $E4, 1, $18, $82, $EC, $44, 0, $83, $EE, $42,	0, $8A,	$F1, $42, 0
		.BYTE $86, $41,	$42, 0,	$8A, $47, $42, 0, $86, $51, $44, 0, $87, $57, $42, 0
tilemap_pack26:	.BYTE $14, $12,	$48, 0,	$83, 1,	$4D, 0,	2, 4, 0, $86, 5, $4C, 0, 2, $B,	0, $87,	$C, $4A, 0, $8A, $13, $4A, 0, $8B, $1D ; ...
		.BYTE $49, 0, $8C, $28,	2, 5, $34, $47,	0, $86,	$35, $42, 0, $85, $3B, $47, 0, $86, $40, $42, 0, $84, $46, $48,	0, $86
		.BYTE $4A, $42,	0, $84,	$50, $48, 0, $86, $54, $42, 0, $83, $5A, $49, 0, $86, $5D, $42,	0, $83,	$63, $49, 0, $86, $66
		.BYTE $42, 0, $83, $6C,	$48, 0,	$91, $6F, $43, 0, $8A, $80, $43, $89, $84, $8A,	$42, 0,	$92, $8E, $42, 0, $8C, $A0, 1
		.BYTE 0, $84, $AC, $44,	0, $8F,	$B0, $44, 0, $86, $BF, $42, 0, $82, $F5, 1, 0, $85, $F7, $42, 0
byte_6000_97B7:	.BYTE 3, 1, 1		; ...
byte_6000_97BA:	.BYTE $20, $20,	$21	; ...
; ---------------------------------------------------------------------------
		JMP	sub_6000_90E8	; unused?

; =============== S U B	R O U T	I N E =======================================


game_over_event:			; ...
		JSR	game_end_event_starter
		JSR	clear_tilemaps
		JSR	clear_sprites
		LDA	#2
		LDY	#4
		JSR	sub_6000_DB94
		LDA	#4
		TAY
		JSR	sub_6000_DB94
		LDA	#$10
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDA	#$16
		STA	banks_ids6+$16
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		BMI	loc_6000_9800
		LDY	#>text_d88b
		LDA	Continues_Player1,X
		ROL	A
		LDA	#7
		BCC	loc_6000_97EF
		LDA	#4

loc_6000_97EF:				; ...
		LDX	#<text_d88b
		JSR	write_some_text_to_vram
		LDA	#$D2
		LDX	#$20		; ppu: 2000
		JSR	loc_6000_908B
		JSR	sub_6000_8FEA
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_6000_9800:				; ...
		INX
		LDY	byte_6000_97B7,X
		LDA	byte_6000_97BA,X
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$80
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		CPX	#2
		LDX	#0
		BCS	loc_6000_9820

loc_6000_9815:				; ...
		LDA	#$3F
		STA	PPU_DATA	; VRAM I/O Register (RW)
		DEX
		BNE	loc_6000_9815
		DEY
		BEQ	loc_6000_982C

loc_6000_9820:				; ...
		LDA	#$3E

loc_6000_9822:				; ...
		STA	PPU_DATA	; VRAM I/O Register (RW)
		DEX
		CPX	#$E0
		BNE	loc_6000_9822
		BEQ	loc_6000_9815

loc_6000_982C:				; ...
		LDA	Object_RamSlotID_tmp ; id saved	for objects functions
		CMP	#1
		BEQ	loc_6000_984E
		LDA	#$20
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$A4
		LDX	#$31
		LDY	#$9B		; 9b31
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h
		LDA	#$20
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$93
		LDX	#$C3
		LDY	#$9B		; 9bc3
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h

loc_6000_984E:				; ...
		LDA	Object_RamSlotID_tmp ; id saved	for objects functions
		BEQ	loc_6000_988E
		LDA	#$21
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$D2
		LDX	#$5C
		LDY	#$9B		; 9b5c
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h
		LDA	#$21
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$84
		LDX	#$80
		LDY	#$9B		; 9b80
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h
		LDA	Object_RamSlotID_tmp ; id saved	for objects functions
		BPL	loc_6000_988E
		LDA	#$22
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$A4
		LDX	#$60
		LDY	#$9B		; 9b60
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h
		LDA	#$22
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$B4
		LDX	#$A9
		LDY	#$9B		; 9ba9
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h

loc_6000_988E:				; ...
		LDA	#$90
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDX	#$2C
		LDY	#$2E
		JSR	load_palettes	; input	X - bkg	pal id,	Y - spr	pal id
		LDY	#0
		JSR	sub_6000_98EA

loc_6000_989F:				; ...
		LDX	#$22
		JSR	load_attributes
		LDA	Object_RamSlotID_tmp ; id saved	for objects functions
		BMI	loc_6000_98DE
		BEQ	loc_6000_98AC
		LDA	#$10

loc_6000_98AC:				; ...
		LDX	#$23
		STX	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		EOR	#$D8
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDY	#$10

loc_6000_98B8:				; ...
		LDA	#$AA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		DEY
		BPL	loc_6000_98B8
		STX	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$E8
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDY	#$10

loc_6000_98CA:				; ...
		LDA	#$FF		; ?
		LDA	#$AA
		STA	PPU_DATA	; VRAM I/O Register (RW)
		DEY
		BNE	loc_6000_98CA
		LDA	#$32
		JSR	sub_6000_DB92
		LDA	#$34
		JSR	sub_6000_DB92

loc_6000_98DE:				; ...
		LDA	#$90
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDX	#$1B
		LDY	#0
		JMP	jump_from_bank6
; End of function game_over_event


; =============== S U B	R O U T	I N E =======================================


sub_6000_98EA:				; ...
		LDX	#0
		LDA	#6
		STA	banks_ids6+6
		TXA

loc_6000_98F2:				; ...
		STA	scroll_tilemap_buff,X
		INX
		CPX	#$C0
		BNE	loc_6000_98F2
		LDA	#1
		STA	bkg_update_buff
		STA	bkg_update_buff+2
		LDA	#$FF
		STA	bkg_upd_buff2a_adr_l3
		STA	bkg_update_buff+1
		TYA
		BEQ	loc_6000_989F
		JMP	loc_6000_9D16
; End of function sub_6000_98EA


; =============== S U B	R O U T	I N E =======================================


sub_6000_9910:				; ...
		LDX	bkg_upd_buff2a_adr_l4
		TXA
		ORA	#$20
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	bkg_update_buff2,X
		LSR	A
		LSR	A
		LSR	A
		AND	#$1F
		ORA	#$80
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$14
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDX	#8
		RTS
; End of function sub_6000_9910


; =============== S U B	R O U T	I N E =======================================


sub_6000_992E:				; ...
		LDA	#$16
		STA	banks_ids6+$16
		JSR	sub_6000_9910
		LDA	PPU_DATA	; VRAM I/O Register (RW)

loc_6000_9939:				; ...
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		AND	bkg_upd_buff2a_adr_l3
		STA	bkg_update_buff3,X
		DEX
		BNE	loc_6000_9939
		LDA	#6
		STA	banks_ids6+6
		JSR	sub_6000_9910

loc_6000_994D:				; ...
		LDA	bkg_update_buff3,X
		STA	PPU_DATA	; VRAM I/O Register (RW)
		DEX
		BNE	loc_6000_994D
		LDA	#$10
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		RTS
; End of function sub_6000_992E


; =============== S U B	R O U T	I N E =======================================


Cont_screen_sprites?:			; ...
		JSR	sub_6000_992E
		JSR	clear_scrolls_reg
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		BMI	loc_6000_998E
		LDA	FrameCounter
		CMP	#$60
		BNE	loc_6000_998E
		LDA	#0
		STA	global_var_cnt?
		LDA	#$A
		STA	timer_cont_scrn_sec
		LDA	#$78
		STA	timer_cont_scrn_60
		LDA	Continues_Player1,X
		BPL	loc_6000_9984
		LDA	#0
		STA	timer_cont_scrn_sec
		LDA	#$90
		STA	global_var_cnt?

loc_6000_9984:				; ...
		LDA	jump_ptr_nmi	; BANK0:E65B
		SBC	#3
		STA	jump_ptr_nmi	; поинтер на функцию во	время nmi
		BCS	loc_6000_998E
		DEC	jump_ptr_nmi+1	; поинтер на функцию во	время nmi

loc_6000_998E:				; ...
		LDA	bkg_update_buff2
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		LDA	#0
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		LDY	#$A
		LDX	#$6F
		JSR	wait6
		LDA	bkg_update_buff2+1
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		STX	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		LDY	#6
		LDX	#$A4
		JSR	wait6
		LDA	bkg_update_buff2+2
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		STX	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		LDX	bkg_upd_buff2a_adr_l4
		CPX	#3
		BNE	loc_6000_99C6
		LDA	bkg_upd_buff2a_adr_l3
		BPL	loc_6000_99FA
		INX

loc_6000_99C6:				; ...
		LDA	bkg_update_buff+8,X
		SEC
		SBC	byte_6000_9ACA,X
		STA	bkg_update_buff+8,X
		LDA	bkg_update_buff,X
		SBC	byte_6000_9ACF,X
		STA	bkg_update_buff,X
		LDA	bkg_update_buff2,X
		CLC
		ADC	byte_6000_9ACA,X
		STA	bkg_update_buff2,X
		BNE	loc_6000_9A01
		INC	bkg_upd_buff2a_adr_l4
		CPX	#3
		BCC	loc_6000_9A01
		STA	bkg_upd_buff2a_adr_l4
		LDA	bkg_upd_buff2a_adr_l3
		EOR	#$FF
		STA	bkg_upd_buff2a_adr_l3
		JMP	loc_6000_9A09
; ---------------------------------------------------------------------------

loc_6000_99FA:				; ...
		LDX	#$18
		LDY	#0
		JMP	jump_from_bank6
; ---------------------------------------------------------------------------

loc_6000_9A01:				; ...
		JSR	loc_6000_9A0C
		BEQ	loc_6000_9A09
		JSR	hide_sprites_by_Y

loc_6000_9A09:				; ...
		JMP	set_previous_bank_as_0
; ---------------------------------------------------------------------------

loc_6000_9A0C:				; ...
		LDY	#2
		LDA	Object_RamSlotID_tmp ; id saved	for objects functions
		CMP	#1
		BNE	some_screen_sprites
		INY

some_screen_sprites:			; ...
		LDX	#0

loc_6000_9A17:				; ...
		STY	tmp_var_16
		LDA	byte_6000_9AD1,Y
		CLC
		ADC	bkg_update_buff+6,Y
		STA	tmp_var_17
		LDA	attributes_buff+$3E,Y
		ADC	#0
		ROR	A
		BCC	loc_6000_9A2D
		JMP	loc_6000_9AB5
; ---------------------------------------------------------------------------

loc_6000_9A2D:				; ...
		LDA	byte_6000_9ADA,Y
		SEC
		SBC	attributes_buff+$30
		STA	tmp_var_8c
		CPY	#7
		BCC	loc_6000_9A7F
		CPY	#9
		BCC	loc_6000_9A58
		BNE	loc_6000_9A49
		LDA	tmp_var_8c
		SBC	#8
		STA	object_3_Xpos_L
		STX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_6000_9A49:				; ...
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		CMP	#$A0
		BCC	loc_6000_9AC7
		SBC	#$A0
		ADC	tmp_var_8c
		STA	tmp_var_8c
		JMP	loc_6000_9A7F
; ---------------------------------------------------------------------------

loc_6000_9A58:				; ...
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		CMP	#$90
		BCC	loc_6000_9A7F
		SBC	#$90
		CMP	#$C
		BCC	loc_6000_9A66
		LDA	#$C

loc_6000_9A66:				; ...
		LSR	A
		CPY	#7
		BNE	loc_6000_9A6F
		SBC	#1
		EOR	#$FF

loc_6000_9A6F:				; ...
		STA	tmp_var_18
		CLC
		ADC	tmp_var_8c
		STA	tmp_var_8c
		ASL	tmp_var_18
		LDA	tmp_var_17
		SEC
		SBC	tmp_var_18
		STA	tmp_var_17

loc_6000_9A7F:				; ...
		LDA	byte_6000_9AE3,Y
		STA	tmp_var_18	; frame	id
		LDA	#0		; spritte attributes of	first toad
		CPY	#$A
		BNE	loc_6000_9AAD
		LDA	#1		; sprite atrributes of second of toad
		JSR	obj_sprite_flags
		LDY	game_end_caller_var
		CPY	#$1D
		BCC	loc_6000_9AB0
		CPY	#$AE
		BCS	loc_6000_9AB0
		LDY	Object_RamSlotID_tmp ; id saved	for objects functions
		LDA	#$33

loc_6000_9A9D:				; ...
		STA	sprite14_adress,Y
		INY
		INY
		INY
		INY
		CLC
		ADC	#1
		CMP	#$37
		BCC	loc_6000_9A9D
		BCS	loc_6000_9AB0

loc_6000_9AAD:				; ...
		JSR	obj_sprite_flags ; garganutua sprites

loc_6000_9AB0:				; ...
		TXA
		BEQ	locret_6000_9AC9
		LDY	tmp_var_16

loc_6000_9AB5:				; ...
		INY
		CPY	#$B
		BEQ	loc_6000_9AC7
		CPY	#5
		BEQ	loc_6000_9AC7
		BCS	loc_6000_9AC4
		LDA	Object_RamSlotID_tmp ; id saved	for objects functions
		BPL	loc_6000_9AC7

loc_6000_9AC4:				; ...
		JMP	loc_6000_9A17
; ---------------------------------------------------------------------------

loc_6000_9AC7:				; ...
		LDA	#1

locret_6000_9AC9:			; ...
		RTS
; ---------------------------------------------------------------------------
byte_6000_9ACA:	.BYTE 8, $F8, 8, 0, 4	; ...
byte_6000_9ACF:	.BYTE 0, $FF		; ...
byte_6000_9AD1:	.BYTE 0, 0, $98, $2F, $A0, $64,	$B4, $6C, $55 ;	...
byte_6000_9ADA:	.BYTE $5C, $64,	$57, $97, $D7, $53, $25, $6F, $7F ; ...
byte_6000_9AE3:	.BYTE $72, $6C,	$40, $41, $42, $51, $50, $52, $53, $54,	$54 ; ...
tilemap_pack10:	.BYTE $C, 5, $3C, 0, 0,	0, 0, $2C, $2D,	$2E, $2F, 0, 0,	0, 0, 0, 0, 0, $30, $31, $32, $33, $34,	0, 0, 0, 0, 0, 0, 0
		.BYTE 0, $35, $36, $37,	$38, 0,	0, 0, 0, $39, $3A, $3B,	$3C, $3D, $3E, $3F, $40, $41, $42, $43,	$44, $45, $46, $47, $48
		.BYTE $49, $4A,	$4B, $4C, $4D, $4E, $4F, $50
tilemap_pack11:	.BYTE $A, 3, $9E, $51	; ...
tilemap_pack2:	.BYTE 9, 6, 2, $3F, $3F, $84, $16, 4, $3F, $1A,	$3F, $3F, $88, $1B, 1, $3F, $87, $23, 1, $3F, $87, $2A,	2, $3F,	$3F
		.BYTE $82, $31,	1, $3F,	$84, $33, $B, $3F, $3F,	$3F, $3F, $3F, $3F, $3F, $37, $3F, $3F,	$3F
tilemap_pack4:	.BYTE $A, 3, $9E, $40
tilemap_pack6:	.BYTE $B, 5, $B, $5E, $5F, $3F,	$3F, $3F, $3F, $3F, $3F, $3F, $3F, $3F,	$8A, $60, 1, $3F, $96, $6A, $B,	$3F, $3F, $3F
		.BYTE $3F, $3F,	$80, $81, $3F, $3F, $3F, $3F
tilemap_pack5:	.BYTE 8, 8, 3, $3E, $3E, $3E, $84, $B4,	4, $3E,	$3F, $3F, $3F, $84, $B8, 3, $3F, $3F, $3F, $86,	$BC, 1,	$3F, $87, $C2
		.BYTE $88, $C9,	$87, $D1, 2, $3F, $3F, $86, $D8, 2, $3F, $3F, $86, $DE,	1, $3F
tilemap_pack7:	.BYTE 8, 7, $86, $E4, 2, $3F, $3F, $87,	$EA, 1,	$3F, $8B, $F1, $8D, 1, 1, $FC, $87, $E,	1, $FD,	$85, $38, 2, $FE, $3D
tilemap_pack3:	.BYTE 8, 8, 1, $3F, $84, $82, 3, $3F, $3F, $3F,	$85, $86, 3, $3F, $3F, $3F, $87, $8B, 1, $3F, $90, $92,	1, $3F,	$87
		.BYTE $A2, 2, $3F, $3F,	$86, $A9, 2, $3F, $3F, $85, $AF, 1, $15
tilemap_pack8:	.BYTE $B, 3, $C, 0, 0, 0, 0, $20, 0, 1,	0, 0, 0, 0, 0, $89, 2, 1, 0, $8B, $B
tilemap_pack9:	.BYTE $1D, $D, $12, $16, $17, 0, $18, $19, $1A,	0, 0, $1B, $1C,	$1D, $1E, $1F, $1A, 0, 0, 0, 0,	$8B, $21, $86, $2C, 1
		.BYTE 0, $96, $32, $95,	$48, 8,	$5C, $5C, $5C, $5D, 0, 0, 0, 0,	$93, $5E, $A, $5C, $5C,	$5C, $71, $72, $73, 0, 0, 0
		.BYTE 0, $97, $74, 6, 0, 0, 0, 0, 0, 0,	$96, $8B, 7, 0,	0, 0, 0, 0, 0, 0, $96, $A1, 7, 0, 0, 0,	0, 0, 0, 0, $95, $B7
		.BYTE 8, 0, 0, 0, 0, 0,	0, 0, 0, $92, $CC, $B, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	$92, $DE, $B, 0, 0, 0, 0, 0, 0,	0, 0
		.BYTE 0, 0, 0, $8F, $F0, $F, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, $14, $8B, 1, $11, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0
		.BYTE 0, 0, 0, 0, 0, 0,	0, $84,	$C, $19, 0, $10, $11, $12, $13,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0
		.BYTE 0, 0
; ---------------------------------------------------------------------------

loc_6000_9CB9:				; ...
		JSR	clear_tilemaps
		JSR	clear_sprites
		LDA	#$75
		STA	RandomValue_1
		STA	RandomValue_3
		STA	RandomValue_4
		LDA	#6
		LDY	#4
		JSR	sub_6000_DB94
		LDA	#8
		LDY	#4
		JSR	sub_6000_DB94
		LDA	#$16
		STA	banks_ids6+$16
		LDA	#$20
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$93
		LDX	#$E9
		LDY	#$9B		; 9be9
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h
		LDA	#$20
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$E1
		LDX	#$FE
		LDY	#$9B		; 9bfe
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h
		LDX	#$30
		LDY	#$32
		JSR	load_palettes	; input	X - bkg	pal id,	Y - spr	pal id
		LDX	#$42
		JSR	load_attributes
		LDY	#$75
		LDA	#0
		STA	pal_reduce_value ; dec to color	value

loc_6000_9D08:				; ...
		STA	object2_some_anim
		STY	RandomValue_1
		STY	RandomValue_3
		STY	RandomValue_4
		LDY	#1
		JSR	sub_6000_98EA

loc_6000_9D16:				; ...
		LDA	#$F0
		STA	bkg_update_buff2
		STA	bkg_update_buff2+1
		STA	bkg_update_buff2+2
		LDA	#$FF
		STA	bkg_update_buff2+3
		STA	bkg_update_buff+3
		STA	bkg_update_buff+4
		STA	bkg_update_buff+5
		STA	bkg_update_buff+6
		LDA	object2_some_anim
		BEQ	loc_6000_9D4E
		CMP	#2
		LDA	#$28
		BCS	loc_6000_9D3F
		LDA	#$40

loc_6000_9D3F:				; ...
		STA	object_3_Zpos_L
		LDA	object2_some_anim
		CMP	#1
		BEQ	loc_6000_9D53
		LDA	#$40
		STA	player2_Z_spd_sub

loc_6000_9D4E:				; ...
		LDA	#$FF
		STA	object3_Z_speed

loc_6000_9D53:				; ...
		INC	object_3_Zpos_H
		LDY	#$2B
		LDA	object2_some_anim
		CMP	#2
		BNE	loc_6000_9D61
		LDY	#$BC

loc_6000_9D61:				; ...
		LDA	#$BF
		LDX	#$B0
		SEC
		JSR	sub_6000_A1FA
		LDA	object2_some_anim
		BNE	loc_6000_9D75
		LDX	#$1E
		LDY	#0
		JMP	jump_from_bank6
; ---------------------------------------------------------------------------

loc_6000_9D75:				; ...
		JMP	set_previous_bank_as_0
; End of function Cont_screen_sprites?


; =============== S U B	R O U T	I N E =======================================


sub_6000_9D78:				; ...
		LDA	bkg_update_buff2
		LDY	object2_some_anim
		BNE	loc_6000_9D83
		CLC
		ADC	#$F8

loc_6000_9D83:				; ...
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		LDA	object_3_Zpos_L
		CMP	#$30
		BCS	loc_6000_9D90
		SEC
		BCS	loc_6000_9D94

loc_6000_9D90:				; ...
		CMP	#$F0
		BCC	loc_6000_9D96

loc_6000_9D94:				; ...
		ADC	#$F

loc_6000_9D96:				; ...
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		RTS
; End of function sub_6000_9D78


; =============== S U B	R O U T	I N E =======================================


sub_6000_9D9A:				; ...
		LDY	#0

loc_6000_9D9C:				; ...
		LDA	byte_6000_8082,Y
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	byte_6000_8083,Y
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	byte_6000_8084,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_6000_8085,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_6000_8086,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_6000_8087,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_6000_8088,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_6000_8089,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_6000_808A,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_6000_808B,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_6000_808C,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_6000_808D,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	byte_6000_808E,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		TYA
		CLC
		ADC	#$D
		TAY
		CMP	#$A9
		BCC	loc_6000_9D9C
		JMP	loc_6000_9E90
; ---------------------------------------------------------------------------

loc_6000_9DF6:				; ...
		BMI	sub_6000_9D9A
		LDA	object2_some_anim
		EOR	#3
		BEQ	loc_6000_9E08
		LDA	#0
		STA	pal_vram_upd_off ; BKG=$00, SPR=$10
		JSR	jump_to_bank0_func1
		LDA	#$10

loc_6000_9E08:				; ...
		STA	pal_vram_upd_off ; BKG=$00, SPR=$10
		JSR	jump_to_bank0_func1
		LDA	FrameCounter
		AND	#7
		BNE	loc_6000_9E49
		LDA	pal_reduce_value ; dec to color	value
		CLC
		ADC	#$10
		STA	pal_reduce_value ; dec to color	value
		CMP	#$50
		BCC	loc_6000_9E49
		LDA	#0
		STA	pal_reduce_value ; dec to color	value
		LDA	object2_some_anim
		CMP	#3
		BNE	loc_6000_9E44
		LDX	#$B

loc_6000_9E2B:				; ...
		LDA	byte_6000_A4A9,X
		STA	palette_ram,X
		DEX
		BPL	loc_6000_9E2B
		LDA	#$F
		STA	palette_ram+$F
		INX
		STX	pal_vram_upd_off ; BKG=$00, SPR=$10
		JSR	jump_to_bank0_func1
		LDA	#1
		STA	object2_some_anim
		BNE	loc_6000_9E49

loc_6000_9E44:				; ...
		LDA	#$FF
		STA	object2_some_anim

loc_6000_9E49:				; ...
		LDA	object2_some_anim
		CMP	#3
		BEQ	loc_6000_9E68
		JMP	loc_6000_9E90
; ---------------------------------------------------------------------------

starship_sprites?:			; ...
		LDA	pal_reduce_value ; dec to color	value
		BNE	loc_6000_9DF6
		LDA	object2_some_anim
		CMP	#3
		BNE	loc_6000_9E77
		LDA	FrameCounter
		CMP	#$E0
		BNE	loc_6000_9E68
		LDA	#$10
		STA	pal_reduce_value ; dec to color	value

loc_6000_9E68:				; ...
		JSR	clear_scrolls_reg
		LDA	#8
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		STA	ppu_ctrl1_val	;  > $80  кадр завершен
		LDX	#$B0
		JMP	loc_6000_A05B
; ---------------------------------------------------------------------------

loc_6000_9E77:				; ...
		LDA	#0
		STA	bkg_upd_buff2a_adr_l4
		JSR	sub_6000_992E
		INC	bkg_upd_buff2a_adr_l4
		JSR	sub_6000_992E
		LDA	object2_some_anim
		BEQ	loc_6000_9E90
		INC	bkg_upd_buff2a_adr_l4
		JSR	sub_6000_992E

loc_6000_9E90:				; ...
		JSR	clear_scrolls_reg
		JSR	sub_6000_9D78
		LDA	#8
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDA	#8
		LDY	object2_some_anim
		CPY	#1
		BEQ	loc_6000_9EC4
		LDA	#$79
		CPY	#2
		BCC	loc_6000_9EBA
		LDY	#$12

loc_6000_9EAC:				; ...
		DEY
		BNE	loc_6000_9EAC
		LDA	pal_reduce_value ; dec to color	value
		ROL	A
		LDA	#$6D
		BCC	loc_6000_9EBA
		STY	pal_reduce_value ; dec to color	value
		ADC	#2

loc_6000_9EBA:				; ...
		CLC
		ADC	object_3_Zpos_L
		TAY
		JSR	some_waiting
		LDA	#$18

loc_6000_9EC4:				; ...
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		STA	ppu_ctrl1_val	;  > $80  кадр завершен
		LDA	object2_some_anim
		BNE	loc_6000_9F15
		LDA	object_2_X_speed
		CMP	#3
		BCS	loc_6000_9F15
		LDA	bkg_update_buff2
		CMP	#8
		BEQ	loc_6000_9F15
		CMP	#$48
		LDA	bkg_update_buff2+4
		BCS	loc_6000_9EEE
		CLC
		ADC	#2
		STA	bkg_update_buff2+4
		BCC	loc_6000_9EEE
		INC	bkg_update_buff2+3

loc_6000_9EEE:				; ...
		CLC
		ADC	bkg_update_buff2+6
		STA	bkg_update_buff2+6
		LDA	bkg_update_buff2+3
		ADC	bkg_update_buff2
		STA	bkg_update_buff2
		STA	bkg_update_buff2+1
		STA	bkg_update_buff2+2
		CMP	#$14
		BNE	loc_6000_9F15
		LDA	object2_some_anim
		BNE	loc_6000_9F15
		LDA	#$60
		STA	player2_Z_spd_sub
		STA	object3_Z_sub

loc_6000_9F15:				; ...
		LDX	#2
		LDA	object2_some_anim
		BNE	loc_6000_9F1F
		JMP	loc_6000_9F95
; ---------------------------------------------------------------------------

loc_6000_9F1F:				; ...
		CMP	#2
		BNE	loc_6000_9F72
		LDA	object_2_X_speed
		BEQ	loc_6000_9F51
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		CMP	#$93
		BCC	loc_6000_9F44
		AND	#3
		BNE	loc_6000_9F44
		DEC	bkg_update_buff2
		DEC	bkg_update_buff2+1
		DEC	bkg_update_buff2+2
		LDA	bkg_update_buff2
		ROR	A
		BCS	loc_6000_9F44
		INC	object_3_Zpos_L

loc_6000_9F44:				; ...
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		CMP	#$B0
		BNE	loc_6000_9F6F
		LDA	#$10
		STA	pal_reduce_value ; dec to color	value
		JMP	loc_6000_9F6F
; ---------------------------------------------------------------------------

loc_6000_9F51:				; ...
		LDA	bkg_update_buff2
		INC	bkg_update_buff2
		INC	bkg_update_buff2+1
		INC	bkg_update_buff2+2
		CMP	#$AD
		BNE	loc_6000_9F66
		STA	pal_reduce_value ; dec to color	value
		STA	object_2_X_speed

loc_6000_9F66:				; ...
		BCS	loc_6000_9F6F
		AND	#3
		BNE	loc_6000_9F6F
		DEC	object_3_Zpos_L

loc_6000_9F6F:				; ...
		JMP	loc_6000_9FB6
; ---------------------------------------------------------------------------

loc_6000_9F72:				; ...
		INC	bkg_update_buff2
		INC	bkg_update_buff2+1
		INC	bkg_update_buff2+2
		LDA	bkg_update_buff2
		ROR	A
		BCS	loc_6000_9F84
		DEC	object_3_Zpos_L

loc_6000_9F84:				; ...
		LDX	#2
		LDA	FrameCounter
		AND	#$40
		CMP	#8
		LDA	#8
		BCS	loc_6000_9F92
		LDA	#$F7

loc_6000_9F92:				; ...
		JMP	loc_6000_9FAD
; ---------------------------------------------------------------------------

loc_6000_9F95:				; ...
		LDA	bkg_update_buff2
		CMP	#$14
		BCC	loc_6000_9FA0
		LDA	#2
		BNE	loc_6000_9FAD

loc_6000_9FA0:				; ...
		LDA	#$F
		CLC
		ADC	object_3_Zpos_L
		ROL	A
		LDA	#4
		BCS	loc_6000_9FAD
		LDA	#$FC

loc_6000_9FAD:				; ...
		STA	snd_tmp_var_39
		LDX	#$C
		LDY	#0
		JSR	jump_from_bank6

loc_6000_9FB6:				; ...
		LDA	bkg_update_buff2
		EOR	#$FF
		STA	bkg_update_buff+$B
		STA	bkg_update_buff+$C
		STA	bkg_update_buff+$D
		STA	bkg_update_buff+$E
		LDA	object_3_Zpos_L
		STA	attributes_buff+$30
		LDX	#0
		LDA	object2_some_anim
		BNE	loc_6000_A005
		LDA	FrameCounter
		AND	#2
		LSR	A
		ADC	#5
		TAY
		JSR	some_screen_sprites
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		BMI	loc_6000_A005
		LDY	game_end_caller_var
		DEY
		BNE	loc_6000_A005
		LDX	#$9C
		AND	#1
		BEQ	loc_6000_9FF0
		LDA	#$40

loc_6000_9FF0:				; ...
		STA	tmp_var_90	; obj_dir_tmp (для спрайтов - направление объекта)
		STA	tmp_var_1B
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		ORA	#$80
		STA	tmp_var_17
		LDA	#$E8
		SBC	FrameCounter_Even ; счетчик каждого второго кадра
		STA	tmp_var_8c
		LDY	#$B
		JSR	some_sprites_ptr

loc_6000_A005:				; ...
		LDA	#$F8

loc_6000_A007:				; ...
		STA	Sprites_Ypos,X
		INX
		INX
		INX
		INX
		CPX	#$B0
		BNE	loc_6000_A007
		LDA	object2_some_anim
		BNE	loc_6000_A01E
		LDA	bkg_update_buff2
		CMP	#8
		BEQ	loc_6000_A08A

loc_6000_A01E:				; ...
		LDY	object2_some_anim
		BEQ	loc_6000_A07B
		CPY	#2
		BNE	loc_6000_A05B
		LDA	object_2_X_speed
		BNE	loc_6000_A05B
		LDA	object3_X_shadow
		STA	tmp_var_17
		LDA	object3_Y_shadow
		STA	tmp_var_8c
		LDX	#$70
		LDA	#0
		STA	tmp_var_90	; obj_dir_tmp (для спрайтов - направление объекта)
		STA	tmp_var_1B
		LDA	#<byte_6000_DF8D ; #$DF8D
		STA	tmp_var_19
		LDA	#>byte_6000_DF8D
		JSR	read_sprites_from_ptr
		LDX	#$B0
		LDA	FrameCounter
		AND	#1
		BNE	loc_6000_A05B
		DEC	object3_X_shadow
		LDA	FrameCounter
		AND	#7
		BNE	loc_6000_A05B
		INC	object3_Y_shadow

loc_6000_A05B:				; ...
		LDA	Sprites_Adress,X
		AND	#3
		EOR	#3
		AND	FrameCounter
		BNE	loc_6000_A073
		INC	Sprites_Xpos,X
		LDA	Sprites_Xpos,X
		AND	#1
		BEQ	loc_6000_A073
		DEC	Sprites_Ypos,X

loc_6000_A073:				; ...
		INX
		INX
		INX
		INX
		BNE	loc_6000_A05B
		BEQ	loc_6000_A0DA

loc_6000_A07B:				; ...
		LDA	FrameCounter
		AND	#3
		BNE	loc_6000_A08A

loc_6000_A081:				; ...
		DEC	Sprites_Xpos,X
		INX
		INX
		INX
		INX
		BNE	loc_6000_A081

loc_6000_A08A:				; ...
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions

loc_6000_A08C:				; ...
		LDA	Sprites_Ypos,X
		CMP	#$F8
		BEQ	loc_6000_A0DA
		LDA	Sprites_Xpos,X
		CMP	#$64
		BCS	loc_6000_A0AB
		LDA	game_end_caller_var
		BEQ	loc_6000_A0A2
		CMP	#$B4
		BCC	loc_6000_A0A6

loc_6000_A0A2:				; ...
		LDA	Lives_Player1	; кол-во жизней	(сердечек)
		BMI	loc_6000_A0CF

loc_6000_A0A6:				; ...
		LDA	#0
		CLC
		BCC	loc_6000_A0B9

loc_6000_A0AB:				; ...
		LDA	game_end_caller_var
		BEQ	loc_6000_A0B3
		CMP	#$B4
		BCC	loc_6000_A0B7

loc_6000_A0B3:				; ...
		LDA	Lives_Player2	; кол-во жизней	(сердечек)
		BMI	loc_6000_A0CF

loc_6000_A0B7:				; ...
		LDA	#5

loc_6000_A0B9:				; ...
		ADC	Sprites_Ypos,X
		SBC	object_3_Xpos_L
		BCC	loc_6000_A0CF
		CMP	#$B
		BCS	loc_6000_A0D4
		LDA	#$20
		ORA	Sprites_Attrib,X
		STA	Sprites_Attrib,X
		BNE	loc_6000_A0D4

loc_6000_A0CF:				; ...
		LDA	#$F8
		STA	Sprites_Ypos,X

loc_6000_A0D4:				; ...
		INX
		INX
		INX
		INX
		BNE	loc_6000_A08C

loc_6000_A0DA:				; ...
		LDA	game_end_caller_var
		BEQ	loc_6000_A141
		CMP	#$1E
		BCC	loc_6000_A112
		CMP	#$B4
		BCC	loc_6000_A0EE
		CMP	#$D2
		BCC	loc_6000_A112
		CMP	#$FF
		BEQ	locret_6000_A169

loc_6000_A0EE:				; ...
		DEC	FrameCounter
		DEC	FrameCounter
		DEC	FrameCounter_Even ; счетчик каждого второго кадра
		LDA	game_end_caller_var
		CMP	#$B4
		BCC	loc_6000_A15D
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		CMP	#$30
		BCS	loc_6000_A15F
		CMP	#$20
		BEQ	loc_6000_A162
		INC	object_3_Zpos_L
		CMP	#$28
		BCS	loc_6000_A15F
		INC	object_3_Zpos_L
		LDA	#0
		BEQ	loc_6000_A15F

loc_6000_A112:				; ...
		LDX	#0

loc_6000_A114:				; ...
		LDA	Sprites_Adress,X
		CMP	#$25
		BEQ	loc_6000_A12C
		BCC	loc_6000_A139
		CMP	#$2A
		BCS	loc_6000_A139
		CMP	#$27
		BEQ	loc_6000_A12C
		LDA	#$F8
		STA	Sprites_Ypos,X
		BNE	loc_6000_A139

loc_6000_A12C:				; ...
		LDA	#$2A
		STA	Sprites_Adress,X
		LDA	Sprites_Attrib,X
		EOR	#1
		STA	Sprites_Attrib,X

loc_6000_A139:				; ...
		INX
		INX
		INX
		INX
		CPX	#$90
		BCC	loc_6000_A114

loc_6000_A141:				; ...
		LDA	object2_some_anim
		BEQ	loc_6000_A14C
		CMP	#8
		BEQ	loc_6000_A16A
		BNE	loc_6000_A15F

loc_6000_A14C:				; ...
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		CMP	#$F0
		BNE	loc_6000_A15F
		LDA	game_end_caller_var
		BEQ	loc_6000_A162
		ROR	A
		BCC	loc_6000_A15B
		DEC	FrameCounter

loc_6000_A15B:				; ...
		DEC	FrameCounter_Even ; счетчик каждого второго кадра

loc_6000_A15D:				; ...
		INC	game_end_caller_var

loc_6000_A15F:				; ...
		JMP	set_previous_bank_as_0
; ---------------------------------------------------------------------------

loc_6000_A162:				; ...
		LDX	#6
		LDY	#0
		JMP	jump_from_bank6
; ---------------------------------------------------------------------------

locret_6000_A169:			; ...
		RTS
; ---------------------------------------------------------------------------

loc_6000_A16A:				; ...
		JMP	loc_6000_A16A
; End of function sub_6000_9D9A


; =============== S U B	R O U T	I N E =======================================


first_load:				; ...
		JSR	clear_tilemaps
		JSR	clear_sprites
		LDX	#$20
		JSR	load_attributes
		JSR	level_values_load
		LDA	#$A
		LDY	#4
		JSR	sub_6000_DB94
		LDA	#$C
		JSR	sub_6000_9047
		LDA	#$16
		STA	banks_ids6+$16
		LDA	#$20
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$2A
		LDX	#$EE
		LDY	#$9A		; 9aee
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h
		LDA	#$22
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$6B
		LDX	#$2D
		LDY	#$9B		; 9b2d
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h
		LDX	#<text_d7a0
		LDY	#>text_d7a0
		LDA	#3
		JSR	write_some_text_to_vram
		LDX	#$12
		JSR	load_attributes
		LDA	#6
		STA	banks_ids6+6
		LDX	#<text_d806
		LDY	#>text_d806
		LDA	#1
		JSR	write_some_text_to_vram
		LDA	#$F8
		STA	global_var7
		LDA	#$50
		STA	pal_reduce_value ; dec to color	value
		JSR	sub_6000_A1D2
		JMP	set_previous_bank_as_0
; End of function first_load


; =============== S U B	R O U T	I N E =======================================


sub_6000_A1D2:				; ...
		LDX	#0
		LDY	#$C7

loc_6000_A1D6:				; ...
		TYA
		STA	sprite15_adress,X
		CLC
		ADC	#$E
		STA	Sprites_Adress,X
		LDA	#0
		STA	Sprites_Attrib,X
		STA	sprite15_attrib,X
		INY
		INX
		INX
		INX
		INX
		CPX	#$38
		BNE	loc_6000_A1D6
		JMP	loc_6000_A1F4

loc_6000_A1F4:
		LDX	#$70
		LDA	#$FF
		LDY	#$6F
; End of function sub_6000_A1D2


; =============== S U B	R O U T	I N E =======================================


sub_6000_A1FA:				; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		STY	tmp_var_16

loc_6000_A1FE:				; ...
		JSR	random6
		AND	#3
		EOR	#$23
		STA	Sprites_Attrib,X
		JSR	random6
		AND	#3
		CLC
		ADC	tmp_var_16
		STA	Sprites_Adress,X
		JSR	random6
		AND	tmp_var_15	;  / Object Counter / various tmp
		STA	Sprites_Ypos,X
		JSR	random6
		STA	Sprites_Xpos,X
		INX
		INX
		INX
		INX
		BNE	loc_6000_A1FE
		RTS
; End of function sub_6000_A1FA


; =============== S U B	R O U T	I N E =======================================


load_palettes_2_22_or_4_6:		; ...
		LDA	flag_boss_1
		CMP	#2
		BNE	loc_6000_A237
		LDA	#2
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	#$22
		JMP	loc_6000_A23D
; ---------------------------------------------------------------------------

loc_6000_A237:				; ...
		LDA	#4
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	#6

loc_6000_A23D:				; ...
		STA	tmp_var_16
		LDX	#0
		BEQ	pal_to_ppu_
; End of function load_palettes_2_22_or_4_6


; =============== S U B	R O U T	I N E =======================================


wait_vblank_bank6:			; ...
		LDA	PPU_STATUS	; PPU Status Register (R)
		BPL	wait_vblank_bank6
		RTS
; End of function wait_vblank_bank6


; =============== S U B	R O U T	I N E =======================================

; input	X - bkg	pal id,	Y - spr	pal id

load_palettes:				; ...
		STX	tmp_var_15	;  / Object Counter / various tmp
		STY	tmp_var_16
		LDA	PPU_STATUS	; PPU Status Register (R)
		JSR	wait_vblank_bank6
		LDX	#$2C

loc_6000_A255:				; ...
		DEX
		BNE	loc_6000_A255

pal_to_ppu_:				; ...
		LDA	#$3F
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		STX	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDY	tmp_var_15	;  / Object Counter / various tmp
		JSR	load_palette
		LDY	tmp_var_16
; End of function load_palettes


; =============== S U B	R O U T	I N E =======================================


load_palette:				; ...
		LDA	palettes_ptrs,Y
		STA	tmp_var_1D
		LDA	palettes_ptrs+1,Y
		STA	tmp_var_1E
		LDY	#0

loc_6000_A273:				; ...
		LDA	(tmp_var_1D),Y
		STA	palette_ram,X
		STA	PPU_DATA	; VRAM I/O Register (RW)
		INY
		INX
		CPY	#$10
		BNE	loc_6000_A273
		RTS
; End of function load_palette

; ---------------------------------------------------------------------------
palettes_ptrs:	.WORD byte_6000_A2CD	; ...
		.WORD byte_6000_A2DD
		.WORD byte_6000_A2ED
		.WORD byte_6000_A2FD
		.WORD byte_6000_A30D
		.WORD byte_6000_A31D
		.WORD byte_6000_A32D
		.WORD byte_6000_A33D
		.WORD byte_6000_A35D
		.WORD byte_6000_A34D
		.WORD byte_6000_A36D
		.WORD byte_6000_A37D
		.WORD byte_6000_A38D
		.WORD byte_6000_A39D
		.WORD byte_6000_A3AD
		.WORD byte_6000_A3BD
		.WORD byte_6000_A3CD
		.WORD palette_chars
		.WORD byte_6000_A3ED
		.WORD byte_6000_A40D
		.WORD byte_6000_A411
		.WORD byte_6000_A421
		.WORD byte_6000_A431
		.WORD byte_6000_A441
		.WORD byte_6000_A451
		.WORD byte_6000_A459
		.WORD byte_6000_A3FD
		.WORD byte_6000_A46D
		.WORD byte_6000_A47D
		.WORD byte_6000_A48D
		.WORD byte_6000_A491
		.WORD byte_6000_A499
		.WORD byte_6000_A45D
		.WORD byte_6000_A4A9
		.WORD byte_6000_A4B9
		.WORD byte_6000_A4C9
		.WORD byte_6000_A4D9
		.WORD byte_6000_A4E5
byte_6000_A2CD:	.BYTE $F, 5, $15, $34, $F, 6, $15, $34,	$F, 7, $15, $34, $F, 1,	$23, $34 ; ...
byte_6000_A2DD:	.BYTE $F, 7, $17, $27, $F, 8, $17, $10,	$F, 8, 9, 7, $F, 2, $12, $20 ; ...
byte_6000_A2ED:	.BYTE $F, 6, 6,	$16, $F, 7, 6, $16, $F,	7, 6, $16, $F, 2, $12, $20 ; ...
byte_6000_A2FD:	.BYTE $F, $F, 6, $16, $F, $F, $16, $26,	$F, $16, $26, $36, $F, $F, 0, $20 ; ...
byte_6000_A30D:	.BYTE $F, 7, 6,	$16, $F, 6, $16, $26, $F, 6, $15, $25, $F, 6, 5, $20 ; ...
byte_6000_A31D:	.BYTE $F, 7, $16, $26, $F, 5, $15, $25,	$F, 4, $14, $24, $F, $16, $26, $20 ; ...
byte_6000_A32D:	.BYTE $F, 3, $21, $31, $F, 3, $15, $25,	$F, $23, $13, 3, $F, $1C, $21, $31 ; ...
byte_6000_A33D:	.BYTE $F, 4, $14, $24, $F, $C, $1C, $2C, $F, $F, 4, $14, $F, $14, $24, $30 ; ...
byte_6000_A34D:	.BYTE $F, 6, $16, $26, $F, $14,	4, $24,	$F, 5, $16, $26, $F, 5,	4, $15 ; ...
byte_6000_A35D:	.BYTE $F, 7, 6,	$16, $F, $14, 4, $24, $F, 5, 6,	$16, $F, 5, 4, $15 ; ...
byte_6000_A36D:	.BYTE $F, 3, $13, $23, $F, 5, 4, $14, $F, 3, $1C, $2C, $F, 5, $15, $25 ; ...
byte_6000_A37D:	.BYTE $F, $16, $20, $12, $F, $12, $20, $16, $F,	$18, 8,	$17, $F, 7, $17, $28 ; ...
byte_6000_A38D:	.BYTE $F, $15, $25, $35, $F, 7,	5, $15,	$F, $15, $25, $20, $F, 9, $19, $2A ; ...
byte_6000_A39D:	.BYTE $F, 0, $10, $20, $F, 7, 5, $15, $F, $10, 0, $27, $F, 3, $13, $23 ; ...
byte_6000_A3AD:	.BYTE $F, $15, $25, $35, $F, 2,	$12, $22, $F, 8, $19, $29, $F, 6, 5, $15 ; ...
byte_6000_A3BD:	.BYTE $F, 7, $17, $27, $F, 2, $1C, $2C,	$F, 7, 5, $14, $F, 7, $16, $27 ; ...
byte_6000_A3CD:	.BYTE $F, 0, $10, $20, $F, 4, $14, $24,	$F, $C,	$1C, $F, $F, 2,	$12, $22 ; ...
palette_chars:	.BYTE $F, $F, $A, $1A, $F, $F, $17, $27, $F, $18, $28, $20, $F,	$F, $16, $26 ; ...
byte_6000_A3ED:	.BYTE $F, $19, 9, $28, $F, $1B,	$B, $27, $F, $15, 5, 0,	$F, $20, $10, 0	; ...
byte_6000_A3FD:	.BYTE $F, $19, 9, $28, $F, $1B,	$B, $27, $F, 0,	$10, $20, $F, 5, $15, $25 ; ...
byte_6000_A40D:	.BYTE $F, $20, $17, $28	; ...
byte_6000_A411:	.BYTE $F, 5, $22, $38, $F, 4, $13, $23,	$F, 5, $15, $25, $F, $20, $20, $20 ; ...
byte_6000_A421:	.BYTE $F, $20, $10, 0, $F, 5, $15, $25,	$F, $16, $26, $36, $F, 2, $12, $22 ; ...
byte_6000_A431:	.BYTE $F, $A, $1A, $10,	$F, $18, $28, $10, $F, $20, 0, $10, $F,	8, $18,	$10 ; ...
byte_6000_A441:	.BYTE $F, $20, $18, $28, $F, $A, $1A, $20, $F, $18, $28, $20, $F, $16, $26, $36	; ...
byte_6000_A451:	.BYTE $F, $C, $1C, $2C,	$F, $C,	$1C, $20 ; ...
byte_6000_A459:	.BYTE $F, $F, $2C, $3C	; ...
byte_6000_A45D:	.BYTE $F, $12, $22, $32, $F, $F, $A, $1A, $F, 8, $18, $28, $F, 6, $16, $26 ; ...
byte_6000_A46D:	.BYTE $F, $16, $26, $20, $F, $C, $1C, $20, $F, $C, $28,	$20, $F, 1, $22, $20 ; ...
byte_6000_A47D:	.BYTE $F, $F, $22, $20,	$F, $F,	$28, $20, $F, 5, $15, $20, $F, $16, $26, $20 ; ...
byte_6000_A48D:	.BYTE $F, 2, $22, $32	; ...
byte_6000_A491:	.BYTE $F, $C, $1C, $2C,	$F, 4, $14, $34	; ...
byte_6000_A499:	.BYTE $F, 0, $10, $20, $F, 9, $19, $28,	$F, 6, $28, $36, $F, 9,	$19, $20 ; ...
byte_6000_A4A9:	.BYTE $F, 6, $16, $26, $F, 0, $10, $20,	$F, 0, $10, $20, $F, 0,	$10, $20 ; ...
byte_6000_A4B9:	.BYTE $F, $18, $28, $20, $F, $A, $18, $28, $F, $A, $1A,	$2A, $F, $1A, $28, $20 ; ...
byte_6000_A4C9:	.BYTE $F, $C, $1C, $2C,	$F, 6, $16, $26, $F, 0,	$10, $20, $F, $11, $21,	$31 ; ...
byte_6000_A4D9:	.BYTE $F, $F, $15, $20,	$F, $F,	$25, $37, $F, 6, $26, $36 ; ...
byte_6000_A4E5:	.BYTE $F, 0, $10, $20, $F, 2, $16, $26,	$F, 6, $26, $36, $F, 2,	$22, $32 ; ...

; =============== S U B	R O U T	I N E =======================================


sub_6000_A4F5:				; ...
		LDA	Objects_X_speed
		BEQ	loc_6000_A518
		CMP	#$50
		BCC	loc_6000_A514
		LDA	#$F
		AND	FrameCounter
		BNE	loc_6000_A581
		LDA	palette_ram+$11
		SBC	#$10
		BCS	loc_6000_A50C
		LDA	#$F

loc_6000_A50C:				; ...
		STA	palette_ram+$11
		LDY	#3
		LDX	#$11
		BNE	loc_6000_A564

loc_6000_A514:				; ...
		LDA	pal_reduce_value ; dec to color	value
		BEQ	loc_6000_A581

loc_6000_A518:				; ...
		LDA	FrameCounter
		AND	#3
		BNE	loc_6000_A55E
		LDA	Objects_Zpos_L
		BNE	loc_6000_A54B
		LDA	Objects_Zpos_H
		CMP	#2
		BCC	loc_6000_A54B
		CMP	#4
		BCS	loc_6000_A54B
		LDX	#<text_d7ba
		LDY	#>text_d7ba
		CMP	#2
		BEQ	loc_6000_A53A
		LDX	#<text_d7de
		LDY	#>text_d7de

loc_6000_A53A:				; ...
		LDA	#$16
		STA	banks_ids6+$16
		LDA	#2
		JSR	write_some_text_to_vram
		LDA	#6
		STA	banks_ids6+6
		BEQ	loc_6000_A584

loc_6000_A54B:				; ...
		CMP	#$70
		BCC	loc_6000_A555
		LDA	pal_reduce_value ; dec to color	value
		ADC	#$F
		BNE	loc_6000_A55C

loc_6000_A555:				; ...
		LDA	pal_reduce_value ; dec to color	value
		SEC
		SBC	#$10
		BCC	loc_6000_A55E

loc_6000_A55C:				; ...
		STA	pal_reduce_value ; dec to color	value

loc_6000_A55E:				; ...
		LDY	Objects_Zpos_H
		LDX	byte_6000_A86F,Y

loc_6000_A564:				; ...
		LDA	#$3F
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		STX	PPU_ADDRESS	; VRAM Address Register	#2 (W2)

loc_6000_A56C:				; ...
		LDA	palette_ram,X
		SEC
		SBC	pal_reduce_value ; dec to color	value
		BCS	loc_6000_A575
		LDA	#$F

loc_6000_A575:				; ...
		STA	PPU_DATA	; VRAM I/O Register (RW)
		INX
		CPX	#$10
		BCC	loc_6000_A56C
		CPY	#4
		BCC	loc_6000_A584

loc_6000_A581:				; ...
		JSR	sub_6000_91EF

loc_6000_A584:				; ...
		LDA	#0
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		LDY	Objects_Zpos_H
		CPY	#1
		BNE	loc_6000_A5A8
		LDA	#$16
		STA	banks_ids6+$16
		LDA	#$60
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		LDA	ppu_ctrl2_val
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		LDY	#2
		LDX	#1
		JSR	wait6
		BEQ	loc_6000_A5BE

loc_6000_A5A8:				; ...
		LDA	byte_6000_A868,Y
		CMP	#$10
		BNE	loc_6000_A5B6
		ORA	#6
		STA	banks_ids6+$16
		LDA	Vscroll_value	; $00-$EF

loc_6000_A5B6:				; ...
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		LDA	ppu_ctrl2_val
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)

loc_6000_A5BE:				; ...
		LDA	Objects_Zpos_H
		CMP	#6
		BNE	sub_6000_A600
		LDA	Vscroll_value	; $00-$EF
		BMI	loc_6000_A5E8
		CMP	#$40
		BCC	loc_6000_A5E8
		LDA	Objects_X_speed
		CMP	#$6C
		BNE	sub_6000_A600
		LDA	FrameCounter
		EOR	#$40
		BNE	loc_6000_A5DC
		STA	jump_ptr_nmi+1	; поинтер на функцию во	время nmi

loc_6000_A5DC:				; ...
		LDA	#$16
		STA	banks_ids6+$16
		LDX	#$A
		LDY	#$C
		JSR	wait6

loc_6000_A5E8:				; ...
		JSR	sub_6000_A5F0
		LDA	#0
		JMP	loc_6000_A713
; End of function sub_6000_A4F5


; =============== S U B	R O U T	I N E =======================================


sub_6000_A5F0:				; ...
		LDY	Vscroll_value	; $00-$EF
		CPY	#80
		BEQ	locret_6000_A5FF
		INY
		CPY	#240
		BNE	loc_6000_A5FD
		LDY	#0

loc_6000_A5FD:				; ...
		STY	Vscroll_value	; $00-$EF

locret_6000_A5FF:			; ...
		RTS
; End of function sub_6000_A5F0


; =============== S U B	R O U T	I N E =======================================


sub_6000_A600:				; ...
		LDA	global_flags
		AND	#3
		BEQ	loc_6000_A609
		JMP	loc_6000_A6D8
; ---------------------------------------------------------------------------

loc_6000_A609:				; ...
		LDA	Objects_various_flags ;	для пушек ID прицепленного объекта
		BEQ	loc_6000_A628
		LDA	Objects_X_speed
		CMP	#$6C
		BEQ	sub_6000_A673
		LDA	#$16
		STA	banks_ids6+$16
		JSR	sub_6000_A5F0
		DEC	Objects_X_speed
		LDA	#2
		JMP	loc_6000_A6C9
; ---------------------------------------------------------------------------

loc_6000_A625:				; ...
		JMP	loc_6000_A6BB
; ---------------------------------------------------------------------------

loc_6000_A628:				; ...
		LDA	Objects_X_speed
		BNE	loc_6000_A625
		STA	ppu_ctrl1_val	;  > $80  кадр завершен
		LDY	#3
		LDX	#$64
		JSR	wait6
		LDA	#$16
		STA	banks_ids6+$16
		LDY	#$B
		JSR	wait6
		LDA	#6
		STA	banks_ids6+6
		INC	Objects_Zpos_L
		LDA	Objects_Zpos_L
		EOR	#$8C
		BNE	loc_6000_A669
		STA	Objects_Zpos_L
		INC	Objects_Zpos_H
		LDA	Objects_Zpos_H
		CMP	#4
		BNE	loc_6000_A669
		LDX	#$15
		LDA	#$18
		JSR	sub_6000_A66C
		LDA	#$F0
		STA	pal_reduce_value ; dec to color	value
		BNE	loc_6000_A6BB

loc_6000_A669:				; ...
		JMP	set_previous_bank_as_0
; End of function sub_6000_A600


; =============== S U B	R O U T	I N E =======================================


sub_6000_A66C:				; ...
		STA	snd_tmp_var_39
		LDY	#3
		JMP	jump_from_bank6
; End of function sub_6000_A66C


; =============== S U B	R O U T	I N E =======================================


sub_6000_A673:				; ...
		LDY	#0
		STY	Object_RamSlotID_tmp ; id saved	for objects functions
		LDX	#$F
		JSR	jump_from_bank6
		LDA	#6
		STA	banks_ids6+6
		LDA	#0
		STA	pal_reduce_value ; dec to color	value
		STA	pal_vram_upd_off ; BKG=$00, SPR=$10
		LDA	#0
		STA	jump_ptr_nmi+1	; поинтер на функцию во	время nmi
		JMP	set_previous_bank_as_0
; ---------------------------------------------------------------------------

loc_6000_A68E:				; ...
		LDA	FrameCounter
		AND	#3
		BNE	loc_6000_A69F
		LDA	pal_reduce_value ; dec to color	value
		CLC
		ADC	#$10
		STA	pal_reduce_value ; dec to color	value
		CMP	#$60
		BCS	loc_6000_A6B4

loc_6000_A69F:				; ...
		JSR	jump_to_bank0_func1
		LDA	#0
		STA	PPU_SCROLL_REG	; VRAM Address Register	#1 (W2)
		LDA	Vscroll_value	; $00-$EF
		JSR	write_scroll_by_V
		LDY	#$C
		JSR	wait6
		JMP	set_previous_bank_as_0
; ---------------------------------------------------------------------------

loc_6000_A6B4:				; ...
		LDX	#9
		LDY	#0
		JMP	jump_from_bank6
; ---------------------------------------------------------------------------

loc_6000_A6BB:				; ...
		INC	Objects_X_speed
		LDA	Objects_X_speed
		CMP	#8
		LDA	#$FF
		BCC	loc_6000_A6C9
		LDA	#$FD

loc_6000_A6C9:				; ...
		CLC
		ADC	global_var7
		CMP	#$FD
		BCS	loc_6000_A6D8
		CMP	#$20
		BCS	loc_6000_A6D6
		LDA	#$20

loc_6000_A6D6:				; ...
		STA	global_var7

loc_6000_A6D8:				; ...
		LDY	Objects_Zpos_H
		LDA	byte_6000_A876,Y
		ORA	#7
		TAY
		LDX	#3
		JSR	jump_from_bank6
		LDA	global_flags
		AND	#1
		STA	global_flags
		BNE	loc_6000_A751
		LDA	Objects_Zpos_H
		EOR	#6
		BEQ	loc_6000_A713
		LDA	Vscroll_value	; $00-$EF
		CMP	#80
		BEQ	loc_6000_A751
		LDA	Objects_various_flags ;	для пушек ID прицепленного объекта
		BNE	loc_6000_A707
		LDA	Objects_X_speed
		CMP	#$20
		BCC	loc_6000_A751

loc_6000_A707:				; ...
		LDA	Objects_cnt2
		ASL	A
		LDA	Objects_cnt3
		ROL	A
		BPL	loc_6000_A713
		LDA	#0

loc_6000_A713:				; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDX	#$70

loc_6000_A717:				; ...
		LDA	Objects_various_flags ;	для пушек ID прицепленного объекта
		BEQ	loc_6000_A739
		LDA	Objects_Zpos_H
		CMP	#6
		BEQ	loc_6000_A739
		LDA	Sprites_Ypos,X
		CMP	#$C0
		BCC	loc_6000_A731
		LDA	#$F8
		STA	Sprites_Ypos,X
		BNE	loc_6000_A73F

loc_6000_A731:				; ...
		LDA	Objects_X_speed
		AND	#1
		JMP	loc_6000_A73D
; ---------------------------------------------------------------------------

loc_6000_A739:				; ...
		LDA	FrameCounter
		AND	#7

loc_6000_A73D:				; ...
		BNE	loc_6000_A742

loc_6000_A73F:				; ...
		DEC	Sprites_Ypos,X

loc_6000_A742:				; ...
		LDA	Sprites_Xpos,X
		SEC
		SBC	tmp_var_15	;  / Object Counter / various tmp
		STA	Sprites_Xpos,X
		INX
		INX
		INX
		INX
		BNE	loc_6000_A717

loc_6000_A751:				; ...
		LDA	Objects_Zpos_H
		CMP	#6
		BNE	loc_6000_A767
		LDA	Objects_X_speed
		CMP	#$6C
		BEQ	loc_6000_A786
		LDA	Vscroll_value	; $00-$EF
		BMI	loc_6000_A786
		CMP	#64
		BCC	loc_6000_A786

loc_6000_A767:				; ...
		LDA	Objects_cnt3
		ASL	A
		ASL	A
		ASL	A
		ADC	#3
		LDY	Objects_various_flags ;	для пушек ID прицепленного объекта
		BEQ	loc_6000_A7A3
		CLC
		ADC	#8
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	Objects_Anim_Ptr ; оффсет чтения анимации
		BNE	loc_6000_A790
		INC	Objects_X_speed
		LDY	Objects_cnt3
		BNE	loc_6000_A78C

loc_6000_A786:				; ...
		LDA	Objects_Xpos_L
		JMP	loc_6000_A80A
; ---------------------------------------------------------------------------

loc_6000_A78C:				; ...
		LDA	#4
		BNE	loc_6000_A7A3

loc_6000_A790:				; ...
		DEC	Objects_Anim_Ptr ; оффсет чтения анимации
		LDA	Objects_cnt2
		SEC
		SBC	tmp_var_15	;  / Object Counter / various tmp
		STA	Objects_cnt2
		BCS	loc_6000_A7AE
		DEC	Objects_cnt3
		BCC	loc_6000_A7AE

loc_6000_A7A3:				; ...
		ADC	Objects_cnt2
		STA	Objects_cnt2
		BCC	loc_6000_A7AE
		INC	Objects_cnt3

loc_6000_A7AE:				; ...
		LDA	Objects_cnt2
		CLC
		ADC	Objects_X_sub
		STA	Objects_X_sub
		LDA	Objects_cnt3
		ADC	Objects_Xpos_L
		BCC	loc_6000_A80A
		LDY	Objects_various_flags ;	для пушек ID прицепленного объекта
		BNE	loc_6000_A80A
		INC	Objects_various_flags ;	для пушек ID прицепленного объекта
		LDA	#$84
		STA	Objects_Anim_Ptr ; оффсет чтения анимации
		LDA	#0
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		JSR	clear_tilemaps
		LDX	#6
		LDY	#5
		JSR	jump_from_bank6
		LDX	#$12
		LDY	#0
		JSR	jump_from_bank6
		LDX	#0
		LDY	#$2A
		JSR	load_palettes	; input	X - bkg	pal id,	Y - spr	pal id
		INC	Objects_Zpos_H

loc_6000_A7F0:				; ...
		LDA	#194
		STA	Vscroll_value	; $00-$EF
		LDY	#7
		LDX	#3
		JSR	jump_from_bank6
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDA	#$10
		STA	ppu_ctrl1_val	;  > $80  кадр завершен
		LDA	#0
		STA	Objects_Xpos_L
		JMP	set_previous_bank_as_0
; ---------------------------------------------------------------------------

loc_6000_A80A:				; ...
		STA	Objects_Xpos_L
		LDY	Objects_Zpos_H
		CPY	#6
		BNE	loc_6000_A816
		EOR	#$FF

loc_6000_A816:				; ...
		STA	tmp_var_17
		LDA	#6
		JSR	goto_bank3_upd_play_music
		LDA	ppu_ctrl1_val	;  > $80  кадр завершен
		ORA	#$80
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDA	#0
		LDX	#$C7
		STX	tmp_var_16
		TAX
		TAY
		STA	tmp_var_15	;  / Object Counter / various tmp

loc_6000_A82E:				; ...
		TYA
		CLC
		ADC	tmp_var_17
		STA	sprite15_Xpos,X
		STA	Sprites_Xpos,X
		LDA	#$F8
		STA	sprite15_Ypos,X
		BCS	loc_6000_A84B
		LDA	tmp_var_15	;  / Object Counter / various tmp
		ADC	Objects_X_speed
		ADC	#$50
		STA	sprite15_Ypos,X
		ADC	#$F

loc_6000_A84B:				; ...
		STA	Sprites_Ypos,X
		INX
		INX
		INX
		INX
		LDA	tmp_var_15	;  / Object Counter / various tmp
		EOR	#8
		STA	tmp_var_15	;  / Object Counter / various tmp
		AND	#8
		BNE	loc_6000_A82E
		TYA
		CLC
		ADC	#8
		TAY
		EOR	#$38
		BNE	loc_6000_A82E
		JMP	set_previous_bank_as_0
; ---------------------------------------------------------------------------
byte_6000_A868:	.BYTE $D0, $60,	$E0, $E0, $11, $10, 0 ;	...
byte_6000_A86F:	.BYTE 0, 0, $C,	$C, $C,	0, 0 ; ...
byte_6000_A876:	.BYTE 0, 0, 0, 0, 0, $10, 0 ; ...
; ---------------------------------------------------------------------------

set_previous_bank_as_0:			; ...
		LDA	#0
		STA	previous_bankID
		RTS
; End of function sub_6000_A673

; ---------------------------------------------------------------------------
		RTS			; unused

; =============== S U B	R O U T	I N E =======================================


jump_to_bank0_func1:			; ...
		LDX	#3
		LDY	#0
		JMP	jump_from_bank6
; End of function jump_to_bank0_func1


; =============== S U B	R O U T	I N E =======================================


sub_6000_A88A:				; ...
		JSR	game_end_event_starter
		JSR	clear_tilemaps
		JSR	clear_sprites
		LDA	#4
		JSR	sub_6000_DB9B
		LDA	#6
		JSR	sub_6000_DB9B
		LDA	#$30
		JSR	sub_6000_DB92
		LDA	#$20
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDX	#0
		STX	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDY	#4
		LDA	#$F7

loc_6000_A8B0:				; ...
		STA	PPU_DATA	; VRAM I/O Register (RW)
		DEX
		BNE	loc_6000_A8B0
		DEY
		BNE	loc_6000_A8B0
		LDA	#$14
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDY	#$20
		STY	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$67
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$FC
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	#$F9
		LDX	#$10

loc_6000_A8D1:				; ...
		STA	PPU_DATA	; VRAM I/O Register (RW)
		DEX
		BNE	loc_6000_A8D1
		LDA	#$FE
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STY	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$76
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$FD
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	#$FA
		LDX	#$10

loc_6000_A8ED:				; ...
		STA	PPU_DATA	; VRAM I/O Register (RW)
		DEX
		BNE	loc_6000_A8ED
		LDA	#$FF
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	#$90
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDA	#$22
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$A1
		LDX	#$39
		LDY	#$96		; 9639
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h
		LDA	#$20
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$68
		LDX	#$77
		LDY	#$94		; 9477
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h
		LDX	#$36
		LDY	#$38
		JSR	load_palettes	; input	X - bkg	pal id,	Y - spr	pal id
		LDX	#$58
		JSR	load_attributes
		LDA	#$FF
		STA	Level_ID
		JSR	loc_6000_E584
		JMP	set_previous_bank_as_0
; End of function sub_6000_A88A

; ---------------------------------------------------------------------------

loc_6000_A92F:				; ...
		LDA	#$60
		STA	global_var_cnt?
		RTS

; =============== S U B	R O U T	I N E =======================================


sub_6000_A934:				; ...
		LDX	global_var2
		LDY	global_var1
		LDA	(timer_cont_scrn_sec),Y
		CMP	#$FD
		BEQ	loc_6000_A92F
		CMP	#$80
		BCC	loc_6000_A982
		AND	#$1F
		STA	tmp_var_16
		LDA	#$2A
		CPX	#$2B
		BCC	loc_6000_A97C
		LDA	#$44
		CPX	#$45
		BCC	loc_6000_A97C
		LDA	#$5E
		CPX	#$5F
		BCC	loc_6000_A97C
		LDA	#$78
		CPX	#$79
		BCC	loc_6000_A97C
		LDA	#$92
		CPX	#$93
		BCC	loc_6000_A97C
		LDY	#$2A
		LDX	#$10

loc_6000_A968:				; ...
		LDA	scroll_tilemap_buff,Y
		CPY	#$AC
		BCC	loc_6000_A971
		LDA	#0

loc_6000_A971:				; ...
		STA	scroll_tilemap_buff,X
		INX
		INY
		CPX	#$AC
		BNE	loc_6000_A968
		LDA	#$91

loc_6000_A97C:				; ...
		ADC	tmp_var_16
		STA	global_var2
		BNE	loc_6000_A991

loc_6000_A982:				; ...
		SEC
		SBC	#$20
		TAY
		LDA	byte_6000_DA8B,Y
		CLC
		ADC	#$C8
		STA	scroll_tilemap_buff,X
		INC	global_var2

loc_6000_A991:				; ...
		INC	global_var1
		RTS
; End of function sub_6000_A934


; =============== S U B	R O U T	I N E =======================================


sub_6000_A994:				; ...
		LDX	#0
		LDA	#$70
		STA	tmp_var_17
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		AND	#$40
		STA	tmp_var_90	; obj_dir_tmp (для спрайтов - направление объекта)
		STA	tmp_var_1B
		LDA	#$A4
		STA	tmp_var_8c
		LDY	#8
		JMP	some_sprites_ptr
; End of function sub_6000_A994


; =============== S U B	R O U T	I N E =======================================


sub_6000_A9AB:				; ...
		LDA	global_var_cnt?
		BNE	locret_6000_A9B8
		LDA	FrameCounter
		AND	#1
		BNE	locret_6000_A9B8
		JSR	sub_6000_A934

locret_6000_A9B8:			; ...
		RTS
; End of function sub_6000_A9AB


; =============== S U B	R O U T	I N E =======================================


sub_6000_A9B9:				; ...
		JSR	sub_6000_A9AB
		LDX	#$F

loc_6000_A9BE:				; ...
		JSR	random6
		STA	status_bar_buff+3,X
		DEX
		BPL	loc_6000_A9BE
		LDX	#0
		STX	tmp_var_90	; obj_dir_tmp (для спрайтов - направление объекта)
		STX	tmp_var_1B
		LDA	cont_screen_cnt
		BPL	loc_6000_A9ED
		LDA	#$50
		STA	tmp_var_17
		LDA	#$3A
		STA	tmp_var_8c
		LDY	#7
		JSR	some_sprites_ptr
		LDA	FrameCounter
		AND	#$58
		BNE	loc_6000_A9ED
		LDY	#$C6
		STY	sprite6_adress
		INY
		STY	sprite7_adress

loc_6000_A9ED:				; ...
		LDA	#$9C
		STA	tmp_var_17
		LDA	#$64
		STA	tmp_var_8c
		LDA	FrameCounter
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		TAY
		LDA	byte_6000_AA48,Y
		TAY
		JSR	some_sprites_ptr
		LDA	#$84
		STA	tmp_var_17
		LDA	#$5C
		STA	tmp_var_8c
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		AND	#$20
		BEQ	loc_6000_AA15
		LDA	FrameCounter_Even ; счетчик каждого второго кадра
		AND	#4

loc_6000_AA15:				; ...
		LSR	A
		LSR	A
		ADC	#3
		TAY
		JSR	some_sprites_ptr
		LDA	FrameCounter
		CMP	#$C0
		BCS	loc_6000_AA3A
		AND	#$42
		BEQ	loc_6000_AA3A
		LDA	#$5C
		STA	tmp_var_17
		LDA	#$8A
		STA	tmp_var_8c
		LDA	FrameCounter
		AND	#1
		CLC
		ADC	#5
		TAY
		JSR	some_sprites_ptr

loc_6000_AA3A:				; ...
		JMP	hide_sprites_by_Y
; End of function sub_6000_A9B9


; =============== S U B	R O U T	I N E =======================================


some_sprites_ptr:			; ...
		LDA	unk1_ptr_L,Y
		STA	tmp_var_19
		LDA	unk1_ptr_H,Y
		JMP	read_sprites_from_ptr
; End of function some_sprites_ptr

; ---------------------------------------------------------------------------
byte_6000_AA48:	.BYTE	0,  0,	0,  1,	0,  0,	0,  0,	1,  1,	1,  2,	2,  2,	2,  2 ;	...
; unk1_ptr_L
unk1_ptr_L:
 .DL #byte_6000_DE93,#byte_6000_DEB0,#byte_6000_DEC7,#byte_6000_DEDE
 .DL #byte_6000_DEE7,#byte_6000_DEF0,#byte_6000_DF1B,#byte_6000_DF46
 .DL #byte_6000_DFB6,#byte_6000_DFB6,#byte_6000_E16C,#byte_6000_E189
unk1_ptr_H:
 .DH #byte_6000_DE93,#byte_6000_DEB0,#byte_6000_DEC7,#byte_6000_DEDE
 .DH #byte_6000_DEE7,#byte_6000_DEF0,#byte_6000_DF1B,#byte_6000_DF46
 .DH #byte_6000_DFB6,#byte_6000_DFB6,#byte_6000_E16C,#byte_6000_E189


; =============== S U B	R O U T	I N E =======================================


sub_6000_AA70:				; ...
		JSR	clear_tilemaps
		JSR	clear_sprites
		LDA	#$44
		JSR	sub_6000_DB92
		LDA	tmp_var_8d
		ASL	A
		ADC	#8
		JSR	sub_6000_DB9B
		LDA	#$10
		JSR	sub_6000_DB9B
		LDA	#$12
		JSR	sub_6000_DB9B
		LDY	tmp_var_8d
		LDA	#$20
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDX	some_tmap_ptr_l,Y
		LDA	some_tmap_ptr_h,Y ; e1a2
					; e270
					; e270
		TAY
		LDA	#$44
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h
		LDY	tmp_var_8d
		CPY	#1
		BEQ	loc_6000_AAAA
		CPY	#2
		BNE	loc_6000_AABB

loc_6000_AAAA:				; ...
		LDA	#$21
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDX	some_tmap2_ptr_l,Y
		LDA	some_tmap2_ptr_h,Y ; e4a0
					; e2dd
					; e388
		TAY
		LDA	#$24
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h

loc_6000_AABB:				; ...
		LDY	tmp_var_8d
		LDA	byte_6000_AB2F,Y
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	byte_6000_AB33,Y
		LDX	#$D4
		LDY	#$94		; 94d4
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h
		LDX	#$3A
		LDY	#$22
		JSR	load_palettes	; input	X - bkg	pal id,	Y - spr	pal id
		LDX	#$6A
		JSR	load_attributes2
		LDA	#$74
		JSR	loc_6000_E5A4
		LDX	#<text_d883
		LDY	#>text_d883
		LDA	#1
		JSR	write_some_text_to_vram
		LDA	Levels_passed_cnt
		BNE	loc_6000_AAED
		LDA	#1

loc_6000_AAED:				; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		CMP	#$A
		BCC	loc_6000_AAFB
		SBC	#$A
		CLC
		LDY	#2
		STY	PPU_DATA	; VRAM I/O Register (RW)

loc_6000_AAFB:				; ...
		ADC	#1
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	#$D
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	tmp_var_15	;  / Object Counter / various tmp
		ASL	A
		STA	tmp_var_15	;  / Object Counter / various tmp
		ASL	A
		ASL	A
		ASL	A
		ADC	tmp_var_15	;  / Object Counter / various tmp
		SBC	#$11
		TAY
		LDA	#$A0
		STA	byte_0_712,Y
		LDA	#0
		STA	tmp_var_19
		LDA	#1
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	#7
		STA	tmp_var_1A
		JSR	loc_6000_D781
		JMP	set_previous_bank_as_0
; End of function sub_6000_AA70

; ---------------------------------------------------------------------------
byte_6000_AB2F:	.BYTE $20, $22,	$21, $20 ; ...
byte_6000_AB33:	.BYTE $B1, $45,	$25, $65, $F1, $85, $65, $A5 ; ...

; =============== S U B	R O U T	I N E =======================================


sub_6000_AB3B:				; ...
		JSR	game_end_event_starter
		JSR	clear_tilemaps
		JSR	clear_sprites
		LDA	#$14
		JSR	sub_6000_DB9B
		LDA	#$16
		JSR	sub_6000_DB9B
		LDY	#4
		LDA	#$1A
		JSR	sub_6000_DB94
		LDA	#$10
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDA	#$16
		STA	banks_ids6+$16
		LDA	#$20
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$84
		LDX	#$15
		LDY	#$95		; 9515
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h
		LDA	#$90
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDX	#$3C
		LDY	#$22
		JSR	load_palettes	; input	X - bkg	pal id,	Y - spr	pal id
		LDA	#$E6
		STA	object3_X_shadow
		LDA	#$80
		STA	object3_Y_shadow
		LDA	#2
		LDY	#$24
		JMP	loc_6000_9D08
; End of function sub_6000_AB3B


; =============== S U B	R O U T	I N E =======================================


sub_6000_AB8A:				; ...
		JSR	game_end_event_starter
		JSR	clear_tilemaps
		JSR	clear_sprites
		LDA	#8
		LDY	#4
		JSR	sub_6000_DB94
		LDA	#$44
		JSR	sub_6000_DB92
		LDA	#$18
		JSR	sub_6000_DB9B
		LDX	#<text_d8e4
		LDY	#>text_d8e4
		LDA	#3
		JSR	write_some_text_to_vram
		LDX	#$78
		JSR	load_attributes
		LDA	#$10
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDA	#$16
		STA	banks_ids6+$16
		LDA	#$20
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$C2
		LDX	#$A9
		LDY	#$95		; 95a9
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h
		LDA	#$90
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDX	#$42
		LDY	#$22
		JSR	load_palettes	; input	X - bkg	pal id,	Y - spr	pal id
		LDA	#1
		LDY	#$24
		JSR	loc_6000_9D08
		LDA	#3
		STA	object2_some_anim
		JMP	set_previous_bank_as_0
; End of function sub_6000_AB8A


; =============== S U B	R O U T	I N E =======================================


sub_6000_ABE5:				; ...
		JSR	game_end_event_starter
		JSR	clear_tilemaps
		JSR	clear_sprites
		LDA	#$1A
		JSR	sub_6000_DB9B
		LDA	#4
		JSR	sub_6000_DB92
		LDX	#$82
		JSR	load_attributes
		LDX	#$3E
		LDY	#$22
		JSR	load_palettes	; input	X - bkg	pal id,	Y - spr	pal id
		LDA	#$20
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$AA		; ??
		LDA	#$A8		; ??
		LDX	#$D1
		LDY	#$95		; 95d1
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h
		LDX	#<text_d8d4
		LDY	#>text_d8d4
		LDA	#1
		JSR	write_some_text_to_vram
		LDA	#$FF
		STA	Level_ID
		JMP	set_previous_bank_as_0
; End of function sub_6000_ABE5


; =============== S U B	R O U T	I N E =======================================


sub_6000_AC24:				; ...
		JSR	game_end_event_starter
		LDA	#0
		STA	pal_reduce_value ; dec to color	value
		JSR	clear_tilemaps
		JSR	clear_sprites
		LDA	#$A
		LDY	#4
		JSR	sub_6000_DB94
		LDA	#4
		JSR	sub_6000_DB92
		LDA	#$1C
		JSR	sub_6000_DB9B
		LDA	#$10
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDA	#$16
		STA	banks_ids6+$16
		JSR	sub_6000_AC9E
		LDX	#<text_d9d8
		LDY	#>text_d9d8
		LDA	#3
		JSR	write_some_text_to_vram
		LDA	#6
		STA	banks_ids6+6
		LDA	#$90
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		JSR	sub_6000_AC9E
		LDX	#<text_d933
		LDY	#>text_d933
		LDA	#4
		JSR	write_some_text_to_vram
		LDA	#6
		STA	Objects_Zpos_H
		LDA	#$4C
		STA	Objects_X_speed
		LDA	#$22
		STA	global_var7
		LDA	#$40
		STA	Objects_cnt2
		LDA	#8
		STA	Objects_cnt3
		LDA	#$84
		STA	Objects_Anim_Ptr ; оффсет чтения анимации
		LDA	#3
		STA	RandomValue_1
		STA	RandomValue_3
		STA	RandomValue_4
		JSR	sub_6000_A1D2
		LDA	#$C
		JSR	sub_6000_9047
		JMP	loc_6000_A7F0
; End of function sub_6000_AC24


; =============== S U B	R O U T	I N E =======================================


sub_6000_AC9E:				; ...
		LDX	#$7E
		JSR	load_attributes
		LDX	#$28
		LDY	#$2A
		JSR	load_palettes	; input	X - bkg	pal id,	Y - spr	pal id
		LDA	#$22
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$CE
		LDX	#$11
		LDY	#$96		; 9611
		JMP	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h
; End of function sub_6000_AC9E


; =============== S U B	R O U T	I N E =======================================


continue_game_end:			; ...
		JSR	game_end_event_starter
		JSR	clear_tilemaps
		JSR	clear_sprites
		LDA	#0
		JSR	sub_6000_DAE5
		LDA	#$30
		JSR	sub_6000_DB92
		LDX	#$9A
		JSR	load_attributes
		LDX	#$44
		LDY	#$22
		JSR	load_palettes	; input	X - bkg	pal id,	Y - spr	pal id
		LDA	#$20
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$88
		LDX	#$64
		LDY	#$96		; 9664
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h
		LDA	#0
		STA	global_var3
		LDA	#1
		STA	timer_cont_scrn_sec
		JSR	loc_6000_E584
		LDA	#$FF
		STA	Level_ID
		JMP	set_previous_bank_as_0
; End of function continue_game_end


; =============== S U B	R O U T	I N E =======================================


sub_6000_ACF7:				; ...
		JSR	game_end_event_starter
		JSR	clear_tilemaps
		JSR	clear_sprites
		LDA	#$10
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDA	#$16
		STA	banks_ids6+$16
		LDA	#$20
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#0
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#2
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDY	#$40

loc_6000_AD1A:				; ...
		LDX	#$FD

loc_6000_AD1C:				; ...
		STX	PPU_DATA	; VRAM I/O Register (RW)
		INX
		BNE	loc_6000_AD1C
		DEY
		BNE	loc_6000_AD1A
		DEC	tmp_var_15	;  / Object Counter / various tmp
		BNE	loc_6000_AD1A
		LDX	#$40
		LDA	#$AA

loc_6000_AD2D:				; ...
		STA	PPU_DATA	; VRAM I/O Register (RW)
		DEX
		BNE	loc_6000_AD2D
		LDA	#6
		STA	banks_ids6+6
		LDA	#$90
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDA	#2
		JSR	sub_6000_DAE5
		LDA	#4
		JSR	sub_6000_DAE5
		LDA	#$30
		JSR	sub_6000_DB92
		LDX	#0
		JSR	load_attributes2
		LDX	#$46
		LDY	#$48
		JSR	load_palettes	; input	X - bkg	pal id,	Y - spr	pal id
		LDA	#$20
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$84
		LDX	#$C2
		LDY	#$96		; 96c2
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h
		LDA	#0
		STA	global_var3
		STA	tmp_var_1E
		LDA	#2
		STA	timer_cont_scrn_sec
		JSR	loc_6000_E584
		LDA	#$FF
		STA	Level_ID
		JMP	set_previous_bank_as_0
; End of function sub_6000_ACF7


; =============== S U B	R O U T	I N E =======================================


sub_6000_AD7A:				; ...
		JSR	game_end_event_starter
		JSR	clear_tilemaps
		JSR	clear_sprites
		LDA	#6
		JSR	sub_6000_DAE5
		LDA	#$30
		JSR	sub_6000_DB92
		LDA	#$3A
		JSR	sub_6000_DB92
		LDX	#$38
		JSR	load_attributes2
		LDX	#$4A
		LDY	#$48
		JSR	load_palettes	; input	X - bkg	pal id,	Y - spr	pal id
		LDA	#$20
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$84
		LDX	#$3A
		LDY	#$97		; 973a
		JSR	unpack_tilemap	; Input-A: VRam_adr_low, X-ptr_l, Y-ptr_h
		LDA	#0
		STA	global_var3
		STA	tmp_var_1E
		LDA	#3
		STA	timer_cont_scrn_sec
		LDA	game_end_caller_var
		BEQ	loc_6000_ADBE
		LDA	#$1C
		BNE	loc_6000_ADCE

loc_6000_ADBE:				; ...
		LDA	Levels_passed_cnt
		BEQ	loc_6000_ADF5
		BMI	loc_6000_ADF5
		LDA	Lives_Player1	; кол-во жизней	(сердечек)
		BPL	loc_6000_ADDA
		LDA	Lives_Player2	; кол-во жизней	(сердечек)
		BPL	loc_6000_ADDA
		LDA	#$1B

loc_6000_ADCE:				; ...
		STA	global_var3
		JSR	random6
		AND	#3
		STA	timer_cont_scrn_sec
		JMP	loc_6000_ADEC
; ---------------------------------------------------------------------------

loc_6000_ADDA:				; ...
		LDA	#$80
		STA	cont_screen_cnt
		JSR	random6
		AND	#3
		STA	timer_cont_scrn_sec
		LDA	Levels_passed_cnt
		ASL	A
		SBC	#1
		STA	global_var3

loc_6000_ADEC:				; ...
		JSR	loc_6000_E584
		LDA	#$2A
		STA	global_var2
		BNE	loc_6000_ADF8

loc_6000_ADF5:				; ...
		JSR	loc_6000_E584

loc_6000_ADF8:				; ...
		LDX	#0
		STX	tmp_var_90	; obj_dir_tmp (для спрайтов - направление объекта)
		STX	tmp_var_1B
		LDA	#$80
		STA	tmp_var_17
		LDA	#$77
		STA	tmp_var_8c
		LDY	#$A
		JSR	some_sprites_ptr
		JSR	sub_6000_AE15
		LDA	#$FF
		STA	Level_ID
		JMP	set_previous_bank_as_0
; End of function sub_6000_AD7A


; =============== S U B	R O U T	I N E =======================================


sub_6000_AE15:				; ...
		LDA	FrameCounter
		LSR	A
		LSR	A
		TAY
		LDA	byte_6000_AE43,Y
		BEQ	loc_6000_AE23
		CMP	#3
		BNE	loc_6000_AE29

loc_6000_AE23:				; ...
		LDX	global_var_cnt?
		BEQ	loc_6000_AE29
		LDA	#5

loc_6000_AE29:				; ...
		ASL	A
		ASL	A
		STA	tmp_var_15	;  / Object Counter / various tmp
		ASL	A
		ADC	tmp_var_15	;  / Object Counter / various tmp
		TAY
		LDX	#0

loc_6000_AE33:				; ...
		LDA	byte_6000_E124,Y
		STA	Sprites_Adress,X
		INY
		INX
		INX
		INX
		INX
		CPX	#$30
		BNE	loc_6000_AE33
		RTS
; End of function sub_6000_AE15

; ---------------------------------------------------------------------------
byte_6000_AE43:	.BYTE 5, 5, 0, 0, 3, 5,	0, 5, 3, 5, 3, 0, 5, 3,	0, 5, 5, 2, 2, 3, 5, 0,	5, 3, 5, 0, 5, 0, 5, 3,	5, 2, 2, 5, 5 ;	...
		.BYTE 3, 0, 3, 0, 3, 0,	3, 0, 5, 5, 5, 4, 4, 4,	4, 4, 4, 4, 4, 5, 1, 1,	1, 1, 1, 1, 1, 1, 1, 1,	1, 1, 1, 1, 1

 include data\spr_lists1.asm

; stick_spr_posX
rash_sprcfg_ptr_l:.BYTE	$38, $32, $53, $15, $F4, $D5, $B8, $9B,	$7E, $38, $5B, $76, $95, $95, $AE, $D1,	$F0, $11, $30, $53, $72, $91, $AE ; ...
		.BYTE $1A, $CF,	$F2, $13, $40, $5D, $82, $A1, $CC, $F1,	$12, $35, $54, $77, $98, $BD, $E0, $FF,	$1A, $3D, $5C, $7F, $9E
		.BYTE $C3, $E8,	7, $26,	$4B, $6C, $91, $AC, $CF, $F0, $11, $48,	$68, $7F, $9A, $59, $59, $20, $33, $B1,	$C8, $EB, 8
		.BYTE $27, $8E,	$4A, $4A, $4A, $4A, $69, $B3, $E2, $D, $D, $32,	$55, $7A, $9F, $C0, $E3, $F8, 7, $2A, $47, $62,	$83
		.BYTE $94, $A5,	$BE, $E3, 6, $25, $4A, $65, $80, $A6, $CF, $EC,	$38, $38, $38, $38, $38, $38, $38, $38,	$38, $38, $38
		.BYTE $38, $A5,	$BA, $CF, $E6, $FD, $1A, $37, $57, $77,	$9C, $C1, $F6, $38, $B6, $E5, $7B, $22,	$B4, $F2
obj_sprcfg_ptr_l:.BYTE $38, $22, $2F, $4C, $67,	$84, $A1, $C2, $E3, $FE, $19, $32, $4B,	$94, $9B, $A2, $AF, $C6, $D6, $46, $52,	$5E, $65 ; ...
		.BYTE $6C, $A2,	$73, $73, $86, $89, $A0, $B5, $CC, $E5,	$F4, 5,	$18, $47, $5B, $A6, $CE, $F3, $2B, $18,	$35, $4A, $4A
		.BYTE $61, $61,	$A2, $C0, $95, $CA, $D7, $E4, $F1, 1, $31, $6F,	$87, $9F, $9F, $9F, $60, $8B, $51, $9B,	$D0, $20, $30
		.BYTE $39, $49,	$5F, $7B, $9D, $C5, $91, $FD, $AC, $D4,	$7C, $3F, $48, $57, $64, $73, $AB, $75,	$3B, $D4, $E7, $F4, 1
		.BYTE $E, $1B, $2A, $3D, $46, $B1, $65,	$8E, $F5, $FA, $61, 5, $12, $2E, $4A, $35, $5E,	$5E, $96, $D1, $E8, 3, $20, $2B
		.BYTE $40, $54,	$DD, $EC, $61, $68, $6F, $78, $85, $9A,	$BB, $BB, $B1, $E3, $20, $FD, $8A, $F0,	$22, $3F, $56, 9, $E4
		.BYTE $69, $9B,	$8A, $E2, $2B, $6E, $F0, $BD, $57, $7D,	$A3, $EE, $19, $EF, $C9, $DC, $D4, $EE,	8, $1D,	$32, $43, $56
		.BYTE $6B, $88,	$99, $AA, $B5, $BE, $CB, $DA, $EB, $FA,	$8A, $AC, $F, $1C, $29,	$36, $D2, $D9, $4E, $43, $4F, $6A, $83
		.BYTE $9E, $C9,	$EE, $2A, $43, 1, 0, 2,	$22, $88, $92, $9C, 8, $11, $C3, $DE, $F9, $A, $3E, $5C, $6D, $4B, $84,	$AC
		.BYTE $D8, 4, $25, $1C,	$13, $47, $62, $2E, $7E, $73, $8B, $9B,	$A5, $BB, $AC, $CE, $E1, $F7, 2, $D, $1A, $2A, $52, $67
		.BYTE $7E, $9B,	$AF, $C3, $D8, $F5, 6, $39, $6A, 7, $93, $BC, $E9, $4D,	$24, $71, $B4, $B2, $2B
rash_sprcfg_ptr_h:.BYTE	$C8, $C9, $C9, $C9, $C8, $C8, $C8, $C8,	$C8, $C8, $C8, $C9, $C9, $C9, $C9, $C9,	$C9, $CA, $CA, $CA, $CA, $CA, $CA ; ...
		.BYTE $CD, $CA,	$CA, $CB, $CB, $CB, $CB, $CB, $CB, $CB,	$CC, $CC, $CC, $CC, $CC, $CC, $CC, $CC,	$CD, $CD, $CD, $CD, $CD
		.BYTE $CD, $CD,	$CE, $CE, $CE, $CE, $CE, $CE, $CE, $CE,	$CF, $CF, $CF, $CF, $CF, $CF, $CF, $CF,	$CF, $CF, $CF, $CF, $D0
		.BYTE $D0, $D0,	$D0, $D0, $D0, $D0, $D0, $D0, $D0, $D1,	$D1, $D1, $D1, $D1, $D1, $D1, $D1, $D1,	$D2, $D2, $D2, $D2, $D2
		.BYTE $D2, $D2,	$D2, $D2, $D3, $D3, $D3, $D3, $D3, $D3,	$D3, $D3, $C8, $C8, $C8, $C8, $C8, $C8,	$C8, $C8, $C8, $C8, $C8
		.BYTE $C8, $C3,	$C3, $C3, $C3, $C3, $C4, $C4, $C4, $C4,	$C4, $C4, $C4, $C8, $DF, $DF, $E0, $E0,	$E0, $E0
obj_sprcfg_ptr_h:.BYTE $C8, $DC, $DC, $DC, $DC,	$DC, $DC, $DC, $DC, $DC, $DD, $DD, $DD,	$DD, $DD, $DD, $DD, $DD, $DD, $DE, $DE,	$DE, $DE ; ...
		.BYTE $DE, $DD,	$DE, $DE, $DE, $AF, $AF, $AF, $AF, $AF,	$AF, $B0, $B0, $B0, $B0, $B0, $B0, $B0,	$B0, $B1, $B1, $B1, $B1
		.BYTE $B1, $B1,	$B1, $B1, $B1, $B1, $B1, $B1, $B1, $B2,	$B2, $B0, $B0, $B0, $B0, $B0, $DD, $DD,	$B2, $B2, $B2, $B3, $B3
		.BYTE $B3, $B3,	$B3, $B3, $B3, $B3, $B4, $B3, $B4, $B4,	$B1, $BB, $BB, $BB, $BB, $BB, $BB, $B4,	$B4, $BB, $BB, $BB, $BC
		.BYTE $BC, $BC,	$BC, $BC, $BC, $BC, $BC, $BC, $B4, $B7,	$B8, $B8, $B8, $B8, $B8, $B5, $B5, $B5,	$B5, $B5, $B5, $B6, $B6
		.BYTE $B6, $B6,	$B6, $B6, $B6, $B6, $B6, $B6, $B6, $B6,	$B6, $B7, $B7, $B6, $B7, $B7, $B6, $B7,	$B8, $B9, $B9, $B9, $B9
		.BYTE $B4, $B9,	$B9, $B9, $B3, $B4, $B8, $B8, $B9, $BA,	$BA, $BA, $B9, $BA, $BA, $BA, $BA, $BC,	$BC, $BD, $BD, $BD, $BD
		.BYTE $BD, $BD,	$BD, $BD, $BD, $BD, $BD, $BD, $BD, $BD,	$BD, $B8, $B1, $BE, $BE, $BE, $BE, $B8,	$B8, $B7, $BE, $BE, $BE
		.BYTE $BE, $BE,	$BE, $BE, $BF, $BF, $BE, 6, $BB, $BB, $BF, $BF,	$BF, $BE, $BF, $BF, $BF, $BF, $C0, $C0,	$C0, $C0, $C0
		.BYTE $C0, $C0,	$C0, $C1, $C1, $C1, $C1, $C1, $C1, $C1,	$C1, $C1, $C1, $C1, $C1, $C1, $C1, $C1,	$C1, $C1, $C2, $C2, $C2
		.BYTE $C2, $C2,	$C2, $C2, $C2, $C2, $C2, $C2, $C2, $C3,	$C3, $C3, $D4, $D4, $D4, $D4, $D4, $D5,	$D5, $D5, $B8, $C5

 include data\spr_lists2.asm

; sprite_lists

; =============== S U B	R O U T	I N E =======================================


level_base_load:			; ...
		JSR	clear_tilemaps
		JSR	fill_sprite_buffer_
		LDA	#$16
		STA	banks_ids6+$16
		LDX	#<text_d79a
		LDY	#>text_d79a
		LDA	#2
		JSR	write_some_text_to_vram
		JSR	set_attributes_vram
		LDX	Level_ID
		LDA	level_infobar_colors,X

loc_6000_D5D7:				; ...
		STA	PPU_DATA	; VRAM I/O Register (RW)
		DEY
		BPL	loc_6000_D5D7
		JMP	level_values_load
; End of function level_base_load

; ---------------------------------------------------------------------------
level_infobar_colors:.BYTE $FF,	$FF, $AA, $FF, 0, $55, $55, $FF, $FF, 0, 0, 0, 0, 0 ; ...

; =============== S U B	R O U T	I N E =======================================


set_attributes_vram:			; ...
		LDA	#$23
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$C0
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDY	#$40
		RTS
; End of function set_attributes_vram


; =============== S U B	R O U T	I N E =======================================


load_attributes:			; ...
		JSR	set_attributes_vram

loc_6000_D5FE:				; ...
		LDA	attrib_cnt,X
		BEQ	locret_6000_D616
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	attrib_dat,X
		INX
		INX

loc_6000_D60A:				; ...
		STA	PPU_DATA	; VRAM I/O Register (RW)
		DEY			; 64 bytes
		BEQ	locret_6000_D616
		DEC	tmp_var_15	;  / Object Counter / various tmp
		BNE	loc_6000_D60A
		BEQ	loc_6000_D5FE

locret_6000_D616:			; ...
		RTS
; End of function load_attributes

; ---------------------------------------------------------------------------
attrib_dat:	.BYTE 0			; ...
attrib_cnt:	.BYTE $11, $50,	2, $10,	1, $50,	2, $10,	2, $55,	3, $A5,	2, $55,	3, $AA,	$20, 0,	8, $F0,	8, $5F,	$14, $AF, 4, $F5, 4 ; ...
		.BYTE $FA, 4, $FF, $10,	$FF, $40, $AA, $C, 0, 1, $40, 1, 0, 3, $AA, 3, 0, 1, 4,	1, $F0,	6, $AA,	5, $FF,	3, $AA,	9, $50
		.BYTE 1, 0, 3, $AA, 4, $55, 1, 0, $A, 0, $C, $55, 4, 0,	4, $44,	1, $55,	3, 0, $28, 0, $11, $55,	$F, $AA, 8, $FA, 8, $FF
		.BYTE $10, $55,	$C, $AA, 1, $66, 1, $55, 6, $89, 1, $66, 1, $55, 4, $11, 1, $C8, 1, $B4, 1, $56, 1, $55, 4, $C1, 1, $C
		.BYTE 1, $AB, 1, $55, $1B, $F, $10, 0, $10, $FF, $20, $FF, $28,	$AA, $18, 0, $12, $F0, 1, $5D, 1, $A2, 1, 0, 5,	$77
		.BYTE 1, $D5, 1, $8A, 1, 0, 5, $CF, 1, $F3, 1, 0, $1C, 0, $A, $14, 1, $90, 1, $30, 1, 0, 5, $11, 1, $9C, 1, $BB, 1, 0
		.BYTE 5, $55, 1, $99, 1, $EE, 1, 0, 5, $55, 1, $99, 1, $AA, 1, 0, 6, 8,	1, $E, 1, 0, $12

; =============== S U B	R O U T	I N E =======================================


load_attributes2:			; ...
		JSR	set_attributes_vram

loc_6000_D6DC:				; ...
		LDA	attrib2_cnt,X
		BEQ	locret_6000_D6F4
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	attrib2_dat,X
		INX
		INX

loc_6000_D6E8:				; ...
		STA	PPU_DATA	; VRAM I/O Register (RW)
		DEY
		BEQ	locret_6000_D6F4
		DEC	tmp_var_15	;  / Object Counter / various tmp
		BNE	loc_6000_D6E8
		BEQ	loc_6000_D6DC

locret_6000_D6F4:			; ...
		RTS
; End of function load_attributes2

; ---------------------------------------------------------------------------
attrib2_dat:	.BYTE 0			; ...
attrib2_cnt:	.BYTE 9, $88, 1, $AA, 1, $80, 1, $62, 1, $10, 1, 0, 3, $2A, 1, 2, 1, 8,	1, $55,	1, $11,	1, 0, 3, $C0, 1, $F0, 2, $55 ; ...
		.BYTE 1, $15, 1, 0, 3, $CC, 1, $FF, 2, $55, 1, $51, 1, $AA, 3, $AF, 1, $AF, 2, $A7, 1, $A1, 1, $AA, $13, 0, 9, $40, 1
		.BYTE $DD, 1, $FF, 1, $30, 1, 0, 4, 4, 1, $DD, 1, $BB, 1, $77, 1, $11, 1, 0, 4,	$DD, 1,	$BB, 1,	$55, 1,	0, 4, $CC, 1
		.BYTE $AA, 1, $AB, 1, $AA, 1, 2, 1, 0, 3, $C, 1, 2, 1, 0, $15, 0, $30, $50, 3, $F0, $D

; =============== S U B	R O U T	I N E =======================================


write_some_text_to_vram:		; ...
		STX	tmp_var_19
		STY	tmp_var_1A
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDY	#0

loc_6000_D76D:				; ...
		LDA	(tmp_var_19),Y
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		INY
		BNE	loc_6000_D777
		INC	tmp_var_1A

loc_6000_D777:				; ...
		LDA	(tmp_var_19),Y
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		INY
		BNE	loc_6000_D781
		INC	tmp_var_1A

loc_6000_D781:				; ...
		LDA	(tmp_var_19),Y
		PHA
		AND	#$7F
		TAX
		LDA	text_inf,X
		STA	PPU_DATA	; VRAM I/O Register (RW)
		INY
		BNE	loc_6000_D792
		INC	tmp_var_1A

loc_6000_D792:				; ...
		PLA
		BPL	loc_6000_D781
		DEC	tmp_var_15	;  / Object Counter / various tmp
		BNE	loc_6000_D76D
		RTS
; End of function write_some_text_to_vram

; ---------------------------------------------------------------------------
text_d79a:	.BYTE $20, $9F,	$A2, $22, $9F, $A2 ; ...
text_d7a0:	.BYTE $20		; ...
		.BYTE $EC
		.BYTE 'PRESENT'
		.BYTE $D3, $22,	$2F, $3D, $BE, $22, $EB
		.BYTE 'PRODUCTIO'
		.BYTE $CE
text_d7ba:	.BYTE $20, $EC,	$20, $20, $20, $20, $20, $20, $20, $A0,	$21, 4 ; ...
		.BYTE 'COPYRIGHT 1991 RARE LTD'
		.BYTE $AE
text_d7de:	.BYTE $20		; ...
		.BYTE $CA
		.BYTE 'LICENSED  B'
		.BYTE $D9, $21,	4
		.BYTE 'NINTENDO OF AMERICA INC'
		.BYTE $AE
text_d806:	.BYTE $21, $86,	$42, $20, $41, $20, $54, $20, $54, $20,	$4C, $20
		.BYTE $45, $20,	$54, $20, $4F, $20, $41, $20, $44, $20,	$D3
text_d81d:	.BYTE $21		; ...
		.BYTE $CC
aStarrin:	.BYTE 'STARRIN'
		.BYTE $C7
text_d827:	.BYTE $22		; ...
		.BYTE $47
		.BYTE 'PRESS START TO PLA'
		.BYTE $D9, $22,	$E5
		.BYTE 'COPYRIGHT 1991 RARE LTD'
		.BYTE $AE, $23,	$26
		.BYTE 'LICENSED TO TRADEWES'
		.BYTE $D4, $23,	$47
		.BYTE 'BY RARE COIN'
		.BYTE $2D, $49,	$54, $2C
		.BYTE 'IN'
		.BYTE $43
		.BYTE $AE
text_d883:	.BYTE $23		; ...
		.BYTE $42
		.BYTE 'LEVEL'
		.BYTE $A0
text_d88b:	.BYTE $20		; ...
		.BYTE $C7
		.BYTE 'PLAYER  '
		.BYTE $AA, $21,	$2C
		.BYTE 'GAME OVE'
		.BYTE $D2, $21,	$C7
		.BYTE 'PLAYER  '
		.BYTE $A9, $22,	$2C
		.BYTE 'GAME OVE'
		.BYTE $D2, $22,	$CB
		.BYTE 'PRESS STAR'
		.BYTE $D4, $23,	$B
		.BYTE 'TO CONTINU'
		.BYTE $C5, $23,	$50, $A8
text_d8d4:	.BYTE $22		; ...
		.BYTE $C7
		.BYTE 'WHEN  SUDDENL'
		.BYTE $D9
text_d8e4:	.BYTE $20		; ...
		.BYTE $A6, $2D,	$20
		.BYTE 'THE STORY SO FAR '
		.BYTE $AD, $22,	3
		.BYTE 'ONE DAY PIMPLE AND PRINCES'
		.BYTE $D3, $22,	$64
		.BYTE 'ANGELICA WERE OUT CRUISIN'
		.BYTE $A7
text_d933:	.BYTE $20, $84,	$50, $49, $4D, $50, $4C, $45, $20, $41,	$4E, $44 ; ...
		.BYTE $20, $54,	$48, $45, $20, $50, $52, $49, $4E, $43,	$45, $53
		.BYTE $D3, $20,	$E6, $57, $45, $52, $45, $20, $43, $41,	$50, $54
		.BYTE $55, $52,	$45, $44, $20, $42, $59, $20, $54, $48,	$C5, $21
		.BYTE $44, $44,	$41, $52, $4B, $20, $51, $55, $45, $45,	$4E, $20
		.BYTE $41, $4E,	$44, $20, $54, $41, $4B, $45, $4E, $20,	$54, $CF
		.BYTE $21, $A8,	$41, $20, $4E, $45, $41, $52, $42, $59,	$20, $50
		.BYTE $4C, $41,	$4E, $45, $54, $AE
text_d9d8:	.BYTE $20, $A5,	$4D, $45, $41, $4E, $57, $48, $49, $4C,	$45, $2C ; ...
		.BYTE $20, $42,	$41, $43, $4B, $20, $4F, $4E, $20, $54,	$48, $C5
		.BYTE $21, 6, $53, $50,	$41, $43, $45, $53, $48, $49, $50, $20
		.BYTE $56, $55,	$4C, $54, $55, $52, $45, $20, $20, $AD,	$21, $64
		.BYTE $54, $48,	$45, $20, $42, $41, $54, $54, $4C, $45,	$54, $4F
		.BYTE $41, $44,	$53, $20, $42, $41, $53, $45, $2E, $2E,	$2E, $AE
text_d9d5:	.BYTE $20, $85,	$41, $4E, $44, $20, $53, $4F, $2C, $20,	$54, $48 ; ...
		.BYTE $45, $20,	$44, $41, $52, $4B, $20, $51, $55, $45,	$45, $CE
		.BYTE $20, $C4,	$49, $53, $20, $44, $45, $46, $45, $41,	$54, $45
		.BYTE $44, $20,	$4F, $4E, $43, $45, $20, $41, $47, $41,	$49, $4E
		.BYTE $20, $AD,	$21, 6,	$52, $45, $54, $52, $45, $41, $54, $49
		.BYTE $4E, $47,	$20, $49, $4E, $54, $4F, $20, $54, $48,	$C5, $21
		.BYTE $45, $53,	$48, $41, $44, $4F, $57, $59, $20, $4D,	$41, $52
		.BYTE $47, $49,	$4E, $53, $20, $4F, $46, $20, $54, $48,	$C5, $21
		.BYTE $86, $47,	$41, $4C, $41, $58, $59, $20, $54, $4F,	$20, $52
		.BYTE $45, $43,	$4F, $55, $50, $20, $48, $45, $D2, $21,	$C5, $4C
		.BYTE $4F, $53,	$53, $45, $53, $2E, $2E, $AE, $22, $25,	$55, $4E
		.BYTE $54, $49,	$4C, $20, $54, $48, $45, $20, $4E, $45,	$58, $54
		.BYTE $20, $54,	$49, $4D, $45, $2E
text_inf:	.BYTE $2E		; ...
		.BYTE $AE
text_da6d:	.BYTE $20		; ...
		.BYTE $AB
		.BYTE 'MEGA  WAR'
		.BYTE $D0, $21,	$28
		.BYTE 'ADVANCE 2 LEVEL'
		.BYTE $D3
byte_6000_DA8B:	.BYTE 0, $FE, $FF, $B4,	0, $BD,	0, $FD,	$96, $8E, $8F, $E ; ...
		.BYTE $C, $D, $B, $F, 1, 2, 3, 4, 5, 6,	7, 8
		.BYTE 9, $A, $B, 0, 0, $10, $11, 0, $28, $12, $13, $14
		.BYTE $15, $16,	$17, $18, $19, $1A, $1B, $1C, $1D, $1E,	$1F, $20
		.BYTE $21, $22,	$23, $24, $25, $26, $27, $28, $29, $2A,	$2B, $45
		.BYTE $46, $47,	$3F, $27, $2A, $2B, $2C, $2D, $2E, $2F

; =============== S U B	R O U T	I N E =======================================


random6:				; ...
		LDA	RandomValue_1
		EOR	RandomValue_4
		ADC	RandomValue_3
		STA	RandomValue_2
		LDA	RandomValue_3
		ROL	A
		SBC	RandomValue_4
		STA	RandomValue_3
		EOR	RandomValue_2
		STA	RandomValue_1
		RTS
; End of function random6


; =============== S U B	R O U T	I N E =======================================


sub_6000_DAE5:				; ...
		LDX	#6
		LDY	#2
		STA	tmp_var_15	;  / Object Counter / various tmp
		JMP	jump_from_bank6
; End of function sub_6000_DAE5


; =============== S U B	R O U T	I N E =======================================


checkit2:				; ...
		JSR	load_palettes	; input	X - bkg	pal id,	Y - spr	pal id
		LDA	#$40
		STA	pal_reduce_value ; dec to color	value
		LDA	#0
		STA	pal_vram_upd_off ; BKG=$00, SPR=$10
		JMP	jump_to_bank0_func1
; End of function checkit2


; =============== S U B	R O U T	I N E =======================================


level_values_load:			; ...
		LDA	previous_bankID
		PHA
		LDA	Level_ID
		ASL	A
		ASL	A
		ASL	A
		ADC	Level_ID
		TAY
		LDA	level_base_X_H,Y
		STA	Camera_X_pos_H
		LDA	level_base_X_L,Y
		STA	Camera_X_pos_l	;  / level_position - on h levels
		LDA	level_base_Y_H,Y
		STA	Camera_Y_pos_H
		LDA	level_base_Y_L,Y
		STA	Camera_Y_pos_l	;  / level_position - on v levels
		LDA	level_X_blk_cnt,Y ; level horiz. lenght	(count 32x32 blocks by X)
		STA	X_block_lenght	; level	horiz. lenght (count 32x32 blocks by X)
		STY	tmp_var_17
		LDX	level_bg_pal_id,Y
		LDA	level_obj_pal_id,Y
		TAY
		JSR	checkit2
		LDY	tmp_var_17
		LDA	level_obj_gfx_id,Y
		PHA
		LDA	level_bg_gfx_id,Y
		STA	tmp_var_15	;  / Object Counter / various tmp
		AND	#$7F
		LDY	#1
		ROL	tmp_var_15	;  / Object Counter / various tmp
		BCC	loc_6000_DB41
		LDY	#4

loc_6000_DB41:				; ...
		JSR	sub_6000_DB94
		LDA	#6
		JSR	sub_6000_DB92
		PLA
		JSR	sub_6000_DB92
		LDA	Level_ID
		CMP	#armageddon
		BNE	loc_6000_DB6B
		LDY	#4
		LDA	#$22
		JSR	sub_6000_DB94
		LDA	#8
		JSR	sub_6000_DAE5
		LDA	#$A
		JSR	sub_6000_DAE5
		LDA	#$26
		JSR	sub_6000_DB9B
		LDA	#1

loc_6000_DB6B:				; ...
		CMP	#rat_race
		BNE	loc_6000_DB80
		LDA	#$20
		JSR	sub_6000_DB9B
		LDA	#$22
		JSR	sub_6000_DB9B
		LDA	#$24
		JSR	sub_6000_DB9B
		LDA	#1

loc_6000_DB80:				; ...
		CMP	#clinger_winger
		BNE	loc_6000_DB89
		LDA	#$1E
		JSR	sub_6000_DB9B

loc_6000_DB89:				; ...
		LDA	#$42
		JSR	sub_6000_DB92
		PLA
		STA	previous_bankID
		RTS
; End of function level_values_load


; =============== S U B	R O U T	I N E =======================================


sub_6000_DB92:				; ...
		LDY	#1
; End of function sub_6000_DB92


; =============== S U B	R O U T	I N E =======================================


sub_6000_DB94:				; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDX	#3
		JMP	jump_from_bank6
; End of function sub_6000_DB94


; =============== S U B	R O U T	I N E =======================================


sub_6000_DB9B:				; ...
		LDY	#7
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDX	#$12
		JMP	jump_from_bank6
; ---------------------------------------------------------------------------
level_base_X_H:	.BYTE 0			; ...
level_base_X_L:	.BYTE 0			; ...
level_base_Y_H:	.BYTE 0			; ...
level_base_Y_L:	.BYTE 0			; ...
level_X_blk_cnt:.BYTE 8			; ...
					; level	horiz. lenght (count 32x32 blocks by X)
level_bg_pal_id:.BYTE $28		; ...
level_obj_pal_id:.BYTE $2A		; ...
level_bg_gfx_id:.BYTE $20		; ...
level_obj_gfx_id:.BYTE $A		; ...
		.BYTE	 0,   0, $FF, $30, $40,	  2, $22, $8E,	 2
		.BYTE  $FF, $FC,   0,	0,   8,	  8, $22, $90, $1A
		.BYTE	 0, $10, $FF, $F0, $30,	 $A, $22, $92, $1C
		.BYTE	 0,   0, $FF, $DC, $1A,	 $C, $22, $98, $22
		.BYTE	 0,  $E, $17,	4,   8,	 $E, $22, $16, $24
		.BYTE	 0,   0, $FF, $EC, $30,	$10, $22, $1E, $1C
		.BYTE	 0,   0,  $F, $C0,   9,	$14, $22, $94, $26
		.BYTE	 0,   0,   2,	0, $10,	$16, $22, $96, $2E
		.BYTE	 0,   0,   0,	0,   9,	$18, $22, $94, $26
		.BYTE	 0,   0,   0, $A8, $38,	$1A, $22, $9C, $26
		.BYTE	 0,   0,   0,	0, $30,	$1C, $22, $3C, $3E
		.BYTE	 0,   0, $FF, $EC, $58,	$1E, $22, $9E, $40
		.BYTE	 0,   0,   1, $98, $38,	$20, $22, $9C, $26
		.BYTE 8, 3, 1, $84, $AD, 0, 8, 8, 8, 0,	0, 8, 0, $B, 2,	3, $8C,	$2A, 6,	$18, $C, $18, 0, $10, 7, $10, $F, $10, $17, $10
		.BYTE 0, 8, 8, 8, $10, 8, $18, 8, 2, 0,	$A, 0, $B, 3, 3, $8B, $36, 7, $18, $C, $18, 1, $10, 9, $10, $10, $10, 0, 8, 7
		.BYTE 8, $F, 8,	$17, $B, 2, 0, $A, 0, $C, 2, 3,	$8C, $41, 6, $18, $E, $18, 2, $10, 8, $10, $10,	$10, $18, $10, 0, 8
		.BYTE 8, 8, $10, 8, 1, 0, 6, 0,	$E, 0, $1A, 3, 3, $8C, $4D, 1, $18, 9, $18, $11, $18, 0, $10, 8, $10, $10, $10,	$18
		.BYTE $10, $B, 8, $12, 8, $1A, 8, $D, 0, $12, 0, $A, 3,	3, $8E,	$59, 8,	$18, $10, $18, 3, $10, $B, $10,	$13, $10, $1B
		.BYTE $10, 1, 8, 9, 8, $10, 8, $18, 8, $20, 9, 0, 0, 7,	0, $F, 0, $13, 3, 3, $8E, $67, 0, $20, 0, $18, 7, $18, $F, $18
		.BYTE 4, $10, $C, $10, $14, $10, 5, 8, 9, 8, $10, 8, $18, 8, 9,	0, $10,	0, $18,	0, $11,	5, 3, $8B, $75,	2, $10,	5, $10
		.BYTE $D, $10, $15, $10, 0, 8, 7, 8, $F, 8, $17, 8, 7, 0, $F, 0, $17, 0, $D, 3,	3, $8B,	$86, 0,	$18, 4,	$18, $C, $18
		.BYTE 5, $10, $D, $10, 2, 8, $A, 8, $12, 8, 2, 0, 8, 0,	$10, 0,	$F, 5, 3, $8A, $91, 4, $10, $C,	$10, $14, $10, 0, 8
		.BYTE 5, 8, $D,	8, $15,	8, 4, 0, 9, 0, $11, 0, 8, 7, 3,	$8A, $A3, 0, $18, 8, $18, 0, $10, 6, $10, $E, $10, 2, 8, $A
		.BYTE 8, $12, 8, 9, 0, $11, 0, $E, 1, 3, $88, $9B, 5, $10, $B, $10, 0, 8, 8, 8,	$10, 8,	0, 0, 7, 0, $F,	0, $B, 4, 3
		.BYTE $D, $86, 0, $18, $87, 4, $18, $88, $C, $18, $89, 5, $10, $8A, $D,	$10, $8B, 2, 8,	$8C, $A, 8, $82, $F, 8,	$83
		.BYTE $17, 8, $8E, 2, 0, $8F, 8, 0, $84, $10, 0, $85, $18, 4, 8, 3, 2, $82, $80, 0, 0, 8, 0, 4,	0, 2, $81, $F8,	0, 0
		.BYTE 4, 0, 2, $81, $F9, 0, 0, 8, 3, 2,	$84, $FB, 0, 8,	8, 8, 0, 0, 8, 0, $1E, $16, 1, $89, $2D, $A, $10, $12, $10, $17
		.BYTE $F, 0, 8,	8, 8, $10, 8, 0, 0, 8, 0, $D, 0, $C, $C, 3, 4, $36, 8, $10, $36, 8, 0, $37, 0, 8, $37, $10, 8, 9, 4
		.BYTE 3, $24, $B1, $1C,	$78, $B1, $14, $70, $B2, $1C, $70, $B3,	$C, $68, $B4, $14, $68,	$B5, $1C, $68, $B6, 4, $60, $B7
		.BYTE $C, $60, $B8, $14, $60, $B9, $1C,	$60, $BA, 4, $58, $BB, $C, $58,	$BC, $14, $58, $BD, $1C, $58, $BE, $A, $50, $BF
		.BYTE $12, $50,	$C0, $C, $48, $C1, $10,	$48, $C0, $B, $40, $C1,	$F, $40, $C0, $A, $38, $C1, $E,	$38, $C0, 9, $30, $C1
		.BYTE $D, $30, $C0, 8, $28, $C1, $C, $28, $C0, 7, $20, $C1, $B,	$20, $C0, 6, $18, $C1, $A, $18,	$C0, 5,	$10, $C1, 9
		.BYTE $10, $C0,	4, 8, $C1, 8, 8, $C2, 1, 0, $C3, 9, 0, 5, 3, $FF, 2, $C4, 0, 0,	2, $C4,	4, 0, $C2, 4, 4, $FF, 2, $C5
		.BYTE 0, 1, 2, $C5, 2, 0, $C2, 3, 3, 2,	1, $C6,	0, 0, 2, 3, 2, 1, $C7, 0, 0, 1,	2, 2, 1, $C8, 0, 0, 9, 0, 2, $87, $C9
		.BYTE 4, $20, 0, $18, 5, $18, 0, $10, 4, $10, 2, 8, 5, 8, 8, 5,	2, $84,	$D6, 2,	8, $A, 8, 0, 0,	8, 0
byte_6000_DE93:	.BYTE 9, 6, 0, $8C, $C8, 0, $1E, 8, $20, $10, $20, 0, $16, 8, $18
		.BYTE $10, $18,	8, $10,	$10, $10, 7, 8,	$F, 8, 6, 0, $E, 0
byte_6000_DEB0:	.BYTE 4, 4, 0, $89, $D4, $A, $10, $12, $10, $16, $E, 6,	8, $E, 8, $16, 6, 0, 0,	8, 0, $10, 0
byte_6000_DEC7:	.BYTE 3, $C, 0,	$89, $DD, 0, $10, 8, $10, $10, $10, $18, $10, 0, 8, 8, 8, $10, 8, $18, 8, $10, 0
byte_6000_DEDE:	.BYTE $B, 5, 1,	$82, $E6, 0, 0,	8, 0
byte_6000_DEE7:	.BYTE 3, $A, 1,	$82, $E8, 0, 8,	0, 0
byte_6000_DEF0:	.BYTE 0, 0, $20, $D, $FE, 1, $30, $FE, 8, $32, $FE, $10, $34, $FE, $17,	$36, $FE, 8, $2A, $FE, $10, $2C, $FE, $18, $2E
		.BYTE $FE, $10,	$24, $FE, $18, $26, $FE, $20, $26, $FE,	$10, $1C, $FE, $18, $1E, $FE, $20, $1E
byte_6000_DF1B:	.BYTE 0, 0, $20, $D, $FE, $20, $1E, $FE, $18, $1E, $FE,	$10, $1C, $FE, $20, $26, $FE, $18, $26,	$FE, $10, $24, $FE, $18
		.BYTE $2E, $FE,	$10, $2C, $FE, 8, $2A, $FE, $17, $36, $FE, $10,	$34, $FE, 8, $32, $FE, 1, $30
byte_6000_DF46:	.BYTE 0, 0, $FF, $96, $AE, $B, $18, 2, $13, $18, 2, $1B, $18, 2, 0, $10, 2, 8, $10, 2, $10, $10, 2, $18, $10, 2, $20
		.BYTE $10, 2, 6, 8, 2, $E, 8, 2, $16, 8, 2, $1E, 8, 2, 6, 0, 2,	$E, 0, 2, $16, 0, 2, $1E, 0, 2,	$15, $18, 3, $15, $10
		.BYTE 3, $15, 8, 3, 9, 0, 3, $11, 0, 3,	$19, 0,	3
byte_6000_DF8D:	.BYTE $C, $14, 3, $92, $98, 8, $18, $10, $18, $18, $18,	0, $10,	8, $10,	$10, $10, $18, $10, $20, $10, 0, 8, 8, 8, $10 ;	...
		.BYTE 8, $18, 8, $20, 8, 0, 0, 8, 0, $10, 0, $18, 0, $20, 0
byte_6000_DFB6:	.BYTE $10, 5, 1, $95, $70, $C, $48, 9, $40, $11, $40, 3, $38, $B, $38, $13, $38, $19, $38, 0, $30, 8, $30, $10,	$30
		.BYTE $17, $30,	$A, $28, $12, $28, $B, $20, $11, $20, $C, $18, $12, $18, $D, $10, $F, $10, $E, 8, $D, 0, $1A, 4, 1, $9C
		.BYTE $30, $13,	$48, $28, $48, 0, $40, $F, $40,	$17, $40, $26, $40, 3, $38, $B,	$38, $13, $38, $1B, $38, $22, $38, 7
		.BYTE $30, $F, $30, $17, $30, $1E, $30,	$E, $28, $16, $28, $1E,	$28, $24, $28, $12, $20, $1A, $20, $22,	$20, $15, $18
		.BYTE $1D, $18,	$15, $10, $19, $10, $14, 8, $14, 0, $1A, 4, $FF, $9C, $30, $13,	0, $81,	$28, 0,	$81, 0,	8, $81,	$F, 8
		.BYTE $81, $17,	8, $81,	$26, 8,	$81, 3,	$10, $81, $B, $10, $81,	$13, $10, $81, $1B, $10, $81, $22, $10,	$81, 7,	$18
		.BYTE $81, $F, $18, $81, $17, $18, $81,	$1E, $18, $81, $E, $20,	$81, $16, $20, $81, $1E, $20, $81, $24,	$20, $81, $12
		.BYTE $28, $81,	$1A, $28, $81, $22, $28, $81, $15, $30,	$81, $1D, $30, $81, $15, $38, $81, $19,	$38, $81, $14, $40, $81
		.BYTE $14, $48,	$81, $1C, $F4, 0, $9A, $4C, 2, $28, $A,	$28, $12, $28, $1A, $28, $22, $28, $28,	$28, 0,	$20, 8,	$20
		.BYTE $10, $20,	$18, $20, $20, $20, $28, $20, 4, $18, $C, $18, $14, $18, $1C, $18, $24,	$18, 8,	$10, $F, $10, $17, $10
		.BYTE $1F, $10,	$B, 8, $13, 8, $19, 8, $10, 0, $17, 0, $10, 7, $FF, $93, $C0, $E, $20, 2, $D, $18, 2, $C, $28, 0, $E
		.BYTE $28, 0, 2, $20, 0, 9, $20, 0, $11, $20, 0, 0, $18, 0, 3, $18, 0, $B, $18,	0, $13,	$18, 0,	3, $10,	0, $A, $10, 0
		.BYTE $12, $10,	0, 8, 8, 0, $10, 8, 0, 6, 0, 0,	$B, 0, 0, $13, 0, 0, 8,	6, $FF,	$8F, $D8, 7, $20, $42, 3, $20, $42, 8
		.BYTE $18, $42,	2, $18,	$42, 8,	$10, $42, 0, $10, $42, 7, 8, $42, 1, 8,	$42, 5,	0, $42,	3, 0, $42, 3, $20, $43,	8, $18
		.BYTE $43, 4, $18, $43,	8, $10,	$43, 0,	$10, $43
byte_6000_E124:	.BYTE	 0,   1,   6,	7,  $E,	 $F, $16, $17, $20, $21, $29, $2A ; ...
		.BYTE	 2,   3,   8,	9, $10,	$11, $18, $19, $22, $23, $2B, $2A
		.BYTE	 0,   4,   6,  $A, $12,	$13, $1A, $1B, $24, $25, $2B, $2A
		.BYTE	 0,   1,   6,	7,  $E,	 $F, $1C, $1D, $26, $27, $2C, $2A
		.BYTE	 2,   5,  $B,  $C, $14,	$15, $1E, $1F, $28, $25, $2B, $2A
		.BYTE	 2,   1,  $D,	7, $12,	 $F, $1A, $1B, $24, $25, $2B, $2A
byte_6000_E16C:	.BYTE	 0,   0,   2, $8C, $31
		.BYTE	 0, $28
		.BYTE	 8, $28
		.BYTE	 0, $20
		.BYTE	 8, $20
		.BYTE	 0, $18
		.BYTE	 8, $18
		.BYTE	 0, $10
		.BYTE	 8, $10
		.BYTE	 0,   8
		.BYTE	 8,   8
		.BYTE	 0,   0
		.BYTE	 8,   0
byte_6000_E189:	.BYTE	 8,   8,   3, $84, $2F
		.BYTE	 0,   8
		.BYTE	 8,   8
		.BYTE	 0,   0
		.BYTE	 8,   0
some_tmap_ptr_l: .DL  tilemap_pack14	; ...
		 .DL  tilemap_pack15
		 .DL  tilemap_pack15
some_tmap2_ptr_l: .DL  tilemap_pack16	; ...
		 .DL  tilemap_pack17
		 .DL  tilemap_pack18
some_tmap_ptr_h: .DH  tilemap_pack14	; ...
		 .DH  tilemap_pack15
		 .DH  tilemap_pack15
some_tmap2_ptr_h: .DH  tilemap_pack16	; ...
		 .DH  tilemap_pack17
		 .DH  tilemap_pack18
tilemap_pack14:
 incbin	data\tilemap14.compressed
tilemap_pack15:
 incbin	data\tilemap15.compressed
tilemap_pack17:
 incbin	data\tilemap17.compressed
tilemap_pack18:
 incbin	data\tilemap18.compressed
tilemap_pack16:
 incbin	data\tilemap16.compressed

; tilemap_pack14
; tilemap_pack15
; tilemap_pack17
; tilemap_pack18
; tilemap_pack16
; ---------------------------------------------------------------------------

loc_6000_E584:				; ...
		LDA	timer_cont_scrn_sec
		AND	#3
		STA	timer_cont_scrn_sec
		LDA	global_var3
		ASL	A
		ASL	A
		ORA	timer_cont_scrn_sec
		JSR	loc_6000_E5A4
		LDA	#7
		STA	timer_cont_scrn_60
		LDX	#$10
		LDY	#0
		STY	timer_cont_scrn_sec
		STY	global_var_cnt?
		STY	global_var1
		STX	global_var2
		RTS
; ---------------------------------------------------------------------------

loc_6000_E5A4:				; ...
		STA	tmp_var_19
		LSR	A
		AND	#$FE
		TAY
		LDA	packed_txt_ptr_h,Y
		AND	#7
		TAX
		LDA	packed_txt_ptr_h,Y
		LSR	A
		LSR	A
		LSR	A
		STA	tmp_var_1D
		LDA	packed_txt_ptr_l,Y
		CLC
		ADC	#<packed_text
		STA	tmp_var_1C
		LDA	tmp_var_1D
		ADC	#>packed_text
		STA	tmp_var_1D
		INX
		TXA
		AND	#7
		STA	tmp_var_1E
		LDA	#8
		SEC
		SBC	tmp_var_1E
		AND	#7
		BEQ	loc_6000_E5E9
		TAX
		LDY	#7
		LDA	(tmp_var_1C),Y

loc_6000_E5DA:				; ...
		DEX
		BMI	loc_6000_E5E1
		ASL	A
		JMP	loc_6000_E5DA
; ---------------------------------------------------------------------------

loc_6000_E5E1:				; ...
		STA	tmp_var_1B
		INC	tmp_var_1C
		BNE	loc_6000_E5E9
		INC	tmp_var_1D

loc_6000_E5E9:				; ...
		LDA	tmp_var_19
		AND	#3
		BEQ	loc_6000_E5FC
		STA	tmp_var_19

loc_6000_E5F1:				; ...
		JSR	text_decompress
		CMP	#$FD
		BNE	loc_6000_E5F1
		DEC	tmp_var_19
		BNE	loc_6000_E5F1

loc_6000_E5FC:				; ...
		LDA	#0
		STA	tmp_var_1A

loc_6000_E600:				; ...
		JSR	text_decompress
		LDX	tmp_var_1A
		INC	tmp_var_1A
		STA	gfx_buff_adr_h,X
		CMP	#$FD
		BNE	loc_6000_E600
		RTS
; ---------------------------------------------------------------------------
; $1B stores the current byte, each bit	read shifts it left
; $1C/$1D is a pointer to the next byte	of the stream (with a -7 byte offset)
; $1E counts how many bits remain in the current loaded	byte

text_decompress:			; ...
		LDX	#0		; X stores current tree	node index

loc_6000_E611:				; ...
		DEC	tmp_var_1E	; $1E counts bits left in the current byte at $1B
		BPL	loc_6000_E623	; if we're out of bits, load a new byte
		LDY	#7
		STY	tmp_var_1E	; reset	$1E to tell us there are 8 available bits
		LDA	(tmp_var_1C),Y	; load byte from indirect $1C/$1D address + 7
		STA	tmp_var_1B	; store	byte in	$1B
		INC	tmp_var_1C	; increment stream byte	position ($1C/$1D)
		BNE	loc_6000_E623
		INC	tmp_var_1D

loc_6000_E623:				; ...
		ASL	tmp_var_1B	; shift	the high bit out of $1B	and...
		BCS	loc_6000_E631
		LDA	byte_6000_E63B,X ; if bit is 0 load next node from $E63B table
		TAX
		BPL	loc_6000_E611	; loop to next bit if node < 128
		LDA	byte_6000_E691 - $80,X
		RTS			; return byte from $E691 + (node - 128)
; ---------------------------------------------------------------------------

loc_6000_E631:				; ...
		LDA	byte_6000_E666,X ; if bit is 1 load next node from $E666 table
		TAX
		BPL	loc_6000_E611	; loop to next bit if node < 128
		LDA	byte_6000_E691 - $80,X
		RTS			; return byte from $E691 + (node - 128)
; End of function sub_6000_DB9B

; ---------------------------------------------------------------------------
byte_6000_E63B:	.BYTE $29, $AB,	1, 2, $A7, $A5,	$A4, $A3, $A2, 6, $9F, $9D, 7, 9, $A, $9A, $C, $97, $95, $D, $92, $90, $E, $8E,	$11 ; ...
		.BYTE $8C, $12,	$8A, $89, $87, $86, $16, $18, $1A, $83,	$1C, $1D, $1E, $20, $22, $24, $80, $27
byte_6000_E666:	.BYTE $2A, $AA,	$A9, $A8, $A6, 3, 4, 5,	$A1, $A0, $9E, $9C, 8, $9B, $B,	$99, $98, $96, $94, $93, $91, $8F, $F, $10, $8D	; ...
		.BYTE $8B, $13,	$14, $88, $15, $85, $17, $19, $84, $1B,	$82, $81, $1F, $21, $23, $25, $26, $28
byte_6000_E691:	.BYTE $20, $45,	$54, $4F, $41, $53, $52, $4E, $48, $80,	$49, $55, $44, $4C, $59, $47, $21, $27,	$43, $4D, $42, $2C, $57	; ...
		.BYTE $50, $46,	$FD, $4B, $2D, $2E, $56, $82, $81, $83,	$85, $84, $86, $87, $22, $5A, $51, $4A,	$58, $88, $3F
packed_txt_ptr_l:.BYTE 0		; ...
packed_txt_ptr_h:.BYTE 7		; ...
		.WORD $2EB,$DAC,$1388,$1D6D,$2320
		.WORD $23B8,$2EA0,$375A,$3F35,$3EE3
		.WORD $469E,$4945,$4BCC,$5762,$5F34
		.WORD $5FCD,$66D3,$6E80,$7441,$76F7
		.WORD $7C83,$8716,$87C6,$8888,$964D
		.BYTE $31
packed_text:
 incbin	data\text.pack
; packed_text

; =============== S U B	R O U T	I N E =======================================


clear_tilemaps:				; ...
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDA	#$16
		STA	banks_ids6+$16	; set second table
		JSR	loc_6000_FE98
		LDA	#6
		STA	banks_ids6+6	; back to first	table

loc_6000_FE98:				; ...
		LDA	#$20
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#0
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		TAX
		LDY	#4

loc_6000_FEA8:				; ...
		STA	PPU_DATA	; VRAM I/O Register (RW)
		DEX
		BNE	loc_6000_FEA8
		DEY
		BNE	loc_6000_FEA8
		RTS
; End of function clear_tilemaps


; =============== S U B	R O U T	I N E =======================================


fill_sprite_buffer_:			; ...
		LDX	#0

hide_sprites_from_n:			; ...
		LDA	#$F8

loc_6000_FEB6:				; ...
		STA	Sprites_Ypos,X
		INX
		BNE	loc_6000_FEB6
		RTS
; End of function fill_sprite_buffer_


; =============== S U B	R O U T	I N E =======================================


clear_sprites:				; ...
		JSR	fill_sprite_buffer_

dma_for_sprites:			; ...
		STX	PPU_SPR_ADDR	; SPR-RAM Address Register (W)
		LDA	#2
		STA	SPR_DMA		; Sprite DMA Register (W)
		RTS
; End of function clear_sprites

; ---------------------------------------------------------------------------
 IRQ6:
 .PAD $FF50,$FF
; IRQ6
; ---------------------------------------------------------------------------
		STA	banks_ids6+6
		JMP	sub_6000_8E74
; ---------------------------------------------------------------------------

to_bank5:				; ...
		TAY
		STA	banks_ids6,Y
		JMP	sub_6000_854B
; ---------------------------------------------------------------------------

get_byte_from_bank5:			; ...
		LDA	#5
		STA	banks_ids6+5
		LDA	(tmp_var_1B),Y
		LDY	#6
		STY	banks_ids6+6
		JMP	sub_6000_8594
; ---------------------------------------------------------------------------
 .PAD $FF78,$FF
; BANK6:FF6C
; ---------------------------------------------------------------------------
		STA	banks_ids6+3
		JSR	IRQ6
		LDA	#0
		STA	banks_ids6
		RTS
; ---------------------------------------------------------------------------

goto_bank3_upd_play_music:		; ...
		STA	prev_bank_id_m	; saves	mirror,	when jump from bank 0 to bank3 to music	f
		AND	#$10
		ORA	#3
		TAY
		STA	banks_ids6,Y
		JSR	IRQ6
		LDA	prev_bank_id_m	; saves	mirror,	when jump from bank 0 to bank3 to music	f
		TAY
		STA	banks_ids6,Y
		RTS
; ---------------------------------------------------------------------------

NMI6:					; ...
		STX	NMI_Xreg_saver
		STA	NMI_Areg_saver
		LDA	#6
		LDX	#0
		STX	banks_ids6
		JMP	IRQ6
; ---------------------------------------------------------------------------
		LDX	NMI_Xreg_saver
		LDA	previous_bankID_NMI
		TAY
		STA	banks_ids6,Y
		LDY	NMI_Yreg_saver
		LDA	NMI_Areg_saver
		RTI
; ---------------------------------------------------------------------------
banks_ids6:	.BYTE 0, 1, 2, 3, 4, 5,	6, 7, 8, 9, $A,	$B, $C,	$D, $E,	$F, $10, $11, $12, $13,	$14, $15, $16, $17 ; ...

; =============== S U B	R O U T	I N E =======================================


jump_from_bank6:			; ...
		LDA	#0
		ORA	#6
		STA	previous_bankID
		LDA	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		PHA
		STX	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		LDA	banks_ids6,Y
		STA	banks_ids6,Y
		JSR	sub_6000_8000
		LDY	previous_bankID
		PLA
		STA	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		LDA	banks_ids6,Y
		STA	banks_ids6,Y
		RTS
; End of function jump_from_bank6


; =============== S U B	R O U T	I N E =======================================


wait6:					; ...
		DEX
		BNE	wait6
		DEY
		BNE	wait6
		RTS
; End of function wait6


; =============== S U B	R O U T	I N E =======================================


RESET6:					; ...
		LDA	#0
		STA	banks_ids6
		JMP	RESET6
; End of function RESET6

; ---------------------------------------------------------------------------
		.WORD NMI6
		.WORD RESET6
		.WORD IRQ6
; end of 'BANK6'

.base $8000
; ===========================================================================

; Segment type:	Pure code
		;.segment BANK7

; =============== S U B	R O U T	I N E =======================================


sub_7000_8000:				; ...
		JMP	(JumpTable_ptr_main) ; указатель на функцию при	переходе в другой банк
; End of function sub_7000_8000

; ---------------------------------------------------------------------------
		JMP	sub_7000_8517
; ---------------------------------------------------------------------------
		JMP	karnath_block_to_restore
; ---------------------------------------------------------------------------
		JMP	load_karnathl_slvl
; ---------------------------------------------------------------------------
		JMP	unpack_tiles_bank7
; ---------------------------------------------------------------------------
		JMP	unpack_tiles_bank7
; ---------------------------------------------------------------------------
		JMP	unpack_tiles_bank7
; ---------------------------------------------------------------------------
		JMP	some_lvls_inits
; ---------------------------------------------------------------------------
		JMP	sub_7000_8EF1
; ---------------------------------------------------------------------------
tbl_for_vscroll:.BYTE 8, 9, $A,	$B, $C,	$D, $E,	$E, $D,	$FF, $FF, 6, 6,	6, 7 ; ...

; =============== S U B	R O U T	I N E =======================================


sub_7000_802A:				; ...
		STY	tmp_var_22
		LDY	global_var7
		DEY
		LDA	#0
		STY	tmp_var_15	;  / Object Counter / various tmp
		STX	tmp_var_16
		LDX	#8

loc_7000_8037:				; ...
		ROR	tmp_var_16
		BCC	loc_7000_803D
		ADC	tmp_var_15	;  / Object Counter / various tmp

loc_7000_803D:				; ...
		ROR	A
		DEX
		BNE	loc_7000_8037
		STX	global_var3
		STX	global_var4
		STA	tmp_var_15	;  / Object Counter / various tmp
		STA	tmp_var_20
		ROR	tmp_var_16
		LDY	tmp_var_16
		LSR	A
		ROR	tmp_var_16
		LSR	A
		ROR	tmp_var_16
		TAX
		STY	tmp_var_1F
		TYA
		ASL	A
		ROL	tmp_var_15	;  / Object Counter / various tmp
		ROL	global_var3
		ASL	A
		ROL	tmp_var_15	;  / Object Counter / various tmp
		ROL	global_var3
		ASL	A
		ROL	tmp_var_15	;  / Object Counter / various tmp
		ROL	global_var3
		LDY	tmp_var_22
		CPY	#$1C
		BNE	loc_7000_8078
		SBC	tmp_var_1F
		LDA	tmp_var_15	;  / Object Counter / various tmp
		SBC	tmp_var_20
		STA	tmp_var_15	;  / Object Counter / various tmp
		BCS	loc_7000_8078
		DEC	global_var3

loc_7000_8078:				; ...
		LDA	tmp_var_22
		SEC
		SBC	tmp_var_15	;  / Object Counter / various tmp
		STA	tmp_var_15	;  / Object Counter / various tmp
		TAY
		LDA	#0
		SBC	global_var3
		STA	global_var3
		TYA
		LDY	tmp_var_16
		RTS
; End of function sub_7000_802A

; ---------------------------------------------------------------------------
table_multiple_7:.BYTE 0, 7, $E, $15, $1C, $23,	$2A, $31, $38, $3F, $46, $4D ; ...
		.BYTE $54, $5B,	$62, $69, $70, $77, $7E, $85, $8C, $93,	$9A, $A1
		.BYTE $A8, $AF,	$B6, $BD, $C4, $CB, $D2, $D9, $E0, $E7
byte_7000_80AC:	.BYTE $20, $20,	$20, $21, $22, $24, $26, $29, $2D, $32,	$39, $43, $53, $6E, $A5	; ...
		.BYTE $FF, $FF,	$FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF,	$FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF,	$FF, $FF, $FF, $FF, $FF
		.BYTE $FF, $FF,	$FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF,	$FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF,	$FF, $FF, $FF, $FF, $FF
		.BYTE $FF, $FF,	$FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF,	$FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF,	$FF, $FF, $FF, $FF, $FF
		.BYTE 0
		.BYTE 0, 0, $18, 0, 0, 0, 0, 0,	0, $18,	0, 0, 0, 0, 0, 0, $3C, 0, 0, 0,	0, 0, 0, $3C, 0, 0, 0, 0, 0, 0,	$7E, 0,	0, 0
		.BYTE 0, 0, 0, $7E, 0, 0, 0, 0,	0, 0, $7E, 0, 0, 0, 0, 0, 1, $FF, $80, 0, 0, 0,	0, $F, $FF, $F0, 0, 0, 0, 0, $3F, $FF
		.BYTE $FC, 0, 0, 0, 0, $FF, $FF, $FF, 0, 0, 0, 3, $FF, $FF, $FF, $C0, 0, 0, 7, $FF, $FF, $FF, $E0, 0, 0, $F, $FF, $FF
		.BYTE $FF, $F0,	0, 0, $1F, $FF,	$FF, $FF, $F8, 0, 0, $3F, $F3, $FF, $CF, $FC, 0, 0, $7F, $C1, $FF, $83,	$FE, 0,	0, $FF
		.BYTE $80, $7E,	1, $FF,	0, 0, $FF, 0, 0, 0, $FF, 0, 1, $FE, 0, 0, 0, $7F, $80, 1, $FC, 0, 0, 0,	$3F, $80, 3, $F8, 0
		.BYTE 0, 0, $1F, $C0, 3, $F8, 0, 0, 0, $1F, $C0, 3, $F0, 0, 0, 0, $F, $C0, 7, $F0, $E, 0, $70, $F, $E0,	7, $E0,	$F, 0
		.BYTE $F0, 7, $E0, 7, $E0, $1F,	0, $F8,	7, $E0,	7, $E0,	$1F, $81, $FC, 7, $E0, $F, $C0,	$3B, $BD, $DF, $83, $F0, $F
		.BYTE $C3, $F3,	$FF, $CF, $C3, $F0, $F,	$C7, $F1, $FF, $8F, $E3, $F0, $F, $CF, $F0, $FF, $F, $F3, $F0, 0, 0, 0,	0, 0
		.BYTE 0, 0, 0, $FF, $FF, $FF, $FF, $FF,	$FF, $FF, $FF, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, $F, $CF,	$F0
		.BYTE $3C, $F, $F3, $F0, $F, $CF, $F8, $7E, $1F, $F3, $F0, $F, $CF, $FF, $FF, $FF, $F3,	$F0, $F, $CF, $FF, $FF,	$FF
		.BYTE $F3, $F0,	$F, $C7, $FF, $FF, $FF,	$E3, $F0, $F, $C3, $FF,	$FF, $FF, $C3, $F0, $F,	$C1, $FF, $FF, $FF, $83, $F0
		.BYTE $F, $C0, $7F, $FF, $FE, 3, $F0, 7, $E0, $3F, $FF,	$FC, 7,	$E0, 7,	$E0, $1F, $FF, $F8, 7, $E0, 7, $FE, $F,	$FF
		.BYTE $F0, $3F,	$E0, 7,	$FF, 7,	$FF, $E0, $7F, $E0, 3, $FF, $83, $FF, $C0, $FF,	$C0, 3,	$FF, $80, $FF, 1, $FF, $C0, 3
		.BYTE $FF, $80,	$3C, 1,	$FF, $C0, 7, $FF, $C0, 0, 3, $FF, $E0, $F, $FF,	$C0, 0,	3, $FF,	$F0, $F, $FF, $C0, 0, 3, $FF
		.BYTE $F0, $1F,	$FF, $80, 0, 1,	$FF, $F8, $3F, $FF, $C0, 0, 3, $FF, $FC, $3F, $FF, $F0,	0, $F, $FF, $FC, $7F, $DF, $FF
		.BYTE 0, $7F, $FB, $FE,	$F8, $F, $FF, $FF, $FF,	$F0, $1F, $40, 7, $FF, $FF, $FF, $E0, 2, 0, 3, $FF, $FF, $FF, $C0, 0
		.BYTE 0, 0, $FF, $FF, $FF, 0, 0, 0, 0, $3F, $FF, $FC, 0, 0, 0, 0, $F, $FF, $F0,	0, 0, 0, 0, 1, $FF, $80, 0, 0, 0, 0
		.BYTE 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, $FF, $FF, $FF, $FF, $FF,	$FF
		.BYTE $FF, $FF,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, $18
		.BYTE 0, 0, 0, 0, 0, 3,	$FF, $C0, 0, 0,	0, 0, 0, $3C, 0, 0, 0, 0, 0, 0,	$18, 0,	0, 0, 0, 0, 0, $18, 0, 0, 0, 0,	0, 7
		.BYTE $18, $E0,	0, 0, 0, 0, $1F, $DB, $F8, 0, 0, 0, 0, $3F, $E7, $FC, 0, 0, 0, 0, $7F, $FF, $FE, 0, 0, 0, 0, $FF, $FF
		.BYTE $FF, 0, 0, 0, 0, $FF, $FF, $FF, 0, 0, 0, 1, $FE, $18, $7F, $80, 0, 0, 1, $F0, 0, $F, $80,	0, 0, 1, $E0, 0, 7, $80
		.BYTE 0, 0, 1, $C0, 0, 3, $80, 0, $70, 1, $C0, 0, 3, $80, $E, $FE, 1, $80, 0, 1, $80, $7F, $FF,	$C3, $E1, $FF, $87, $C3
		.BYTE $FF, $1F,	$FF, $E3, $FF, $C7, $FF, $F8, 3, $FE, $77, $18,	$EE, $7F, $C0, 0, $7C, $37, $18, $EC, $3E, 0, 0, $C
		.BYTE $37, $FF,	$EC, $30, 0, 0,	$E, $73, $FF, $CE, $70,	0, 0, 7, $F9, $FF, $9F,	$E0, 0,	0, 1, $E7, $FF,	$E7, $80, 0
		.BYTE 0, 0, 0, $7E, 0, 0, 0, 0,	0, 0, $3C, 0, 0, 0, 0, 0, 0, $3C, 0, 0,	0, 0, 0, 0, $18, 0, 0, 0, 0, 0,	0, $18,	0, 0
		.BYTE 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0
		.BYTE 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, $18, 0, 0,	0, 0, 0, 0, $FF, 0, 0, 0, 0, 0,	0, $18,	0, 0, 0, 0, 0, 0, $18
		.BYTE 0, 0, 0, 0, 0, $1E, $18, $78, 0, 0, 0, 0,	$7F, $99, $FE, 0, 0, 0,	1, $FF,	$DB, $FF, $80, 0, 0, 3,	$FF, $FF, $FF
		.BYTE $C0, 0, 0, 7, $FF, $FF, $FF, $E0,	0, 0, 7, $C1, $FF, $83,	$E0, 0,	0, $F, 0, $7E, 0, $F0, 0, 0, $E, $3E, $3C, $7C
		.BYTE $70, 0, 0, $E, $7F, $3C, $FE, $70, 0, 0, $C, $FF,	$99, $FF, $30, 0, 0, $C, $FF, $99, $FF,	$30, 0,	0, $C, $FF, $F9
		.BYTE $FF, $30,	0, $70,	$1C, $FF, $99, $FF, $38, $E, $FE, $3C, $FF, $99, $FF, $3C, $7F,	$FF, $FE, $7F, $3C, $FE, $7F
		.BYTE $FF, $3F,	$FE, $3E, $3C, $7C, $7F, $FC, 7, $FF, 0, $7E, 0, $FF, $E0, 0, $FF, $C1,	$FF, $83, $FF, 0, 0, $F, $7F
		.BYTE $FF, $FE,	$F0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, $7E, 0, 0, 0, 0, 0, 0, $3C, 0, 0,	0, 0, 0, 0, $3C, 0, 0, 0, 0
		.BYTE 0, 0, $18, 0, 0, 0, 0, 0,	0, $18,	0, 0, 0, 0, 0, 0, $18, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0
		.BYTE 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0
byte_7000_8507:	.BYTE $C		; ...
byte_7000_8508:	.BYTE $70, $D, $50, $E,	$30, $F, $10, $1C, $70,	$1D, $50, $1E, $30, $1F, $10 ; ...

; =============== S U B	R O U T	I N E =======================================


sub_7000_8517:				; ...
		LDA	global_flags
		ASL	A
		AND	#$E
		TAY
		LDA	byte_7000_8508,Y
		STA	ppu_adr_map_l
		LDX	#$18
		LDA	byte_7000_8507,Y
		STA	ppu_adr_map_h
		AND	#$10
		BEQ	loc_7000_852F
		LDX	#0

loc_7000_852F:				; ...
		LDA	Objects_X_speed
		BNE	loc_7000_8539
		STX	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		STX	ppu_ctrl1_val	;  > $80  кадр завершен

loc_7000_8539:				; ...
		TSX
		STX	stackp_save
		LDA	global_flags
		AND	#3
		BEQ	loc_7000_8545
		JMP	loc_7000_85DD
; ---------------------------------------------------------------------------

loc_7000_8545:				; ...
		LDA	check_xz0
		AND	#$1F
		CMP	#$10
		BCC	loc_7000_854F
		EOR	#$1F

loc_7000_854F:				; ...
		TAX
		LDA	byte_7000_80AC,X
		TAX
		LDY	#$1C
		JSR	sub_7000_802A
		STX	tmp_var_16
		STY	tmp_var_17
		TAY
		LDX	#0
		STX	tmp_var_15	;  / Object Counter / various tmp

loc_7000_8562:				; ...
		LDA	global_var3
		CMP	#1
		LDA	#0
		BCS	loc_7000_8577
		CPY	#$38
		BCS	loc_7000_8577
		LDA	gfx_buff_adr_h,Y
		STA	scroll_tilemap_buff,X
		LDA	byte_0_740,Y

loc_7000_8577:				; ...
		STA	attributes_buff+$18,X
		LDA	tmp_var_17
		CLC
		ADC	tmp_var_15	;  / Object Counter / various tmp
		STA	tmp_var_15	;  / Object Counter / various tmp
		TYA
		ADC	tmp_var_16
		TAY
		LDA	global_var4
		ADC	global_var3
		STA	global_var3
		INX
		CPX	#$38
		BNE	loc_7000_8562
		LDY	#0
		LDA	global_counter
		SEC
		SBC	#$10
		AND	#$3F
		CMP	#$20
		BCS	loc_7000_85A6
		CMP	#$10
		BCS	loc_7000_85A3
		EOR	#$F

loc_7000_85A3:				; ...
		DEY
		BNE	loc_7000_85AC

loc_7000_85A6:				; ...
		CMP	#$30
		BCS	loc_7000_85AC
		EOR	#$F

loc_7000_85AC:				; ...
		AND	#$F
		STY	global_var2
		TAX
		STY	tmp_var_17
		LDA	byte_7000_80AC,X
		TAX
		LDY	#$20
		JSR	sub_7000_802A
		STA	global_var1
		INC	tmp_var_17
		BNE	loc_7000_85D9
		LDA	#$3F
		SEC
		SBC	global_var1
		STA	global_var1
		LDA	#0
		SBC	global_var3
		STA	global_var3
		DEC	global_var4
		TXA
		EOR	#$FF
		TAX
		TYA
		EOR	#$FF
		TAY

loc_7000_85D9:				; ...
		STX	global_var5
		STY	global_var6

loc_7000_85DD:				; ...
		LDY	global_var1
		LDX	#0

loc_7000_85E1:				; ...
		STX	tmp_var_15	;  / Object Counter / various tmp
		LDA	global_var3
		BNE	loc_7000_85EF
		TYA
		AND	#$1F
		TAX
		CPY	#$40
		BCC	loc_7000_85F1

loc_7000_85EF:				; ...
		LDX	#$20

loc_7000_85F1:				; ...
		LDA	table_multiple_7,X
		LDX	tmp_var_15	;  / Object Counter / various tmp
		STA	status_bar_buff+$37,X
		LDA	global_var6
		CLC
		ADC	global_var2
		STA	global_var2
		TYA
		ADC	global_var5
		TAY
		LDA	global_var4
		ADC	global_var3
		STA	global_var3
		INX
		CPX	#$10
		BNE	loc_7000_85E1
		STY	global_var1
		LDX	#$DF
		TXS
		LDA	global_counter
		CLC
		ADC	#$10
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		EOR	global_flags
		AND	#2
		LSR	A
		ADC	#$81
		STA	tmp_var_1A
		LDA	Objects_X_speed
		BEQ	loc_7000_8636
		INC	tmp_var_1A
		INC	tmp_var_1A
		LDA	Objects_various_flags ;	для пушек ID прицепленного объекта
		BEQ	loc_7000_8636
		INC	tmp_var_1A

loc_7000_8636:				; ...
		LDA	#$70
		STA	tmp_var_17
		LDA	#$11
		LDX	Objects_X_speed
		BEQ	loc_7000_8643
		LDA	#$10

loc_7000_8643:				; ...
		STA	tmp_var_16
		JMP	loc_7000_86C2
; ---------------------------------------------------------------------------
		LDX	#0

loc_7000_864A:				; ...
		LDY	scroll_tilemap_buff,X
		LDA	attributes_buff+$18,X
		AND	(tmp_var_19),Y
		CMP	#1
		ROL	tmp_var_15	;  / Object Counter / various tmp
		LDY	scroll_tilemap_buff+1,X
		LDA	attributes_buff+$19,X
		AND	(tmp_var_19),Y
		CMP	#1
		ROL	tmp_var_15	;  / Object Counter / various tmp
		LDY	scroll_tilemap_buff+2,X
		LDA	attributes_buff+$1A,X
		AND	(tmp_var_19),Y
		CMP	#1
		ROL	tmp_var_15	;  / Object Counter / various tmp
		LDY	scroll_tilemap_buff+3,X
		LDA	attributes_buff+$1B,X
		AND	(tmp_var_19),Y
		CMP	#1
		ROL	tmp_var_15	;  / Object Counter / various tmp
		LDY	scroll_tilemap_buff+4,X
		LDA	attributes_buff+$1C,X
		AND	(tmp_var_19),Y
		CMP	#1
		ROL	tmp_var_15	;  / Object Counter / various tmp
		LDY	scroll_tilemap_buff+5,X
		LDA	attributes_buff+$1D,X
		AND	(tmp_var_19),Y
		CMP	#1
		ROL	tmp_var_15	;  / Object Counter / various tmp
		LDY	scroll_tilemap_buff+6,X
		LDA	attributes_buff+$1E,X
		AND	(tmp_var_19),Y
		CMP	#1
		ROL	tmp_var_15	;  / Object Counter / various tmp
		LDY	scroll_tilemap_buff+7,X
		LDA	attributes_buff+$1F,X
		AND	(tmp_var_19),Y
		CMP	#1
		LDA	tmp_var_15	;  / Object Counter / various tmp
		ROL	A
		LDY	tmp_var_17
		STA	scroll_tilemap_buff,Y
		TXA
		CLC
		ADC	#8
		TAX
		TYA
		ADC	#$10
		STA	tmp_var_17
		CPX	#$38
		BNE	loc_7000_864A
		SBC	#$6F
		STA	tmp_var_17

loc_7000_86C2:				; ...
		PLA
		STA	tmp_var_19
		DEC	tmp_var_16
		BEQ	loc_7000_86E6
		LDX	Objects_various_flags ;	для пушек ID прицепленного объекта
		BEQ	loc_7000_86E3
		LDA	Vscroll_value	; $00-$EF
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		TAX
		LDA	tbl_for_vscroll,X
		LDX	#0
		EOR	tmp_var_16
		BNE	loc_7000_86E3
		ORA	#7
		STA	banks_ids7+7

loc_7000_86E3:				; ...
		JMP	loc_7000_864A
; ---------------------------------------------------------------------------

loc_7000_86E6:				; ...
		LDX	stackp_save
		TXS
		INC	global_flags
		RTS
; End of function sub_7000_8517


; =============== S U B	R O U T	I N E =======================================


karnath_block_to_restore:		; ...
		LDA	tmp_var_19
		ASL	A
		LDA	tmp_var_1A
		ROL	A
		AND	#3
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	restart_point_id
		ASL	A
		ASL	A
		ADC	tmp_var_15	;  / Object Counter / various tmp
		TAX
		LDY	restart_point_id
		LDA	karnath_l_ptrl,Y
		CLC
		ADC	karnath_arch_off,X ; block type	to restore? (3types?)
		STA	tmp_var_1B
		LDA	karnath_l_ptrh,Y
		ADC	#0
		STA	tmp_var_1C
		LDA	tmp_var_19
		AND	#$7F
		LSR	A
		LSR	A
		LSR	A
		AND	#$FE
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDA	tmp_var_19
		AND	#$7F
		SEC
		SBC	tmp_var_15	;  / Object Counter / various tmp
		TAX
		DEX
		LDY	#$FF

loc_7000_8725:				; ...
		INY
		LDA	(tmp_var_1B),Y
		BMI	loc_7000_8730
		DEX
		BPL	loc_7000_8725
		STA	tmp_var_8d
		RTS
; ---------------------------------------------------------------------------

loc_7000_8730:				; ...
		CMP	#$F0
		BCS	loc_7000_8725
		AND	#$7F
		STA	tmp_var_8d
		INY
		TXA
		SEC
		SBC	(tmp_var_1B),Y
		TAX
		BPL	loc_7000_8725
		RTS
; End of function karnath_block_to_restore

; ---------------------------------------------------------------------------

load_karnathl_slvl:			; ...
		LDA	#0
		STA	PPU_CTRL_REG2	; PPU Control Register #2 (W)
		STA	PPU_CTRL_REG1	; PPU Control Register #1 (W)
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDY	restart_point_id
		LDA	karnath_l_ptrl,Y
		STA	tmp_var_19
		LDA	karnath_l_ptrh,Y
		STA	tmp_var_1A
		TYA
		BEQ	loc_7000_8779
		ASL	A
		ASL	A
		ASL	A
		TAY
		LDA	#$3F
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#8
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDX	#8

loc_7000_876B:				; ...
		LDA	karnath_l_ptrl,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		STA	palette_ram,X
		INY
		INX
		CPX	#$10
		BNE	loc_7000_876B

loc_7000_8779:				; ...
		LDY	#0
		STY	tmp_var_1B
		STY	tmp_var_1F
		STY	tmp_var_20
; ---------------------------------------------------------------------------
byte_7000_8781:	.BYTE $EE, $15,	0	; ...
					; INC tmp_v15_obj_cnt
; ---------------------------------------------------------------------------
		LDA	(tmp_var_19),Y
		BPL	byte_7000_8793
		INY
		AND	#$F
; ---------------------------------------------------------------------------
		.BYTE $8D, $16,	0
		.BYTE $A9, 0, $8D, $15,	0 ; STA	tmp_v15_obj_cnt
byte_7000_8793:	.BYTE $AD, $15,	0	; ...
					; LDA tmp_v15_obj_cnt
; ---------------------------------------------------------------------------
		AND	#1
; ---------------------------------------------------------------------------
		.BYTE $D, $16, 0
; ---------------------------------------------------------------------------
		TAX
		LDA	karnath_leftbord,X
		JSR	write_karn_lvl_block
		LDX	#$E

loc_7000_87A4:				; ...
		LDA	(tmp_var_19),Y
		BPL	loc_7000_87BD
		STX	tmp_var_1C
		AND	#$3F
		PHA
		INY
		LDA	(tmp_var_19),Y
		TAX
		DEX
		PLA

loc_7000_87B3:				; ...
		JSR	write_karn_lvl_block
		DEC	tmp_var_1C
		DEX
		BNE	loc_7000_87B3
		LDX	tmp_var_1C

loc_7000_87BD:				; ...
		INY
		JSR	write_karn_lvl_block
		DEX
		BNE	loc_7000_87A4
; ---------------------------------------------------------------------------
		.BYTE $AD, $15,	0	; LDA tmp_v15_obj_cnt
		.BYTE $29, 1, $D, $16, 0
; ---------------------------------------------------------------------------
		TAX
		LDA	karnath_righbord,X
		JSR	write_karn_lvl_block
		LDA	tmp_var_20
		BEQ	byte_7000_8781
		LDA	tmp_var_1F
		BPL	byte_7000_8781
		RTS

; =============== S U B	R O U T	I N E =======================================


write_karn_lvl_block:			; ...
		STY	tmp_var_1B
		LDY	tmp_var_20
		BNE	loc_7000_87E9
		LDY	tmp_var_1F
		STA	level_ram1,Y	; $600-$700
		BNE	loc_7000_87EE

loc_7000_87E9:				; ...
		LDY	tmp_var_1F
		STA	gfx_buff_adr_h,Y ; $700-$77F

loc_7000_87EE:				; ...
		INC	tmp_var_1F
		BNE	loc_7000_87F4
		INC	tmp_var_20

loc_7000_87F4:				; ...
		LDY	tmp_var_1B
		RTS			; 384 bytes total
; End of function write_karn_lvl_block

; ---------------------------------------------------------------------------
karnath_leftbord:.BYTE $D, $E, $D, $E, $E, $D, $E, $D ;	...
karnath_righbord:.BYTE $D, $E, $E, $D, $D, $E, $E, $D ;	...
karnath_arch_off:.BYTE 0, $29, $51, 0	; ...
		.BYTE 0, $31, $5F, 0	; restore from archive?
		.BYTE 0, $36, $69, 0
		.BYTE 0, $3D, $72, 0
karnath_l_ptrl:	.BYTE $37, $AF,	$43, $E0 ; ...
karnath_l_ptrh:	.BYTE $88, $88,	$89, $89 ; ...
		.BYTE	$F,   4, $14, $24,  $F,	  0, $10, $20
		.BYTE	$F,  $C,   1, $11,  $F,	 $C, $1C, $2C
		.BYTE	$F,   7,   6, $16,  $F,	$16, $26, $36
karnath_l1_cfg:	.BYTE  $F0, $10, $23, $8F,  $B,	$16, $11, $23 ;	packed 384 bytes
		.BYTE  $8F,  $B, $15, $10, $23,	$8F,  $B, $1F
		.BYTE  $11, $23, $8F,  $B, $1E,	$10, $23, $8F
		.BYTE	$B, $20, $11, $23, $8F,	 $B, $15, $1B
		.BYTE  $23, $8F,  $B, $16, $1C,	$23, $8F,  $B
		.BYTE  $15, $26, $23, $8F,  $B,	$16, $1C, $23
		.BYTE  $8F,  $B, $15, $1D, $23,	$8F,  $B, $16
		.BYTE  $11, $23, $8F,  $B, $15,	$10, $23, $8F
		.BYTE	$B, $1F, $11, $23, $8F,	 $B, $1E, $10
		.BYTE  $23, $8F,  $B, $25, $11,	$23, $8F,  $B
		.BYTE  $1E, $10, $23, $8F,  $B,	$20, $F2, $10
		.BYTE  $23, $8F,  $B, $15, $11,	$23, $8F,  $B
		.BYTE  $16, $1B, $23, $8F,  $B,	$15, $1C, $23
		.BYTE  $8F,  $B, $16, $1D, $23,	$8F,  $B, $15
		.BYTE  $12, $93,  $C, $14, $10,	$97,  $C, $15
karnath_l2_cfg:	.BYTE  $F4, $11, $2D, $AC,  $B,	$16, $1B, $2D
		.BYTE  $AC,  $B, $1F, $1C, $2D,	$AC,  $B, $1E
		.BYTE  $26, $2D, $AC,  $B, $20,	$1C, $2D, $AC
		.BYTE	$B, $16, $26, $2D, $AC,	 $B, $15, $1C
		.BYTE  $2D, $AC,  $B, $16, $26,	$2D, $2C, $27
		.BYTE  $2C, $2C, $27, $2C, $2C,	$27, $AC,   3
		.BYTE  $1F, $1C, $2D, $AC,  $B,	$1E, $1D, $2D
		.BYTE  $AC,  $B, $25, $11, $2D,	$AC,  $B, $1E
		.BYTE  $10, $2D, $AC,  $B, $20,	$11, $2D, $AC
		.BYTE	 7, $27, $AC,	3, $16,	$10, $2D, $AC
		.BYTE	$B, $15, $F0, $1B, $2D,	$AC,  $B, $16
		.BYTE  $1C, $2D, $AC,	7, $A7,	  4, $15, $26
		.BYTE  $2D, $AC,   4, $27, $AC,	  6, $1F, $1C
		.BYTE  $2D, $AC,  $B, $1E, $1D,	$2D, $AC,  $B
		.BYTE  $20, $11, $2D, $AC,  $B,	$15, $10, $2D
		.BYTE  $AC,   6, $27, $13, $18,	$19, $1A, $14
		.BYTE  $11, $2D, $AC,	5, $27,	$27, $A4,   4
		.BYTE  $15, $12, $18, $19, $1A,	$A7,   9, $16
		.BYTE  $11, $A4,  $C, $15
karnath_l3_cfg:	.BYTE  $F6, $11, $2B, $AA,  $B,	$15, $1B, $2B
		.BYTE  $AA,   4, $27, $AA,   6,	$1F, $1C, $2B
		.BYTE  $AA,  $B, $1E, $26, $2B,	$2A, $2A, $27
		.BYTE  $AA,   3, $27, $27, $AA,	  3, $25, $1C
		.BYTE  $2B, $AA,  $B, $1E, $26,	$2B, $AA,  $B
		.BYTE  $25, $1C, $2B, $AA,  $B,	$1E, $26, $2B
		.BYTE  $AA,   7, $27, $AA,   3,	$25, $1C, $2B
		.BYTE  $AA,  $B, $1E, $1D, $2B,	$AA,   5, $27
		.BYTE  $AA,   3, $27, $2A, $25,	$11, $2B, $AA
		.BYTE	$B, $1E, $1B, $2B, $2A,	$2A, $A7,   5
		.BYTE  $AA,   4, $20, $1C, $2B,	$AA,  $B, $15
		.BYTE  $26, $2B, $2A, $27, $AA,	  9, $1F, $1C
		.BYTE  $2B, $AA,  $B, $1E, $1D,	$2B, $AA,  $B
		.BYTE  $25, $11, $2B, $AA,  $B,	$1E, $10, $2B
		.BYTE  $AA,   5, $27, $AA,   5,	$20, $11, $2B
		.BYTE  $AA,  $B, $15, $1B, $2B,	$AA,  $B, $16
		.BYTE  $1C, $2B, $AA,	5, $27,	$AA,   5, $15
		.BYTE  $1D, $2B, $27, $2A, $27,	$2A, $A7,   3
		.BYTE  $2A, $27, $2A, $27, $16,	$11, $A7,  $C
		.BYTE  $15, $10, $A7,  $C, $16
karnath_l4_cfg:	.BYTE  $F0, $10, $29, $A8,  $B,	$16, $11, $29
		.BYTE  $A8,   4, $27, $A8,   6,	$15, $10, $29
		.BYTE  $A8,   4, $27, $28, $27,	$A8,   4, $1F
		.BYTE  $11, $29, $A8,	4, $27,	$28, $27, $A8
		.BYTE	 4, $1E, $1B, $29, $A8,	  6, $27, $A8
		.BYTE	 4, $20, $1C, $29, $A8,	 $B, $15, $26
		.BYTE  $29, $A8,   7, $27, $27,	$28, $28, $1F
		.BYTE  $1C, $29, $A8,  $B, $1E,	$26, $29, $28
		.BYTE  $27, $A8,   4, $27, $A8,	  4, $25, $1C
		.BYTE  $29, $A8,  $B, $1E, $26,	$29, $A8,  $B
		.BYTE  $20, $1C, $29, $A8,  $B,	$15, $26, $29
		.BYTE  $A8,  $B, $16, $1C, $29,	$A8,  $B, $15
		.BYTE  $26, $29, $28, $28, $27,	$A8,   3, $27
		.BYTE  $27, $28, $28, $27, $1F,	$1C, $29, $A8
		.BYTE	$B, $1E, $1D, $29, $A8,	 $B, $20, $F4
		.BYTE  $11, $29, $A8,	6, $27,	$A8,   4, $16
		.BYTE  $10, $29, $28, $27, $13,	$A8,   3, $27
		.BYTE  $13, $A8,   3, $15, $11,	$29, $28, $27
		.BYTE  $24, $A8,   3, $27, $24,	$A8,   3, $16
		.BYTE  $10, $29, $28, $27, $28,	$13, $28, $28
		.BYTE  $27, $28, $13, $28, $28,	$15, $11, $29
		.BYTE  $28, $27, $28, $24, $28,	$28, $27, $28
		.BYTE  $24, $28, $28, $1F, $10,	$29, $A8,  $B
		.BYTE  $1E, $11, $27, $A7,  $B,	$20
; ---------------------------------------------------------------------------

loc_7000_8A9E:				; ...
		LDA	#0
		STA	tmp_var_00
		RTS

; =============== S U B	R O U T	I N E =======================================


unpack_tiles_bank7:			; ...
		LDX	tmp_var_15	;  / Object Counter / various tmp
		LDA	#1
		STA	tmp_var_00
		LDA	PPU_STATUS	; PPU Status Register (R)
		LDA	archives_ptrs_bank7,X
		STA	tmp_var_01
		LDA	archives_ptrs_bank7+1,X
		STA	tmp_var_02
		LDY	#0
		LDA	(tmp_var_01),Y
		STA	tmp_var_03
		INY
		LDA	(tmp_var_01),Y
		STA	tmp_var_04
		TYA
		SEC
		ADC	tmp_var_01
		STA	tmp_var_01
		LDA	tmp_var_02
		ADC	#0
		STA	tmp_var_02

loc_7000_8ACD:				; ...
		LDY	#0
		LDA	(tmp_var_01),Y
		BEQ	loc_7000_8A9E
		STA	tmp_var_05
		INY
		LDA	(tmp_var_01),Y
		STA	tmp_var_08
		INY
		LDA	(tmp_var_01),Y
		STA	tmp_var_06	; music	ptr
		INY
		LDA	(tmp_var_01),Y
		STA	tmp_var_07
		TYA
		SEC
		ADC	tmp_var_01
		STA	tmp_var_01
		LDA	tmp_var_02
		ADC	#0
		STA	tmp_var_02
		LDY	#0
		LDA	(tmp_var_06),Y	; music	ptr
		STA	tmp_var_1B
		INY
		LDA	(tmp_var_06),Y	; music	ptr
		STA	tmp_var_1C
		INY
		LDA	tmp_var_04
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	tmp_var_03
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#0
		STA	tmp_var_1A
		LDA	tmp_var_05
		ASL	A
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		ASL	A
		ROL	tmp_var_1A
		STA	tmp_var_19
		CLC
		ADC	tmp_var_03
		STA	tmp_var_03
		LDA	tmp_var_1A
		ADC	tmp_var_04
		STA	tmp_var_04
		LDA	#0
		SEC
		SBC	tmp_var_19
		STA	tmp_var_19
		LDA	#0
		SBC	tmp_var_1A
		STA	tmp_var_1A

loc_7000_8B32:				; ...
		LDA	(tmp_var_06),Y	; music	ptr
		INY
		BNE	loc_7000_8B39
		INC	tmp_var_07

loc_7000_8B39:				; ...
		CMP	tmp_var_1B
		BEQ	loc_7000_8B53
		CMP	tmp_var_1C
		BEQ	loc_7000_8B4F
		STA	PPU_DATA	; VRAM I/O Register (RW)
		INC	tmp_var_19
		BNE	loc_7000_8B32
		INC	tmp_var_1A
		BNE	loc_7000_8B32

loc_7000_8B4C:				; ...
		JMP	loc_7000_8ACD
; ---------------------------------------------------------------------------

loc_7000_8B4F:				; ...
		LDX	#$FF
		BNE	loc_7000_8B55

loc_7000_8B53:				; ...
		LDX	#0

loc_7000_8B55:				; ...
		LDA	(tmp_var_06),Y	; music	ptr
		STA	tmp_var_05
		INY
		BNE	loc_7000_8B5E
		INC	tmp_var_07

loc_7000_8B5E:				; ...
		STX	PPU_DATA	; VRAM I/O Register (RW)
		INC	tmp_var_19
		BNE	loc_7000_8B69
		INC	tmp_var_1A
		BEQ	loc_7000_8B4C

loc_7000_8B69:				; ...
		DEC	tmp_var_05
		BNE	loc_7000_8B5E
		BEQ	loc_7000_8B32
; End of function unpack_tiles_bank7

; ---------------------------------------------------------------------------
archives_ptrs_bank7:.WORD title_screen_set ; ...
		.WORD title_screen_set_
		.WORD word_7000_8BC8
		.WORD word_7000_8BD3
		.WORD planA_gfx_set
		.WORD planB_gfx_set
		.WORD planC_gfx_set
		.WORD planD_gfx_set
		.WORD word_7000_8BFA
		.WORD word_7000_8C01
		.WORD word_7000_8C08
		.WORD word_7000_8C0F
		.WORD word_7000_8C16
		.WORD word_7000_8C1D
		.WORD word_7000_8C24
		.WORD word_7000_8B97
		.WORD word_7000_8B9E
		.WORD word_7000_8BA5
		.WORD word_7000_8BAC
		.WORD word_7000_8BB3
word_7000_8B97:	.WORD $2A0		; ...
		.BYTE $40
		.BYTE 4
		.WORD clign_wing_obj_gfx
		.BYTE 0
word_7000_8B9E:	.WORD $690		; ...
		.BYTE $15
		.BYTE 4
		.WORD gen_slaughter_gfx
		.BYTE 0
word_7000_8BA5:	.WORD $C00		; ...
		.BYTE $26
		.BYTE 4
		.WORD rev_obj_gfx
		.BYTE 0
word_7000_8BAC:	.WORD $4C0		; ...
		.BYTE $C
		.BYTE 4
		.WORD byte_7000_92A1
		.BYTE 0
word_7000_8BB3:	.WORD $C00		; ...
		.BYTE $13
		.BYTE 4
		.WORD byte_7000_9310
		.BYTE 0
title_screen_set:.WORD 0		; ...
		.BYTE $C2
		.BYTE 4
		.WORD title_screen_tiles
		.BYTE 0
title_screen_set_:.WORD	$1000		; ...
		.BYTE $C2
		.BYTE 4
		.WORD title_screen_tiles
		.BYTE 0
word_7000_8BC8:	.WORD $1000		; ...
		.BYTE $F7
		.BYTE 4
		.WORD starship_panel_gfx
		.BYTE 9
		.BYTE 4
		.WORD byte_7000_ACEC
		.BYTE 0
word_7000_8BD3:	.WORD $AE0		; ...
		.BYTE $52
		.BYTE 4
		.WORD byte_7000_AD46
		.BYTE 0
planA_gfx_set:	.WORD $1000		; ...
		.BYTE $D4
		.BYTE 4
		.WORD plan_A_gfx
		.BYTE 0
planB_gfx_set:	.WORD $1000		; ...
		.BYTE $D4
		.BYTE 4
		.WORD plan_B_gfx
		.BYTE 0
planC_gfx_set:	.WORD $1000		; ...
		.BYTE $2E
		.BYTE 4
		.WORD plan_B_gfx
		.BYTE $A6
		.BYTE 4
		.WORD plan_C_gfx
		.BYTE 0
planD_gfx_set:	.WORD $1000		; ...
		.BYTE $D4
		.BYTE 4
		.WORD plan_D_gfx
		.BYTE 0
word_7000_8BFA:	.WORD $1D50		; ...
		.BYTE $2B
		.BYTE 4
		.WORD bt_small_logo_gfx
		.BYTE 0
word_7000_8C01:	.WORD $400		; ...
		.BYTE $20
		.BYTE 4
		.WORD byte_7000_DAFC
		.BYTE 0
word_7000_8C08:	.WORD 0			; ...
		.BYTE $FF
		.BYTE 4
		.WORD starship_gfx
		.BYTE 0
word_7000_8C0F:	.WORD $1000		; ...
		.BYTE $FF
		.BYTE 4
		.WORD starship_gfx2
		.BYTE 0
word_7000_8C16:	.WORD $800		; ...
		.BYTE $7C
		.BYTE 4
		.WORD angelika_pimple_spacecar
		.BYTE 0
word_7000_8C1D:	.WORD $1400		; ...
		.BYTE $BF
		.BYTE 4
		.WORD angelika_pimple_in_space
		.BYTE 0
word_7000_8C24:	.WORD $1810		; ...
		.BYTE $1C
		.BYTE 4
		.WORD galaxy_end_gfx
		.BYTE 0

; =============== S U B	R O U T	I N E =======================================


some_lvls_inits:			; ...
		LDX	#7
		LDA	Level_ID
		CMP	#TurboTunnel
		BEQ	loc_7000_8C4B
		LDX	#$B
		CMP	#volkmire_inferno
		BEQ	loc_7000_8C4B
		LDX	#$13
		CMP	#revolution
		BEQ	loc_7000_8C47
		LDX	#3
		CMP	#karnath_lair
		BNE	loc_7000_8C4B
		LDX	#$F

loc_7000_8C47:				; ...
		LDA	#$80
		STA	extra_vblank_flags ; $80-extra vblank; 1-parallax animations

loc_7000_8C4B:				; ...
		LDY	#3

load_lvl_spr0_dat:			; ...
		LDA	lvls_spr0_cfgs,X
		STA	Sprites_Ypos,Y
		DEX
		DEY
		BPL	load_lvl_spr0_dat
		LDX	#0

clear_objtmp_ids:			; ...
		TXA
		STA	obj_slotIDs_for_spr,X ;	not really used/removed	in BTDD
		INX
		CPX	#$F
		BNE	clear_objtmp_ids
		LDA	#$10
		STA	gfxcopy_vram_ptrl ; $10	for pl;	$C0/$80	anims
		LDX	#$82

loc_7000_8C67:				; ...
		LDA	gfx_copy_code -	$82,X ;	code to	be copied in RAM $782
		STA	gfx_buff_adr_h,X ; 782
		INX
		BNE	loc_7000_8C67
		STX	gfxcopy_vram_ptrh ; $00	or $01 for pl; $16 - anims
		LDA	Level_ID
		CMP	#wookie_hole
		BNE	locret_7000_8C8E
		LDY	#0

loc_7000_8C7A:				; ...
		LDA	level2_anim_tiles,Y
		STA	level_ram1,Y
		INY
		BNE	loc_7000_8C7A

loc_7000_8C83:				; ...
		LDA	level2_anim_code_loop,Y
		STA	gfx_buff_adr_h,Y
		INY
		CPY	#$81
		BNE	loc_7000_8C83

locret_7000_8C8E:			; ...
		RTS
; End of function some_lvls_inits

; ---------------------------------------------------------------------------
lvls_spr0_cfgs:	.BYTE  $1C,   0, $40, $FE ; ...
		.BYTE  $8C, $81,   0,	6
		.BYTE  $92, $81, $60,	3
		.BYTE  $27,   0, $40, $FE
		.BYTE  $27,   0, $40, $FE

; =============== S U B	R O U T	I N E =======================================

; code to be copied in RAM $782

gfx_copy_code:				; ...
		LDA	#$12		; bank with char gfx
		STA	banks_ids7+$12
		LDA	gfxcopy_vram_ptrh ; $00	or $01 for pl; $16 - anims
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	gfxcopy_vram_ptrl ; $10	for pl;	$C0/$80	anims
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#0
		CLC
		TAX

loc_7000_8CB6:				; ...
		LDY	gfx_copy_code,X	; code to be copied in RAM $782
		STY	PPU_DATA	; VRAM I/O Register (RW)
		LDY	gfx_copy_code,X	; code to be copied in RAM $782
		STY	PPU_DATA	; VRAM I/O Register (RW)
		LDY	gfx_copy_code,X	; code to be copied in RAM $782
		STY	PPU_DATA	; VRAM I/O Register (RW)
		LDY	gfx_copy_code,X	; code to be copied in RAM $782
		STY	PPU_DATA	; VRAM I/O Register (RW)
		LDY	gfx_copy_code,X	; code to be copied in RAM $782
		STY	PPU_DATA	; VRAM I/O Register (RW)
		LDY	gfx_copy_code,X	; code to be copied in RAM $782
		STY	PPU_DATA	; VRAM I/O Register (RW)
		LDY	gfx_copy_code,X	; code to be copied in RAM $782
		STY	PPU_DATA	; VRAM I/O Register (RW)
		LDY	gfx_copy_code,X	; code to be copied in RAM $782
		STY	PPU_DATA	; VRAM I/O Register (RW)
		LDY	gfx_copy_code,X	; code to be copied in RAM $782
		STY	PPU_DATA	; VRAM I/O Register (RW)
		LDY	gfx_copy_code,X	; code to be copied in RAM $782
		STY	PPU_DATA	; VRAM I/O Register (RW)
		LDY	gfx_copy_code,X	; code to be copied in RAM $782
		STY	PPU_DATA	; VRAM I/O Register (RW)
		LDY	gfx_copy_code,X	; code to be copied in RAM $782
		STY	PPU_DATA	; VRAM I/O Register (RW)
		LDY	gfx_copy_code,X	; code to be copied in RAM $782
		STY	PPU_DATA	; VRAM I/O Register (RW)
		LDY	gfx_copy_code,X	; code to be copied in RAM $782
		STY	PPU_DATA	; VRAM I/O Register (RW)
		LDY	gfx_copy_code,X	; code to be copied in RAM $782
		STY	PPU_DATA	; VRAM I/O Register (RW)
		LDY	gfx_copy_code,X	; code to be copied in RAM $782
		STY	PPU_DATA	; VRAM I/O Register (RW)
		ADC	#$10
		TAX
		BNE	loc_7000_8CB6
		LDA	#$10		; back to bank 0
		STA	banks_ids7+$10
		RTS
; End of function gfx_copy_code

; ---------------------------------------------------------------------------
level2_anim_tiles:
 incbin	gfx\level2_anim.chr
; level2_anim_tiles

; =============== S U B	R O U T	I N E =======================================


level2_anim_code:
		LSR	A
		AND	#$1F
		TAY
		LDA	#$19
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#$F0
		STA	PPU_ADDRESS	; VRAM Address Register	#2 (W2)
		LDA	#0

level2_anim_code_loop:			; ...
		STA	tmp_var_15	;  / Object Counter / various tmp
		LDX	#4

level2_anim_code_loop2:			; ...
		LDA	level_ram1,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	level_ram1+1,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	level_ram1+2,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	level_ram1+3,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	level_ram1+4,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	level_ram1+5,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	level_ram1+6,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	level_ram1+7,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	level_ram2+$38,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	level_ram2+$39,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	level_ram2+$3A,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	level_ram2+$3B,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	level_ram2+$3C,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	level_ram2+$3D,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	level_ram2+$3E,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		LDA	level_ram2+$3F,Y
		STA	PPU_DATA	; VRAM I/O Register (RW)
		TYA
		SEC
		SBC	tmp_var_15	;  / Object Counter / various tmp
		ADC	#7
		AND	#$1F
		ADC	tmp_var_15	;  / Object Counter / various tmp
		TAY
		DEX
		BNE	level2_anim_code_loop2
		CLC
		ADC	#$28
		TAY
		LDA	tmp_var_15	;  / Object Counter / various tmp
		ADC	#$28
		CMP	#$78
		BNE	level2_anim_code_loop
		LDX	#$6B
		RTS
; End of function level2_anim_code

; ---------------------------------------------------------------------------
byte_7000_8EA2:	.BYTE $20		; ...
byte_7000_8EA3:	.BYTE $80		; ...
byte_7000_8EA4:	.BYTE $C0		; ...
byte_7000_8EA5:	.BYTE 0			; ...
byte_7000_8EA6:	.BYTE 0			; ...
		.BYTE  $40,   0,   0,	0,   0
		.BYTE  $18, $68, $C0,	0,   0
		.BYTE  $40,   0,   0,	0,   0
		.BYTE  $40, $80, $80,	4,   0
		.BYTE  $80, $80, $A0,	0, $18
		.BYTE	 0, $20, $80, $C0,   0
		.BYTE	 0, $70,   0,	0,   0
		.BYTE	 0, $80, $80, $80,   0
		.BYTE  $10,   0, $18,	0, $F0
		.BYTE	 0,   0, $70, $80,   0
		.BYTE	 0,   0, $80,	0, $80
		.BYTE	 0, $18,   0, $10, $80
		.BYTE  $F0,   0, $F0, $40,   0
		.BYTE	 0,   0,   8, $80, $80
		.BYTE  $F0,   0,   0,	0

; =============== S U B	R O U T	I N E =======================================


sub_7000_8EF1:				; ...
		LDX	Object_RamSlotID_tmp ; id saved	for objects functions
		LDY	objects_some_anim,X ; some obj X speed
		LDA	byte_7000_8EA2,Y
		STA	Objects_cnt2,X
		LDA	byte_7000_8EA3,Y
		STA	Objects_dir,X	; / angle
		LDA	byte_7000_8EA4,Y
		STA	Objects_X_speed,X
		LDA	byte_7000_8EA5,Y
		STA	Objects_cnt3,X
		LDA	byte_7000_8EA6,Y
		STA	Objects_AnimID,X ; номер движения для запуска
		TYA
		CLC
		ADC	#5
		STA	objects_some_anim,X ; some obj X speed
		RTS
; End of function sub_7000_8EF1

; ---------------------------------------------------------------------------

gen_slaughter_gfx
 incbin	gfx\gen_slaughter.4
rev_obj_gfx
 incbin	gfx\rev_obj.4
byte_7000_92A1
 incbin	gfx\byte_7000_92A1.4
byte_7000_9310
 incbin	gfx\byte_7000_9310.4
clign_wing_obj_gfx
 incbin	gfx\clign_wing_obj.4
title_screen_tiles
 incbin	gfx\title_screen.4
starship_panel_gfx
 incbin	gfx\starship_panel.4
byte_7000_ACEC
 incbin	gfx\byte_7000_ACEC.4
byte_7000_AD46
 incbin	gfx\byte_7000_AD46.4
plan_A_gfx
 incbin	gfx\plan_A_gfx.4
plan_B_gfx
 incbin	gfx\plan_B_gfx.4
plan_C_gfx
 incbin	gfx\plan_C_gfx.4
plan_D_gfx
 incbin	gfx\plan_D_gfx.4
bt_small_logo_gfx
 incbin	gfx\bt_small_logo.4
byte_7000_DAFC
 incbin	gfx\byte_7000_DAFC.4
starship_gfx
 incbin	gfx\starship.4
starship_gfx2
 incbin	gfx\starship2.4
galaxy_end_gfx
 incbin	gfx\galaxy_end.4
angelika_pimple_in_space
 incbin	gfx\pimple_in_space.4
angelika_pimple_spacecar
 incbin	gfx\pimple_spacecar.4

; gen_slaughter_gfx
; rev_obj_gfx
; byte_7000_92A1
; byte_7000_9310
; clign_wing_obj_gfx
; title_screen_tiles
; starship_panel_gfx
; byte_7000_ACEC
; byte_7000_AD46
; plan_A_gfx
; plan_B_gfx
; plan_C_gfx
; plan_D_gfx
; bt_small_logo_gfx
; byte_7000_DAFC
; starship_gfx
; starship_gfx2
; galaxy_end_gfx
; angelika_pimple_in_space
; angelika_pimple_spacecar

; =============== S U B	R O U T	I N E =======================================


		; public IRQ
IRQ:					; ...
		RTI
; End of function IRQ

; ---------------------------------------------------------------------------
bank7_end:
 .PAD $FF78,$FF
; bank7_end
; ---------------------------------------------------------------------------
		STA	banks_ids7+3
		JSR	bank7_end
		LDA	#0
		STA	banks_ids7
		RTS
; ---------------------------------------------------------------------------
		STA	prev_bank_id_m	; saves	mirror,	when jump from bank 0 to bank3 to music	f
		AND	#$10
		ORA	#3
		TAY
		STA	banks_ids7,Y
		JSR	bank7_end
		LDA	prev_bank_id_m	; saves	mirror,	when jump from bank 0 to bank3 to music	f
		TAY
		STA	banks_ids7,Y
		RTS

; =============== S U B	R O U T	I N E =======================================


		; public NMI
NMI:					; ...
		STX	NMI_Xreg_saver
		STA	NMI_Areg_saver
		LDA	#7
		LDX	#0
		STX	banks_ids7
		JMP	IRQ
; End of function NMI

; ---------------------------------------------------------------------------
		LDX	NMI_Xreg_saver
		LDA	previous_bankID_NMI
		TAY
		STA	banks_ids7,Y
		LDY	NMI_Yreg_saver
		LDA	NMI_Areg_saver
		RTI
; ---------------------------------------------------------------------------
banks_ids7:	.BYTE 0, 1, 2, 3, 4, 5,	6, 7, 8, 9, $A,	$B, $C,	$D, $E,	$F, $10, $11, $12, $13,	$14, $15, $16, $17 ; ...
; ---------------------------------------------------------------------------
		LDA	#0
		ORA	#7
		STA	previous_bankID
		LDA	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		PHA
		STX	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		LDA	banks_ids7,Y
		STA	banks_ids7,Y
		JSR	sub_7000_8000
		LDY	previous_bankID
		PLA
		STA	JumpTable_ptr_main ; указатель на функцию при переходе в другой	банк
		LDA	banks_ids7,Y
		STA	banks_ids7,Y
		RTS
; ---------------------------------------------------------------------------

wait7:					; ...
		DEX
		BNE	wait7
		DEY
		BNE	wait7
		RTS

; =============== S U B	R O U T	I N E =======================================


		; public RESET
RESET:					; ...
		LDA	#0
		STA	banks_ids7
		JMP	RESET
; End of function RESET

; ---------------------------------------------------------------------------
		.WORD NMI
		.WORD RESET
		.WORD IRQ
; BANK7:FFFE
